{"version":3,"file":"Button.stories-b3bb77e8.js","sources":["../../../packages/button/src/lib/Button.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport { Button as MUIButton, ButtonPropsColorOverrides } from '@mui/material';\nimport type { ButtonProps as MUIButtonProps } from '@mui/material';\n\ndeclare module '@mui/material/Button' {\n  interface ButtonPropsColorOverrides {\n    tertiary: true;\n  }\n}\n\nexport type ButtonProps = {\n  /** The color of the component.\n   * @default secondary */\n  color?: 'primary' | 'secondary' | 'tertiary';\n} & Omit<\n  MUIButtonProps,\n  | 'color'\n  | 'component'\n  | 'variant'\n  | 'disableElevation'\n  | 'disableFocusRipple'\n  | 'disableTouchRipple'\n  | 'centerRipple'\n  | 'disableRipple'\n  | 'focusRipple'\n  | 'TouchRippleProps'\n  | 'touchRippleRef'\n>;\n\nconst overrideProps = {\n  disableRipple: true,\n  disableFocusRipple: true,\n  disableTouchRipple: true,\n};\n\nexport const Button = forwardRef<HTMLButtonElement, ButtonProps>((props, ref) => {\n  return <MUIButton {...props} {...overrideProps} ref={ref} />;\n});\n"],"names":["overrideProps","Button","forwardRef","props","ref","jsx","MUIButton"],"mappings":"8lCA6BA,MAAAA,EAAA,CAAsB,cAAA,GACL,mBAAA,GACK,mBAAA,EAEtB,EAEOC,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IACLC,EAAAC,EAAA,CAAA,GAAAH,EAAA,GAAAH,EAAA,IAAAI,CAAA,CAAA,CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}