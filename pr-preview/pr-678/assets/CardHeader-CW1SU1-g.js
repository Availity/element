import{j as e}from"./jsx-runtime-CcL-W3nW.js";import{S as n}from"./index-Dt-LnR5a.js";import{C as u}from"./CardHeader-Cv5yGHTT.js";const i=({titleTypographyProps:r,subheaderTypographyProps:d,statusChipProps:a,action:t,subheader:s,title:o,logo:l,...p})=>e.jsx(u,{...p,title:l?e.jsxs(e.Fragment,{children:[l,e.jsx("br",{}),o]}):o,titleTypographyProps:{...r,variant:"h5"},subheaderTypographyProps:{...d,variant:"body2"},subheader:a&&a.position==="bottom"?e.jsxs(e.Fragment,{children:[s,e.jsx("br",{}),e.jsx(n,{...a})]}):s,action:a&&a.position==="right"?e.jsxs(e.Fragment,{children:[e.jsx(n,{...a}),t]}):t});try{i.displayName="CardHeader",i.__docgenInfo={description:"",displayName:"CardHeader",props:{statusChipProps:{defaultValue:null,description:"These props will be forwarded to the StatusChip.",name:"statusChipProps",required:!1,type:{name:"CardStatusChipProps"}},logo:{defaultValue:null,description:"Section at the top-right of the card for displaying logos.",name:"logo",required:!1,type:{name:"ReactNode"}},action:{defaultValue:null,description:"The action to display in the card header.",name:"action",required:!1,type:{name:"ReactNode"}},avatar:{defaultValue:null,description:"The Avatar element to display.",name:"avatar",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<CardHeaderClasses> & Partial<ClassNameMap<never>>"}},disableTypography:{defaultValue:{value:"false"},description:"If `true`, `subheader` and `title` won't be wrapped by a Typography component.\nThis can be useful to render an alternative Typography variant by wrapping\nthe `title` text, and optional `subheader` text\nwith the Typography component.",name:"disableTypography",required:!1,type:{name:"boolean"}},subheader:{defaultValue:null,description:"The content of the component.",name:"subheader",required:!1,type:{name:"ReactNode"}},subheaderTypographyProps:{defaultValue:null,description:"These props will be forwarded to the subheader\n(as long as disableTypography is not `true`).\n@deprecated Use `slotProps.subheader` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"subheaderTypographyProps",required:!1,type:{name:'TypographyProps<"span", { component?: "span"; }>'}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},title:{defaultValue:null,description:"The content of the component.",name:"title",required:!1,type:{name:"ReactNode"}},titleTypographyProps:{defaultValue:null,description:"These props will be forwarded to the title\n(as long as disableTypography is not `true`).\n@deprecated Use `slotProps.title` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"titleTypographyProps",required:!1,type:{name:'TypographyProps<"span", { component?: "span"; }>'}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"Partial<CardHeaderSlots>"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:"{ root?: SlotProps<ElementType<DetailsHTMLAttributes<HTMLDivElement>, keyof IntrinsicElements>, CardHeaderRootSlotPropsOverrides, CardHeaderOwnerState>; ... 4 more ...; subheader?: SlotProps<...>; }"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}}}}}catch{}export{i as C};
