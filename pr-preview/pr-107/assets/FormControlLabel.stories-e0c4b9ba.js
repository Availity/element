import{j as o,a as c}from"./jsx-runtime-390e5fc8.js";import{F as J}from"./FormLabel-e7a5ef09.js";import{r as s}from"./index-570b25c1.js";import{F as K}from"./FieldHelpIcon-ce556f54.js";import{B as H}from"./Box-f536527f.js";import{M as Q}from"./FormControlLabel-eb87f144.js";import{S as X,C as d}from"./Checkbox-4556ddb0.js";import{F as k}from"./FormGroup-8b6649e5.js";import{F as w}from"./FormControl-b6d985f2.js";import{M as ee}from"./FormLabel-d259d2bd.js";import{u as oe}from"./useControlled-9b1271e0.js";import{u as re}from"./useId-6f4bfce0.js";import{u as ae}from"./useForkRef-153a0a89.js";import{s as v,g as te,b as ne,r as le,c as ie,a as se}from"./styled-52ae1682.js";import{e as j,b as ce,c as de}from"./useThemeProps-09701b40.js";import{c as A}from"./createSvgIcon-cde3b626.js";import{c as ue}from"./createChainedFunction-0bab83cf.js";import"./_commonjsHelpers-042e6b4d.js";import"./index-9681c8ff.js";import"./index-4568ef93.js";import"./faCircleArrowRight-2a86424a.js";import"./faMagnifyingGlass-2576db7f.js";import"./SvgIcon-33a08535.js";import"./index-1df17b3b.js";import"./Button-04ac7f3f.js";import"./ButtonBase-d82e3f0a.js";import"./emotion-react.browser.esm-7b849601.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-16f43d9e.js";import"./useIsFocusVisible-5e7b1ff1.js";import"./useEnhancedEffect-460150e6.js";import"./Tooltip-863be512.js";import"./useTheme-a833130b.js";import"./ownerDocument-613eb639.js";import"./index-8a077077.js";import"./useSlotProps-163bc2ac.js";import"./isHostComponent-73d6e646.js";import"./utils-237e8b7d.js";import"./IconButton-01452f88.js";import"./LoadingButton-ef204a6f.js";import"./extendSxProp-5906c526.js";import"./utils-3d35716f.js";import"./Typography-fc5866ec.js";const pe=A(o("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}),"RadioButtonUnchecked"),me=A(o("path",{d:"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"}),"RadioButtonChecked"),fe=v("span")({position:"relative",display:"flex"}),be=v(pe)({transform:"scale(1)"}),he=v(me)(({theme:e,ownerState:r})=>({left:0,position:"absolute",transform:"scale(0)",transition:e.transitions.create("transform",{easing:e.transitions.easing.easeIn,duration:e.transitions.duration.shortest}),...r.checked&&{transform:"scale(1)",transition:e.transitions.create("transform",{easing:e.transitions.easing.easeOut,duration:e.transitions.duration.shortest})}}));function W(e){const{checked:r=!1,classes:a={},fontSize:n}=e,l={...e,checked:r};return c(fe,{className:a.root,ownerState:l,children:[o(be,{fontSize:n,className:a.background,ownerState:l}),o(he,{fontSize:n,className:a.dot,ownerState:l})]})}const Ce=s.createContext(void 0),Y=Ce;function ge(){return s.useContext(Y)}function ye(e){return ne("MuiRadio",e)}const Fe=te("MuiRadio",["root","checked","disabled","colorPrimary","colorSecondary"]),T=Fe,Re=e=>{const{classes:r,color:a}=e,n={root:["root",`color${j(a)}`]};return{...r,...se(n,ye,r)}},ke=v(X,{shouldForwardProp:e=>le(e)||e==="classes",name:"MuiRadio",slot:"Root",overridesResolver:(e,r)=>{const{ownerState:a}=e;return[r.root,r[`color${j(a.color)}`]]}})(({theme:e,ownerState:r})=>({color:(e.vars||e).palette.text.secondary,...!r.disableRipple&&{"&:hover":{backgroundColor:e.vars?`rgba(${r.color==="default"?e.vars.palette.action.activeChannel:e.vars.palette[r.color].mainChannel} / ${e.vars.palette.action.hoverOpacity})`:ce(r.color==="default"?e.palette.action.active:e.palette[r.color].main,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},...r.color!=="default"&&{[`&.${T.checked}`]:{color:(e.vars||e).palette[r.color].main}},[`&.${T.disabled}`]:{color:(e.vars||e).palette.action.disabled}}));function ve(e,r){return typeof r=="object"&&r!==null?e===r:String(e)===String(r)}const _=o(W,{checked:!0}),P=o(W,{}),xe=s.forwardRef(function(r,a){var n,l;const p=de({props:r,name:"MuiRadio"}),{checked:x,checkedIcon:m=_,color:I="primary",icon:S=P,name:f,onChange:h,size:u="medium",className:L,...C}=p,g={...p,color:I,size:u},i=Re(g),b=ge();let q=x;const Z=ue(h,b&&b.onChange);let G=f;return b&&(typeof q>"u"&&(q=ve(b.value,p.value)),typeof G>"u"&&(G=b.name)),o(ke,{type:"radio",icon:s.cloneElement(S,{fontSize:(n=P.props.fontSize)!=null?n:u}),checkedIcon:s.cloneElement(m,{fontSize:(l=_.props.fontSize)!=null?l:u}),ownerState:g,classes:i,name:G,checked:q,onChange:Z,ref:a,className:ie(i.root,L),...C})}),V=xe,Ie=s.forwardRef(function(r,a){const{actions:n,children:l,defaultValue:p,name:x,onChange:m,value:I,...S}=r,f=s.useRef(null),[h,u]=oe({controlled:I,default:p,name:"RadioGroup"});s.useImperativeHandle(n,()=>({focus:()=>{let i=f.current.querySelector("input:not(:disabled):checked");i||(i=f.current.querySelector("input:not(:disabled)")),i&&i.focus()}}),[]);const L=ae(a,f),C=re(x),g=s.useMemo(()=>({name:C,onChange(i){u(i.target.value),m&&m(i,i.target.value)},value:h}),[C,m,u,h]);return o(Y.Provider,{value:g,children:o(k,{role:"radiogroup",ref:L,...S,children:l})})}),Se=Ie,t=s.forwardRef(({helpTopicId:e,id:r,...a},n)=>{const l=r||(a.htmlFor?`${a.htmlFor}-label`:void 0);return c(H,{children:[o(Q,{id:l,...a,ref:n}),e?o(K,{helpTopicId:"12345",labelId:l}):null]})});try{t.displayName="FormControlLabel",t.__docgenInfo={description:"",displayName:"FormControlLabel",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<FormControlLabelClasses>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},label:{defaultValue:null,description:"A text or an element to be used in an enclosing label element.",name:"label",required:!0,type:{name:"ReactNode"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Callback fired when the state is changed.\n@param event The event source of the callback.\nYou can pull out the new checked state by accessing `event.target.checked` (boolean).",name:"onChange",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>, checked: boolean) => void"}},disabled:{defaultValue:null,description:"If `true`, the control is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:'{ typography?: TypographyProps<"span", {}>; }'}},value:{defaultValue:null,description:"The value of the component.",name:"value",required:!1,type:{name:"unknown"}},disableTypography:{defaultValue:null,description:"If `true`, the label is rendered as it is passed without an additional typography node.",name:"disableTypography",required:!1,type:{name:"boolean"}},checked:{defaultValue:null,description:"If `true`, the component appears selected.",name:"checked",required:!1,type:{name:"boolean"}},inputRef:{defaultValue:null,description:"Pass a ref to the `input` element.",name:"inputRef",required:!1,type:{name:"Ref<any>"}},required:{defaultValue:null,description:"If `true`, adds required to control. (No required asterisk on individual controls in the group)",name:"required",required:!1,type:{name:"boolean"}},helpTopicId:{defaultValue:null,description:"Adds `FieldHelpIcon` next to the label (should not be within label for accessibility)",name:"helpTopicId",required:!1,type:{name:"string"}},control:{defaultValue:null,description:"A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.",name:"control",required:!0,type:{name:"ReactElement<any, any>"}}}}}catch{}const ho={title:"Components/FormUtils/FormControlLabel",component:t,tags:["autodocs"],parameters:{docs:{description:{component:"Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component to display a label."}}}},y={render:e=>o(t,{...e}),args:{label:"Label",required:!0,control:o(d,{})}},F={render:()=>c(k,{children:[o(t,{control:o(d,{}),label:"Default"}),o(t,{helpTopicId:"1234",control:o(d,{}),label:"With FieldHelpIcon"}),o(t,{disabled:!0,control:o(d,{}),label:"Disabled"}),o(w,{error:!0,children:o(k,{children:o(t,{control:o(d,{}),label:"Error (Only visible in FormControl group)"})})})]})},R={render:()=>c(H,{display:"flex",flexDirection:"column",children:[c(w,{component:"fieldset","aria-labelledby":"checkbox-group",children:[o(ee,{component:"legend",id:"checkbox-group",children:"Checkbox Group"}),c(k,{row:!0,children:[o(t,{control:o(d,{}),label:"Check 1"}),o(t,{control:o(d,{}),label:"Check 2",helpTopicId:"2"}),o(t,{control:o(d,{}),label:"Check 3"})]})]}),c(w,{required:!0,error:!0,children:[o(J,{id:"radio-group",helpTopicId:"12",children:"Radio Group"}),c(Se,{"aria-labelledby":"radio-group",name:"radio-group",defaultValue:"3",children:[o(t,{control:o(V,{}),value:"1",label:"Radio 1"}),o(t,{control:o(V,{}),value:"2",label:"Radio 2"}),o(t,{control:o(V,{}),value:"3",label:"Radio 3"})]})]})]})};var B,$,M;y.parameters={...y.parameters,docs:{...(B=y.parameters)==null?void 0:B.docs,source:{originalSource:`{
  render: (args: FormControlLabelProps) => <FormControlLabel {...args} />,
  args: {
    label: 'Label',
    required: true,
    control: <Checkbox />
  }
}`,...(M=($=y.parameters)==null?void 0:$.docs)==null?void 0:M.source}}};var E,z,N;F.parameters={...F.parameters,docs:{...(E=F.parameters)==null?void 0:E.docs,source:{originalSource:`{
  render: () => <FormGroup>
      <FormControlLabel control={<Checkbox />} label="Default" />
      <FormControlLabel helpTopicId="1234" control={<Checkbox />} label="With FieldHelpIcon" />
      <FormControlLabel disabled control={<Checkbox />} label="Disabled" />
      {/* Error state not available on individual control, must be within FormControl. */}
      <FormControl error>
        <FormGroup>
          <FormControlLabel control={<Checkbox />} label="Error (Only visible in FormControl group)" />
        </FormGroup>
      </FormControl>
    </FormGroup>
}`,...(N=(z=F.parameters)==null?void 0:z.docs)==null?void 0:N.source}}};var D,O,U;R.parameters={...R.parameters,docs:{...(D=R.parameters)==null?void 0:D.docs,source:{originalSource:`{
  render: () => <Box display="flex" flexDirection="column">
      <FormControl component="fieldset" aria-labelledby="checkbox-group">
        <MuiFormLabel component="legend" id="checkbox-group">
          Checkbox Group
        </MuiFormLabel>
        <FormGroup row>
          <FormControlLabel control={<Checkbox />} label="Check 1" />
          <FormControlLabel control={<Checkbox />} label="Check 2" helpTopicId="2" />
          <FormControlLabel control={<Checkbox />} label="Check 3" />
        </FormGroup>
      </FormControl>
      <FormControl required error>
        <FormLabel id="radio-group" helpTopicId="12">
          Radio Group
        </FormLabel>
        <RadioGroup aria-labelledby="radio-group" name="radio-group" defaultValue="3">
          <FormControlLabel control={<Radio />} value="1" label="Radio 1" />
          <FormControlLabel control={<Radio />} value="2" label="Radio 2" />
          <FormControlLabel control={<Radio />} value="3" label="Radio 3" />
        </RadioGroup>
      </FormControl>
    </Box>
}`,...(U=(O=R.parameters)==null?void 0:O.docs)==null?void 0:U.source}}};const Co=["_FormLabel","_States","_Groups"];export{y as _FormLabel,R as _Groups,F as _States,Co as __namedExportsOrder,ho as default};
//# sourceMappingURL=FormControlLabel.stories-e0c4b9ba.js.map
