{"version":3,"file":"TabPanel-8fcd257a.js","sources":["../../../packages/divider/dist/index.mjs","../../../node_modules/@mui/lab/TabPanel/tabPanelClasses.js","../../../node_modules/@mui/lab/TabPanel/TabPanel.js","../../../packages/tabs/src/lib/TabPanel.tsx"],"sourcesContent":["// src/lib/Divider.tsx\nimport { Divider as MuiDivider } from \"@mui/material\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Divider = (props) => {\n  return /* @__PURE__ */ jsx(MuiDivider, {\n    ...props\n  });\n};\nexport {\n  Divider\n};\n","import generateUtilityClass from '@mui/material/generateUtilityClass';\nimport generateUtilityClasses from '@mui/material/generateUtilityClasses';\nexport function getTabPanelUtilityClass(slot) {\n  return generateUtilityClass('MuiTabPanel', slot);\n}\nconst tabPanelClasses = generateUtilityClasses('MuiTabPanel', ['root']);\nexport default tabPanelClasses;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { getTabPanelUtilityClass } from './tabPanelClasses';\nimport { getPanelId, getTabId, useTabContext } from '../TabContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getTabPanelUtilityClass, classes);\n};\nconst TabPanelRoot = styled('div', {\n  name: 'MuiTabPanel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(3)\n}));\nconst TabPanel = /*#__PURE__*/React.forwardRef(function TabPanel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabPanel'\n  });\n  const {\n    children,\n    className,\n    value,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props\n  };\n  const classes = useUtilityClasses(ownerState);\n  const context = useTabContext();\n  if (context === null) {\n    throw new TypeError('No TabContext provided');\n  }\n  const id = getPanelId(context, value);\n  const tabId = getTabId(context, value);\n  return /*#__PURE__*/_jsx(TabPanelRoot, {\n    \"aria-labelledby\": tabId,\n    className: clsx(classes.root, className),\n    hidden: value !== context.value,\n    id: id,\n    ref: ref,\n    role: \"tabpanel\",\n    ownerState: ownerState,\n    ...other,\n    children: value === context.value && children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? TabPanel.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\n   * no `value` was passed to `Tab`.\n   */\n  value: PropTypes.string.isRequired\n} : void 0;\nexport default TabPanel;","import { TabPanel as MuiTabPanel, TabPanelProps as MuiTabPanelProps } from '@mui/lab';\n\nexport interface TabPanelProps extends MuiTabPanelProps {\n  children?: React.ReactNode;\n}\n\nexport const TabPanel = ({ children, ...rest }: TabPanelProps): JSX.Element => {\n  return <MuiTabPanel {...rest}>{children}</MuiTabPanel>;\n};\n"],"names":["Divider","props","jsx","MuiDivider","getTabPanelUtilityClass","slot","generateUtilityClass","generateUtilityClasses","useUtilityClasses","ownerState","classes","composeClasses","TabPanelRoot","styled","styles","theme","TabPanel","React.forwardRef","inProps","ref","useThemeProps","children","className","value","other","context","useTabContext","id","getPanelId","tabId","getTabId","_jsx","clsx","MuiTabPanel","rest"],"mappings":"6SAGG,IAACA,EAAWC,GACUC,EAAIC,EAAY,CACrC,GAAGF,CACP,CAAG,ECJI,SAASG,EAAwBC,EAAM,CAC5C,OAAOC,EAAqB,cAAeD,CAAI,CACjD,CACwBE,EAAuB,cAAe,CAAC,MAAM,CAAC,ECGtE,MAAMC,EAAoBC,GAAc,CACtC,KAAM,CACJ,QAAAC,CACD,EAAGD,EAIJ,OAAOE,EAHO,CACZ,KAAM,CAAC,MAAM,CACjB,EAC+BP,EAAyBM,CAAO,CAC/D,EACME,EAAeC,EAAO,MAAO,CACjC,KAAM,cACN,KAAM,OACN,kBAAmB,CAACZ,EAAOa,IAAWA,EAAO,IAC/C,CAAC,EAAE,CAAC,CACF,MAAAC,CACF,KAAO,CACL,QAASA,EAAM,QAAQ,CAAC,CAC1B,EAAE,EACIC,EAAwBC,EAAAA,WAAiB,SAAkBC,EAASC,EAAK,CAC7E,MAAMlB,EAAQmB,EAAc,CAC1B,MAAOF,EACP,KAAM,aACV,CAAG,EACK,CACJ,SAAAG,EACA,UAAAC,EACA,MAAAC,EACA,GAAGC,CACJ,EAAGvB,EACEQ,EAAa,CACjB,GAAGR,CACP,EACQS,EAAUF,EAAkBC,CAAU,EACtCgB,EAAUC,IAChB,GAAID,IAAY,KACd,MAAM,IAAI,UAAU,wBAAwB,EAE9C,MAAME,EAAKC,EAAWH,EAASF,CAAK,EAC9BM,EAAQC,EAASL,EAASF,CAAK,EACrC,OAAoBQ,EAAKnB,EAAc,CACrC,kBAAmBiB,EACnB,UAAWG,EAAKtB,EAAQ,KAAMY,CAAS,EACvC,OAAQC,IAAUE,EAAQ,MAC1B,GAAIE,EACJ,IAAKR,EACL,KAAM,WACN,WAAYV,EACZ,GAAGe,EACH,SAAUD,IAAUE,EAAQ,OAASJ,CACzC,CAAG,CACH,CAAC,EA4BDY,EAAejB,EChFRA,EAAA,CAAA,CAAA,SAAAK,EAAA,GAAAa,CAAA,IACLhC,EAAA+B,EAAA,CAAA,GAAAC,EAAA,SAAAb,CAAA,CAAA","x_google_ignoreList":[1,2]}