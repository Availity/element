import{j as u,a as Z}from"./jsx-runtime-670450c2.js";import{B as J}from"./Button-4aa81ee1.js";import{g as Q,a as X,s as Y,_ as x,u as ee,b as te,c as re,r as V,q as G,e as ne}from"./useThemeProps-545788c1.js";import{r as R}from"./index-f1f749bf.js";import{u as ie}from"./useTheme-e15b8e4e.js";import{e as oe}from"./extendSxProp-1d9241a8.js";import"./ButtonBase-eb9095b7.js";import"./emotion-react.browser.esm-5cb50a94.js";import"./emotion-element-6a883da9.browser.esm-1c5b50fe.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-eaaa54fe.js";import"./extends-98964cd2.js";import"./inheritsLoose-d374ba88.js";import"./useForkRef-2e794f8b.js";import"./_commonjsHelpers-042e6b4d.js";const ae=R.createContext(),W=ae;function se(e){return Q("MuiGrid",e)}const le=[0,1,2,3,4,5,6,7,8,9,10],ue=["column-reverse","column","row-reverse","row"],ce=["nowrap","wrap-reverse","wrap"],b=["auto",!0,1,2,3,4,5,6,7,8,9,10,11,12],w=X("MuiGrid",["root","container","item","zeroMinWidth",...le.map(e=>`spacing-xs-${e}`),...ue.map(e=>`direction-xs-${e}`),...ce.map(e=>`wrap-xs-${e}`),...b.map(e=>`grid-xs-${e}`),...b.map(e=>`grid-sm-${e}`),...b.map(e=>`grid-md-${e}`),...b.map(e=>`grid-lg-${e}`),...b.map(e=>`grid-xl-${e}`)]),de=["className","columns","columnSpacing","component","container","direction","item","rowSpacing","spacing","wrap","zeroMinWidth"];function g(e){const t=parseFloat(e);return`${t}${String(e).replace(String(t),"")||"px"}`}function pe({theme:e,ownerState:t}){let n;return e.breakpoints.keys.reduce((i,r)=>{let o={};if(t[r]&&(n=t[r]),!n)return i;if(n===!0)o={flexBasis:0,flexGrow:1,maxWidth:"100%"};else if(n==="auto")o={flexBasis:"auto",flexGrow:0,flexShrink:0,maxWidth:"none",width:"auto"};else{const s=V({values:t.columns,breakpoints:e.breakpoints.values}),c=typeof s=="object"?s[r]:s;if(c==null)return i;const d=`${Math.round(n/c*1e8)/1e6}%`;let l={};if(t.container&&t.item&&t.columnSpacing!==0){const a=e.spacing(t.columnSpacing);if(a!=="0px"){const m=`calc(${d} + ${g(a)})`;l={flexBasis:m,maxWidth:m}}}o=x({flexBasis:d,flexGrow:0,maxWidth:d},l)}return e.breakpoints.values[r]===0?Object.assign(i,o):i[e.breakpoints.up(r)]=o,i},{})}function me({theme:e,ownerState:t}){const n=V({values:t.direction,breakpoints:e.breakpoints.values});return G({theme:e},n,i=>{const r={flexDirection:i};return i.indexOf("column")===0&&(r[`& > .${w.item}`]={maxWidth:"none"}),r})}function A({breakpoints:e,values:t}){let n="";Object.keys(t).forEach(r=>{n===""&&t[r]!==0&&(n=r)});const i=Object.keys(e).sort((r,o)=>e[r]-e[o]);return i.slice(0,i.indexOf(n))}function fe({theme:e,ownerState:t}){const{container:n,rowSpacing:i}=t;let r={};if(n&&i!==0){const o=V({values:i,breakpoints:e.breakpoints.values});let s;typeof o=="object"&&(s=A({breakpoints:e.breakpoints.values,values:o})),r=G({theme:e},o,(c,d)=>{var l;const a=e.spacing(c);return a!=="0px"?{marginTop:`-${g(a)}`,[`& > .${w.item}`]:{paddingTop:g(a)}}:(l=s)!=null&&l.includes(d)?{}:{marginTop:0,[`& > .${w.item}`]:{paddingTop:0}}})}return r}function he({theme:e,ownerState:t}){const{container:n,columnSpacing:i}=t;let r={};if(n&&i!==0){const o=V({values:i,breakpoints:e.breakpoints.values});let s;typeof o=="object"&&(s=A({breakpoints:e.breakpoints.values,values:o})),r=G({theme:e},o,(c,d)=>{var l;const a=e.spacing(c);return a!=="0px"?{width:`calc(100% + ${g(a)})`,marginLeft:`-${g(a)}`,[`& > .${w.item}`]:{paddingLeft:g(a)}}:(l=s)!=null&&l.includes(d)?{}:{width:"100%",marginLeft:0,[`& > .${w.item}`]:{paddingLeft:0}}})}return r}function ye(e,t,n={}){if(!e||e<=0)return[];if(typeof e=="string"&&!Number.isNaN(Number(e))||typeof e=="number")return[n[`spacing-xs-${String(e)}`]];const i=[];return t.forEach(r=>{const o=e[r];Number(o)>0&&i.push(n[`spacing-${r}-${String(o)}`])}),i}const ge=Y("div",{name:"MuiGrid",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e,{container:i,direction:r,item:o,spacing:s,wrap:c,zeroMinWidth:d,breakpoints:l}=n;let a=[];i&&(a=ye(s,l,t));const m=[];return l.forEach(f=>{const h=n[f];h&&m.push(t[`grid-${f}-${String(h)}`])}),[t.root,i&&t.container,o&&t.item,d&&t.zeroMinWidth,...a,r!=="row"&&t[`direction-xs-${String(r)}`],c!=="wrap"&&t[`wrap-xs-${String(c)}`],...m]}})(({ownerState:e})=>x({boxSizing:"border-box"},e.container&&{display:"flex",flexWrap:"wrap",width:"100%"},e.item&&{margin:0},e.zeroMinWidth&&{minWidth:0},e.wrap!=="wrap"&&{flexWrap:e.wrap}),me,fe,he,pe);function be(e,t){if(!e||e<=0)return[];if(typeof e=="string"&&!Number.isNaN(Number(e))||typeof e=="number")return[`spacing-xs-${String(e)}`];const n=[];return t.forEach(i=>{const r=e[i];if(Number(r)>0){const o=`spacing-${i}-${String(r)}`;n.push(o)}}),n}const ve=e=>{const{classes:t,container:n,direction:i,item:r,spacing:o,wrap:s,zeroMinWidth:c,breakpoints:d}=e;let l=[];n&&(l=be(o,d));const a=[];d.forEach(f=>{const h=e[f];h&&a.push(`grid-${f}-${String(h)}`)});const m={root:["root",n&&"container",r&&"item",c&&"zeroMinWidth",...l,i!=="row"&&`direction-xs-${String(i)}`,s!=="wrap"&&`wrap-xs-${String(s)}`,...a]};return ne(m,se,t)},xe=R.forwardRef(function(t,n){const i=ee({props:t,name:"MuiGrid"}),{breakpoints:r}=ie(),o=oe(i),{className:s,columns:c,columnSpacing:d,component:l="div",container:a=!1,direction:m="row",item:f=!1,rowSpacing:h,spacing:k=0,wrap:F="wrap",zeroMinWidth:L=!1}=o,$=te(o,de),K=h||k,D=d||k,U=R.useContext(W),C=a?c||12:U,T={},q=x({},$);r.keys.forEach(B=>{$[B]!=null&&(T[B]=$[B],delete q[B])});const I=x({},o,{columns:C,container:a,direction:m,item:f,rowSpacing:K,columnSpacing:D,wrap:F,zeroMinWidth:L,spacing:k},T,{breakpoints:r.keys}),H=ve(I);return u(W.Provider,{value:C,children:u(ge,x({ownerState:I,className:re(H.root,s),as:l,ref:n},q))})}),y=xe,we={bgcolor:"tertiary.main",color:"black","&:focus, &:hover":{bgcolor:"tertiary.dark"},"&:active":{bgcolor:"tertiary.light"}},p=({color:e="secondary",variant:t="contained",...n})=>u(J,{color:e=="tertiary"?"secondary":e,variant:t,sx:e=="tertiary"&&t=="contained"?{...we}:void 0,disableRipple:!0,...n});try{p.displayName="Button",p.__docgenInfo={description:"",displayName:"Button",props:{color:{defaultValue:{value:"secondary"},description:"The color of the component.",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"error"'},{value:'"tertiary"'}]}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<ButtonClasses> & Partial<ClassNameMap<never>>"}},children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLButtonElement>"}},tabIndex:{defaultValue:{value:"0"},description:"",name:"tabIndex",required:!1,type:{name:"number"}},href:{defaultValue:null,description:"The URL to link to when the button is clicked.\nIf defined, an `a` element will be used as the root node.",name:"href",required:!1,type:{name:"string"}},action:{defaultValue:null,description:"A ref for imperative actions.\nIt currently only supports `focusVisible()` action.",name:"action",required:!1,type:{name:"Ref<ButtonBaseActions>"}},disabled:{defaultValue:{value:`false
false`},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},variant:{defaultValue:{value:"contained"},description:"The variant to use.",name:"variant",required:!1,type:{name:"enum",value:[{value:'"text"'},{value:'"outlined"'},{value:'"contained"'}]}},centerRipple:{defaultValue:{value:"false"},description:"If `true`, the ripples are centered.\nThey won't start at the cursor interaction position.",name:"centerRipple",required:!1,type:{name:"boolean"}},disableRipple:{defaultValue:{value:"false"},description:"If `true`, the ripple effect is disabled.\n\n⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\nto highlight the element by applying separate styles with the `.Mui-focusVisible` class.",name:"disableRipple",required:!1,type:{name:"boolean"}},disableTouchRipple:{defaultValue:{value:"false"},description:"If `true`, the touch ripple effect is disabled.",name:"disableTouchRipple",required:!1,type:{name:"boolean"}},focusRipple:{defaultValue:{value:"false"},description:"If `true`, the base button will have a keyboard focus ripple.",name:"focusRipple",required:!1,type:{name:"boolean"}},focusVisibleClassName:{defaultValue:null,description:`This prop can help identify which element has keyboard focus.
The class name will be applied when the element gains the focus through keyboard interaction.
It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a \`focus-visible\` class to other components
if needed.`,name:"focusVisibleClassName",required:!1,type:{name:"string"}},LinkComponent:{defaultValue:{value:"'a'"},description:"The component used to render a link when the `href` prop is provided.",name:"LinkComponent",required:!1,type:{name:"ElementType<any>"}},onFocusVisible:{defaultValue:null,description:"Callback fired when the component is focused with a keyboard.\nWe trigger a `onFocus` callback too.",name:"onFocusVisible",required:!1,type:{name:"FocusEventHandler<any>"}},TouchRippleProps:{defaultValue:null,description:"Props applied to the `TouchRipple` element.",name:"TouchRippleProps",required:!1,type:{name:"Partial<TouchRippleProps>"}},touchRippleRef:{defaultValue:null,description:"A ref that points to the `TouchRipple` element.",name:"touchRippleRef",required:!1,type:{name:"Ref<TouchRippleActions>"}},disableFocusRipple:{defaultValue:{value:"false"},description:"If `true`, the  keyboard focus ripple is disabled.",name:"disableFocusRipple",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'medium'"},description:"The size of the component.\n`small` is equivalent to the dense button styling.",name:"size",required:!1,type:{name:"enum",value:[{value:'"small"'},{value:'"large"'},{value:'"medium"'}]}},disableElevation:{defaultValue:{value:"false"},description:"If `true`, no elevation is used.",name:"disableElevation",required:!1,type:{name:"boolean"}},endIcon:{defaultValue:null,description:"Element placed after the children.",name:"endIcon",required:!1,type:{name:"ReactNode"}},fullWidth:{defaultValue:{value:"false"},description:"If `true`, the button will take up the full width of its container.",name:"fullWidth",required:!1,type:{name:"boolean"}},startIcon:{defaultValue:null,description:"Element placed before the children.",name:"startIcon",required:!1,type:{name:"ReactNode"}}}}}catch{}const Ee={title:"Components/Button/Button",component:p,tags:["autodocs"],args:{variant:"contained",color:"primary",size:"medium"}},S={render:({...e})=>u(p,{...e,children:"Button"})},v={render:()=>Z(y,{container:!0,spacing:1,children:[u(y,{item:!0,xs:12,children:u(p,{color:"primary",children:"Primary"})}),u(y,{item:!0,xs:12,children:u(p,{color:"secondary",children:"Secondary"})}),u(y,{item:!0,xs:12,children:u(p,{color:"tertiary",children:"Tertiary"})}),u(y,{item:!0,xs:12,children:u(p,{color:"error",children:"Error"})}),u(y,{item:!0,xs:12,children:u(p,{color:"primary",variant:"outlined",children:"Primary Outlined"})}),u(y,{item:!0,xs:12,children:u(p,{color:"secondary",variant:"outlined",children:"Secondary Outlined"})})]})};var N,P,E;S.parameters={...S.parameters,docs:{...(N=S.parameters)==null?void 0:N.docs,source:{originalSource:`{
  render: ({
    ...args
  }: ButtonProps) => <Button {...args}>Button</Button>
}`,...(E=(P=S.parameters)==null?void 0:P.docs)==null?void 0:E.source}}};var _,z,M,O,j;v.parameters={...v.parameters,docs:{...(_=v.parameters)==null?void 0:_.docs,source:{originalSource:`{
  render: () => <Grid container spacing={1}>
      <Grid item xs={12}>
        <Button color="primary">Primary</Button>
      </Grid>
      <Grid item xs={12}>
        <Button color="secondary">Secondary</Button>
      </Grid>
      <Grid item xs={12}>
        <Button color="tertiary">Tertiary</Button>
      </Grid>
      <Grid item xs={12}>
        <Button color="error">Error</Button>
      </Grid>
      <Grid item xs={12}>
        <Button color="primary" variant="outlined">Primary Outlined</Button>
      </Grid>
      <Grid item xs={12}>
        <Button color="secondary" variant="outlined">Secondary Outlined</Button>
      </Grid>
    </Grid>
}`,...(M=(z=v.parameters)==null?void 0:z.docs)==null?void 0:M.source},description:{story:"Availity approved button colors and variations",...(j=(O=v.parameters)==null?void 0:O.docs)==null?void 0:j.description}}};const _e=["_Button","_Colors"];export{S as _Button,v as _Colors,_e as __namedExportsOrder,Ee as default};
//# sourceMappingURL=Button.stories-eddfa97e.js.map
