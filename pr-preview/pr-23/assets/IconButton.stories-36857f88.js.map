{"version":3,"file":"IconButton.stories-36857f88.js","sources":["../../../packages/button/src/lib/IconButton.tsx","../../../packages/button/src/lib/IconButton.stories.tsx"],"sourcesContent":["import { IconButton as MuiIconButton, Tooltip } from '@mui/material';\nimport type { IconButtonProps as MUIIconButtonProps } from '@mui/material';\nimport { Button } from './Button';\n\nexport type IconButtonProps = {\n  /**\n   * Text for tooltip and aria-label\n   */\n  title: string;\n  children: React.ReactNode;\n  /**\n   * Toggles contained Button styling\n   */\n  filled?: boolean;\n  /**\n   * The color of the component.\n   */\n  color?: \"primary\" | \"secondary\" | \"tertiary\" | \"error\";\n} & Omit<MUIIconButtonProps, 'aria-label' | 'color' | 'centerRipple' | 'disableRipple' | 'disableTouchRipple' | 'focusRipple' | 'disableFocusRipple' | 'TouchRippleProps' | 'touchRippleRef'>;\n\n\n\nexport const IconButton = ({ children, title, filled, color = 'tertiary', ...rest }: IconButtonProps): JSX.Element => {\n  return (\n    <Tooltip title={title}>\n      { filled ?\n        <Button aria-label={title} color={color} startIcon={children} iconOnly {...rest}>{'\\u2060'}</Button>\n        :\n        <MuiIconButton aria-label={title} disableRipple color={color === 'tertiary' ? 'secondary' : color} {...rest}>\n          {children}\n        </MuiIconButton>\n      }\n    </Tooltip>\n  );\n}\n","import type { StoryObj } from '@storybook/react';\nimport { SearchIcon } from '@availity/mui-icon';\nimport { IconButton, IconButtonProps } from './IconButton';\n\n/** Icon only button with built-in tooltip */\nexport default {\n  title: 'Components/Button/IconButton',\n  component: IconButton,\n  tags: ['autodocs'],\n  args: {\n    title: 'title text'\n  },\n  parameters: {\n    docs: {\n      description: {\n        component: \"Icon only button with built-in tooltip\"\n      }\n    }\n  }\n};\nexport const _IconButton: StoryObj<typeof IconButton> = {\n  render: ({\n    ...args\n  }: IconButtonProps) => <IconButton {...args}><SearchIcon /></IconButton>\n};\n_IconButton.parameters = {\n  ..._IconButton.parameters,\n  docs: {\n    ..._IconButton.parameters?.docs,\n    source: {\n      originalSource: \"{\\n  render: ({\\n    ...args\\n  }: IconButtonProps) => <IconButton {...args}><SearchIcon /></IconButton>\\n}\",\n      ..._IconButton.parameters?.docs?.source\n    }\n  }\n};"],"names":["IconButton","children","title","filled","color","rest","jsx","Tooltip","Button","MuiIconButton","IconButton_stories","_IconButton","args","SearchIcon","_a","_c","_b"],"mappings":"63BAsBO,MAAAA,EAAA,CAAA,CAAA,SAAAC,EAAA,MAAAC,EAAA,OAAAC,EAAA,MAAAC,EAAA,WAAA,GAAAC,KACLC,EAAAC,EAAA,CAAA,MAAAL,EAAA,SAAAC,EAAAG,EAAAE,EAAA,CAAA,aAAAN,EAAA,MAAAE,EAAA,UAAAH,EAAA,SAAA,GAAA,GAAAI,EAAA,SAAA,GAAA,CAAA,EAAAC,EAAAG,EAAA,CAAA,aAAAP,EAAA,cAAA,GAAA,MAAAE,IAAA,WAAA,YAAAA,EAAA,GAAAC,EAAA,SAAAJ,CAAA,CAAA,CAAA,CAAA;;;;;;;;;;iSClBF,MAAeS,EAAA,CACb,MAAO,+BACP,UAAWV,EACX,KAAM,CAAC,UAAU,EACjB,KAAM,CACJ,MAAO,YACT,EACA,WAAY,CACV,KAAM,CACJ,YAAa,CACX,UAAW,wCACb,CACF,CACF,CACF,EACaW,EAA2C,CACtD,OAAQ,CAAC,CACP,GAAGC,CAAA,IACmBN,EAAAN,EAAA,CAAY,GAAGY,EAAM,SAAAN,EAACO,GAAW,CAAA,EAAE,CAC7D,YACAF,EAAY,WAAa,CACvB,GAAGA,EAAY,WACf,KAAM,CACJ,IAAGG,EAAAH,EAAY,aAAZ,YAAAG,EAAwB,KAC3B,OAAQ,CACN,eAAgB;AAAA;AAAA;AAAA;AAAA,GAChB,IAAGC,GAAAC,EAAAL,EAAY,aAAZ,YAAAK,EAAwB,OAAxB,YAAAD,EAA8B,MACnC,CACF,CACF"}