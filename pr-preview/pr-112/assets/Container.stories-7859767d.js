import{j as s}from"./jsx-runtime-390e5fc8.js";import{C as l}from"./Container-6934edbe.js";import"./index-570b25c1.js";import"./_commonjsHelpers-042e6b4d.js";import"./styled-7846e708.js";import"./clsx-7dc4e18d.js";import"./createTheme-bcd1d157.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-16f43d9e.js";import"./useThemeProps-018254e6.js";import"./styled-11d1647d.js";const a=({children:e,...o})=>s(l,{...o,children:e});try{a.displayName="Container",a.__docgenInfo={description:"",displayName:"Container",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<ContainerClasses> & Partial<ClassNameMap<never>>"}},disableGutters:{defaultValue:{value:"false"},description:"If `true`, the left and right padding is removed.",name:"disableGutters",required:!1,type:{name:"boolean"}},fixed:{defaultValue:{value:"false"},description:`Set the max-width to match the min-width of the current breakpoint.
This is useful if you'd prefer to design for a fixed set of sizes
instead of trying to accommodate a fully fluid viewport.
It's fluid by default.`,name:"fixed",required:!1,type:{name:"boolean"}},maxWidth:{defaultValue:{value:"'lg'"},description:"Determine the max-width of the container.\nThe container width grows with the size of the screen.\nSet to `false` to disable `maxWidth`.",name:"maxWidth",required:!1,type:{name:"false | Breakpoint"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any>"}}}}}catch{}const g={title:"Components/Layout/Container",component:a,tags:["autodocs"],parameters:{docs:{description:{component:"The `Container` centers your content horizontally. It's the most basic layout element with a fluid or fixed width based on breakpoints."}}}},t={render:e=>s(a,{...e}),args:{children:"This text is a child of Container"}};var r,n,i;t.parameters={...t.parameters,docs:{...(r=t.parameters)==null?void 0:r.docs,source:{originalSource:`{
  render: (args: ContainerProps) => <Container {...args} />,
  args: {
    children: 'This text is a child of Container'
  }
}`,...(i=(n=t.parameters)==null?void 0:n.docs)==null?void 0:i.source}}};const _=["_Container"];export{t as _Container,_ as __namedExportsOrder,g as default};
//# sourceMappingURL=Container.stories-7859767d.js.map
