import{j as t}from"./jsx-runtime-390e5fc8.js";import{b as d}from"./index-aa24eefe.js";import{M as p}from"./Badge-235707d5.js";import"./index-570b25c1.js";import"./_commonjsHelpers-042e6b4d.js";import"./faCircleArrowRight-b395df24.js";import"./faMagnifyingGlass-482fd726.js";import"./SvgIcon-33a08535.js";import"./styled-52ae1682.js";import"./useThemeProps-09701b40.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-16f43d9e.js";import"./useSlotProps-163bc2ac.js";import"./isHostComponent-73d6e646.js";import"./useForkRef-153a0a89.js";const o=({children:e,color:l="error",...i})=>t(p,{color:l,...i,children:e});try{o.displayName="Badge",o.__docgenInfo={description:"",displayName:"Badge",props:{badgeContent:{defaultValue:null,description:"The content rendered within the badge.",name:"badgeContent",required:!1,type:{name:"number"}},children:{defaultValue:null,description:"The badge will be added relative to this node.",name:"children",required:!0,type:{name:"React.ReactNode"}},color:{defaultValue:{value:"error"},description:`The color of the component.
It supports both default and custom theme colors, which can be added as shown in the
[palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).`,name:"color",required:!1,type:{name:'"primary" | "error" | "success"'}},anchorOrigin:{defaultValue:{value:`{
vertical: 'top',
horizontal: 'right',
}`},description:"The anchor of the badge.",name:"anchorOrigin",required:!1,type:{name:"BadgeOrigin"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<BadgeClasses> & Partial<ClassNameMap<never>>"}},className:{defaultValue:null,description:"@ignore",name:"className",required:!1,type:{name:"string"}},componentsProps:{defaultValue:{value:"{}"},description:"The extra props for the slot components.\nYou can override the existing props or add new ones.\n\nThis prop is an alias for the `slotProps` prop.\nIt's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.",name:"componentsProps",required:!1,type:{name:'{ root?: SlotComponentProps<"span", BadgeRootSlotPropsOverrides, { badgeContent: ReactNode; children?: ReactNode; invisible: boolean; max: number; slotProps?: ...; slots?: BadgeSlots; showZero: boolean; }>; badge?: SlotComponentProps<...>; }'}},components:{defaultValue:{value:"{}"},description:"The components used for each slot inside.\n\nThis prop is an alias for the `slots` prop.\nIt's recommended to use the `slots` prop instead.",name:"components",required:!1,type:{name:"{ Root?: ElementType<any>; Badge?: ElementType<any>; }"}},overlap:{defaultValue:{value:"'rectangular'"},description:"Wrapped shape the badge should overlap.",name:"overlap",required:!1,type:{name:'"circular" | "rectangular"'}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},variant:{defaultValue:{value:"'standard'"},description:"The variant to use.",name:"variant",required:!1,type:{name:'"dot" | "standard"'}},invisible:{defaultValue:{value:"false"},description:"If `true`, the badge is invisible.",name:"invisible",required:!1,type:{name:"boolean"}},max:{defaultValue:{value:"99"},description:"Max count to show.",name:"max",required:!1,type:{name:"number"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside the Badge.",name:"slotProps",required:!1,type:{name:'{ root?: SlotComponentProps<"span", BadgeRootSlotPropsOverrides, { badgeContent: ReactNode; children?: ReactNode; invisible: boolean; max: number; slotProps?: ...; slots?: BadgeSlots; showZero: boolean; }>; badge?: SlotComponentProps<...>; }'}},slots:{defaultValue:{value:"{}"},description:`The components used for each slot inside the Badge.
Either a string to use a HTML element or a component.`,name:"slots",required:!1,type:{name:"BadgeSlots"}},showZero:{defaultValue:{value:"false"},description:"Controls whether the badge is hidden when `badgeContent` is zero.",name:"showZero",required:!1,type:{name:"boolean"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLSpanElement>"}}}}}catch{}const C={title:"Components/Badge/Badge",component:o,tags:["autodocs"]},a={render:e=>t(o,{...e,children:t(d,{fontSize:"large"})}),args:{badgeContent:3,variant:"standard",anchorOrigin:{horizontal:"right",vertical:"top"}}};var r,n,s;a.parameters={...a.parameters,docs:{...(r=a.parameters)==null?void 0:r.docs,source:{originalSource:`{
  render: (args: BadgeProps) => <Badge {...args}>
      <HomeIcon fontSize="large" />
    </Badge>,
  args: {
    badgeContent: 3,
    variant: 'standard',
    anchorOrigin: {
      horizontal: 'right',
      vertical: 'top'
    }
  }
}`,...(s=(n=a.parameters)==null?void 0:n.docs)==null?void 0:s.source}}};const T=["_Badge"];export{a as _Badge,T as __namedExportsOrder,C as default};
//# sourceMappingURL=Badge.stories-42e2d9e7.js.map
