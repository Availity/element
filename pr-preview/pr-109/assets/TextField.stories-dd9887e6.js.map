{"version":3,"file":"TextField.stories-dd9887e6.js","sources":["../../../packages/textfield/src/lib/TextField.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport FormControl from '@mui/material/FormControl';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormHelperText from '@mui/material/FormHelperText';\nimport { FormLabel, Input, InputProps } from '@availity/mui-form-utils';\nimport { WarningTriangleIcon } from '@availity/mui-icon';\n\nexport type TextFieldProps = {\n  helperText?: string;\n} & Omit<\n  InputProps,\n  | 'aria-describedby'\n  | 'classes'\n  | 'disableInjectingGlobalStyles'\n  | 'color'\n  | 'multiline'\n  | 'notched'\n  | 'fullWidth'\n  | 'inputProps'\n>;\n\nconst smallStyles = { sx: { padding: '8px 8px' } };\nconst mediumStyles = { sx: { padding: '16px 8px' } };\nconst iconStyles = { marginRight: '4px', paddingTop: '4px' };\n\nexport const TextField = forwardRef(\n  ({ error, helperText, id, label, startAdornment, endAdornment, required, size, ...rest }: TextFieldProps, ref) => {\n    const labelId = `${id}-label`;\n    const helperId = `${id}-helper-text`;\n\n    return (\n      <FormControl size=\"small\">\n        {label && (\n          <FormLabel id={labelId} htmlFor={id} required={required} error={!!error} disabled={rest.disabled}>\n            {label}\n          </FormLabel>\n        )}\n        <Input\n          inputRef={ref}\n          id={id}\n          aria-describedby={helperId}\n          error={!!error}\n          inputProps={size === 'medium' ? mediumStyles : smallStyles}\n          startAdornment={\n            startAdornment ? <InputAdornment position=\"start\">{startAdornment}</InputAdornment> : undefined\n          }\n          endAdornment={endAdornment ? <InputAdornment position=\"end\">{endAdornment}</InputAdornment> : undefined}\n          size={size}\n          {...rest}\n        />\n        <FormHelperText id={helperId} error={error}>\n          {error && <WarningTriangleIcon sx={iconStyles} />}\n          {helperText}\n        </FormHelperText>\n      </FormControl>\n    );\n  }\n);\n\nTextField.displayName = 'TextField';\n"],"names":["smallStyles","mediumStyles","iconStyles","TextField","forwardRef","error","helperText","id","label","startAdornment","endAdornment","required","size","rest","ref","labelId","helperId","jsxs","FormControl","jsx","FormLabel","Input","InputAdornment","FormHelperText","WarningTriangleIcon"],"mappings":"+9CAqBA,MAAAA,EAAA,CAAA,GAAA,CAAA,QAAA,SAAA,CAAA,EACAC,EAAA,CAAA,GAAA,CAAA,QAAA,UAAA,CAAA,EACAC,EAAA,CAAA,YAAA,MAAA,WAAA,KAAA,EAEOC,EAAAC,EAAA,WAAkB,CAAA,CAAA,MAAAC,EAAA,WAAAC,EAAA,GAAAC,EAAA,MAAAC,EAAA,eAAAC,EAAA,aAAAC,EAAA,SAAAC,EAAA,KAAAC,EAAA,GAAAC,CAAA,EAAAC,IAAA,CAErB,MAAAC,EAAA,GAAAR,UACAS,EAAA,GAAAT,gBAEA,OAAAU,EAAAC,EAAA,CAAA,KAAA,QAAA,SAAA,CAEKV,GAAAW,EAAAC,EAAA,CAAA,GAAAL,EAAA,QAAAR,EAAA,SAAAI,EAAA,MAAA,CAAA,CAAAN,EAAA,SAAAQ,EAAA,SAAA,SAAAL,EAAA,EAGCW,EAEFE,EAAC,CAAA,SAAAP,EACW,GAAAP,EACV,mBAAAS,EACkB,MAAA,CAAA,CAAAX,EACT,WAAAO,IAAA,SAAAX,EAAAD,EACsC,eAAAS,EAAAU,EAAAG,EAAA,CAAA,SAAA,QAAA,SAAAb,EAAA,EAAA,OAEyC,aAAAC,EAAAS,EAAAG,EAAA,CAAA,SAAA,MAAA,SAAAZ,EAAA,EAAA,OAEM,KAAAE,EAC9F,GAAAC,CACI,CAAA,EACNI,EAAAM,EAAA,CAAA,GAAAP,EAAA,MAAAX,EAAA,SAAA,CAEGA,GAAAc,EAAAK,EAAA,CAAA,GAAAtB,CAAA,CAAA,EAA8CI,CAC9C,EAAA,CACH,CAAA,CAAA,CACF,CAGN,EAEAH,EAAA,YAAA;;;;;;;;;;;;;;;;;;;"}