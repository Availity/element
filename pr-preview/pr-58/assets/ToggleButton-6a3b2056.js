import{j as v}from"./jsx-runtime-91a467a5.js";import{r as b}from"./index-8db94870.js";import{g as q,b as $,s as z,c as R,a as w}from"./styled-bbc4db24.js";import{e as h,b as s,c as M}from"./useThemeProps-0aafcae6.js";import{B as I}from"./ButtonBase-353bf105.js";function O(e){return $("MuiToggleButton",e)}const E=q("MuiToggleButton",["root","disabled","selected","standard","primary","secondary","sizeSmall","sizeMedium","sizeLarge"]),g=E,N=e=>{const{classes:a,fullWidth:t,selected:l,disabled:n,size:r,color:i}=e,o={root:["root",l&&"selected",n&&"disabled",t&&"fullWidth",`size${h(r)}`,i]};return w(o,O,a)},W=z(I,{name:"MuiToggleButton",slot:"Root",overridesResolver:(e,a)=>{const{ownerState:t}=e;return[a.root,a[`size${h(t.size)}`]]}})(({theme:e,ownerState:a})=>{let t=a.color==="standard"?e.palette.text.primary:e.palette[a.color].main,l;return e.vars&&(t=a.color==="standard"?e.vars.palette.text.primary:e.vars.palette[a.color].main,l=a.color==="standard"?e.vars.palette.text.primaryChannel:e.vars.palette[a.color].mainChannel),{...e.typography.button,borderRadius:(e.vars||e).shape.borderRadius,padding:11,border:`1px solid ${(e.vars||e).palette.divider}`,color:(e.vars||e).palette.action.active,...a.fullWidth&&{width:"100%"},[`&.${g.disabled}`]:{color:(e.vars||e).palette.action.disabled,border:`1px solid ${(e.vars||e).palette.action.disabledBackground}`},"&:hover":{textDecoration:"none",backgroundColor:e.vars?`rgba(${e.vars.palette.text.primaryChannel} / ${e.vars.palette.action.hoverOpacity})`:s(e.palette.text.primary,e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}},[`&.${g.selected}`]:{color:t,backgroundColor:e.vars?`rgba(${l} / ${e.vars.palette.action.selectedOpacity})`:s(t,e.palette.action.selectedOpacity),"&:hover":{backgroundColor:e.vars?`rgba(${l} / calc(${e.vars.palette.action.selectedOpacity} + ${e.vars.palette.action.hoverOpacity}))`:s(t,e.palette.action.selectedOpacity+e.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:e.vars?`rgba(${l} / ${e.vars.palette.action.selectedOpacity})`:s(t,e.palette.action.selectedOpacity)}}},...a.size==="small"&&{padding:7,fontSize:e.typography.pxToRem(13)},...a.size==="large"&&{padding:15,fontSize:e.typography.pxToRem(15)}}}),_=b.forwardRef(function(a,t){const l=M({props:a,name:"MuiToggleButton"}),{children:n,className:r,color:i="standard",disabled:o=!1,disableFocusRipple:p=!1,fullWidth:C=!1,onChange:d,onClick:f,selected:T,size:k="medium",value:c,...B}=l,m={...l,color:i,disabled:o,disableFocusRipple:p,fullWidth:C,size:k},V=N(m),x=u=>{f&&(f(u,c),u.defaultPrevented)||d&&d(u,c)};return v(W,{className:R(V.root,r),disabled:o,focusRipple:!p,ref:t,onClick:x,onChange:d,value:c,ownerState:m,"aria-pressed":T,...B,children:n})}),P=_,y=b.forwardRef((e,a)=>v(P,{...e,disableRipple:!0,ref:a}));try{y.displayName="ToggleButton",y.__docgenInfo={description:"",displayName:"ToggleButton",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<ToggleButtonClasses> & Partial<ClassNameMap<never>>"}},children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},color:{defaultValue:{value:"secondary"},description:"The color of the component.",name:"color",required:!1,type:{name:'"primary" | "secondary" | "tertiary"'}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},tabIndex:{defaultValue:{value:"0"},description:"",name:"tabIndex",required:!1,type:{name:"number"}},onChange:{defaultValue:null,description:`Callback fired when the state changes.
@param event The event source of the callback.
@param value of the selected button.`,name:"onChange",required:!1,type:{name:"(event: MouseEvent<HTMLElement, MouseEvent>, value: any) => void"}},onClick:{defaultValue:null,description:`Callback fired when the button is clicked.
@param event The event source of the callback.
@param value of the selected button.`,name:"onClick",required:!1,type:{name:"(event: MouseEvent<HTMLElement, MouseEvent>, value: any) => void"}},action:{defaultValue:null,description:"A ref for imperative actions.\nIt currently only supports `focusVisible()` action.",name:"action",required:!1,type:{name:"Ref<ButtonBaseActions>"}},disabled:{defaultValue:{value:`false
false`},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'medium'"},description:`The size of the component.
The prop defaults to the value inherited from the parent ToggleButtonGroup component.`,name:"size",required:!1,type:{name:'"small" | "large" | "medium"'}},focusVisibleClassName:{defaultValue:null,description:`This prop can help identify which element has keyboard focus.
The class name will be applied when the element gains the focus through keyboard interaction.
It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a \`focus-visible\` class to other components
if needed.`,name:"focusVisibleClassName",required:!1,type:{name:"string"}},LinkComponent:{defaultValue:{value:"'a'"},description:"The component used to render a link when the `href` prop is provided.",name:"LinkComponent",required:!1,type:{name:"ElementType<any>"}},onFocusVisible:{defaultValue:null,description:"Callback fired when the component is focused with a keyboard.\nWe trigger a `onFocus` callback too.",name:"onFocusVisible",required:!1,type:{name:"FocusEventHandler<any>"}},fullWidth:{defaultValue:{value:"false"},description:"If `true`, the button will take up the full width of its container.",name:"fullWidth",required:!1,type:{name:"boolean"}},value:{defaultValue:null,description:`The value to associate with the button when selected in a
ToggleButtonGroup.`,name:"value",required:!0,type:{name:"{}"}},selected:{defaultValue:null,description:"If `true`, the button is rendered in an active state.",name:"selected",required:!1,type:{name:"boolean"}}}}}catch{}export{y as T};
//# sourceMappingURL=ToggleButton-6a3b2056.js.map
