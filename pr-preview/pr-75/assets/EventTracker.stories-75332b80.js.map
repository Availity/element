{"version":3,"file":"EventTracker.stories-75332b80.js","sources":["../../../packages/event-tracker/src/lib/EventTracker.tsx"],"sourcesContent":["import { createContext, useContext, useEffect, useState } from 'react';\nimport type { ReactNode, MouseEvent, FocusEvent } from 'react';\n\ntype LogLevel = 'info' | 'error' | 'debug';\n\nexport type EventTrackerContext = {\n  enabled: boolean;\n  setEnabled: (value: boolean) => void;\n  level: LogLevel;\n  setLevel: (value: LogLevel) => void;\n  logOnFocus: (event: FocusEvent) => void;\n  logOnBlur: (event: FocusEvent) => void;\n  logOnClick: (event: MouseEvent<HTMLElement>) => void;\n};\n\nexport const EventTrackerContext = createContext<EventTrackerContext | null>(null);\n\nexport const useEventTracker = () => {\n  const ctx = useContext(EventTrackerContext);\n  if (!ctx) throw new Error('useEventTracker must be used inside of the EventTrackerProvider component');\n  return ctx;\n};\n\nexport type EventTrackerProviderProps = {\n  children: ReactNode;\n  /**\n   * Logs an event when the hash (#) changes in the url\n   */\n  pageTracking?: true;\n};\n\nexport const EventTrackerProvider = ({ children, pageTracking = true }: EventTrackerProviderProps) => {\n  const [enabled, setEnabled] = useState(true);\n  const [level, setLevel] = useState<LogLevel>('info');\n\n  useEffect(() => {\n    const logHashChange = (event: HashChangeEvent) => {\n      console.log('hash change', event);\n    };\n\n    if (pageTracking) {\n      window.addEventListener('hashchange', logHashChange, false);\n    } else {\n      window.removeEventListener('hashchange', logHashChange, false);\n    }\n\n    return () => {\n      window.removeEventListener('hashchange', logHashChange, false);\n    };\n  });\n\n  const logOnFocus = (event: FocusEvent) => {\n    if (!enabled) return;\n    console.log('focus', event);\n  };\n\n  const logOnBlur = (event: FocusEvent) => {\n    if (!enabled) return;\n    console.log('blur', event);\n  };\n\n  const logOnClick = (event: MouseEvent) => {\n    if (!enabled) return;\n    console.log('click', event);\n  };\n\n  return (\n    <EventTrackerContext.Provider value={{ enabled, setEnabled, level, setLevel, logOnBlur, logOnFocus, logOnClick }}>\n      {children}\n    </EventTrackerContext.Provider>\n  );\n};\n"],"names":["EventTrackerContext","createContext","useEventTracker","ctx","useContext","EventTrackerProvider","children","pageTracking","enabled","setEnabled","useState","level","setLevel","useEffect","logHashChange","event","logOnFocus","logOnBlur","logOnClick","jsx"],"mappings":"wyBAeO,MAAAA,EAAAC,EAAAA,cAAA,IAAA,EAEAC,EAAA,IAAA,CACL,MAAAC,EAAAC,aAAAJ,CAAA,EACA,GAAA,CAAAG,EAAU,MAAA,IAAA,MAAA,2EAAA,EACV,OAAAA,CACF,EAUOE,EAAA,CAAA,CAAA,SAAAC,EAAA,aAAAC,EAAA,EAAA,IAAA,CACL,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,MAAA,EAEAG,EAAAA,UAAA,IAAA,CACE,MAAAC,EAAAC,GAAA,CACE,QAAA,IAAA,cAAAA,CAAA,CAAgC,EAGlC,OAAAR,EACE,OAAA,iBAAA,aAAAO,EAAA,EAAA,EAEA,OAAA,oBAAA,aAAAA,EAAA,EAAA,EAGF,IAAA,CACE,OAAA,oBAAA,aAAAA,EAAA,EAAA,CAA6D,CAC/D,CAAA,EAGF,MAAAE,EAAAD,GAAA,CACEP,GACA,QAAA,IAAA,QAAAO,CAAA,CAA0B,EAG5BE,EAAAF,GAAA,CACEP,GACA,QAAA,IAAA,OAAAO,CAAA,CAAyB,EAG3BG,EAAAH,GAAA,CACEP,GACA,QAAA,IAAA,QAAAO,CAAA,CAA0B,EAG5B,OAAAI,EAAAnB,EAAA,SAAA,CAAA,MAAA,CAAA,QAAAQ,EAAA,WAAAC,EAAA,MAAAE,EAAA,SAAAC,EAAA,UAAAK,EAAA,WAAAD,EAAA,WAAAE,CAAA,EAAA,SAAAZ,CAAA,CAAA,CAKF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}