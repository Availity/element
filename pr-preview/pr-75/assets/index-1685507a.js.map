{"version":3,"file":"index-1685507a.js","sources":["../../../packages/avatar/dist/index.mjs","../../../packages/badge/dist/index.mjs","../../../packages/chip/dist/index.mjs","../../../packages/event-tracker/dist/index.mjs","../../../packages/paper/dist/index.mjs"],"sourcesContent":["// src/lib/Avatar.tsx\nimport { Avatar as MuiAvatar } from \"@mui/material\";\nimport { tokens } from \"@availity/design-tokens\";\nimport { jsx } from \"react/jsx-runtime\";\nvar sizeStyling = {\n  xs: { width: 18, height: 18, fontSize: tokens.fontSizesCaption },\n  s: { width: 24, height: 24, fontSize: tokens.fontSizesCaption },\n  m: { width: 40, height: 40, fontSize: tokens.fontSizesH5, fontWeight: tokens.fontWeightsBold },\n  l: { width: 80, height: 80, fontSize: tokens.fontSizesH3, fontWeight: tokens.fontWeightsBold },\n  xl: { width: 140, height: 140, fontSize: tokens.fontSizesH1, fontWeight: tokens.fontWeightsBold }\n};\nvar getInitials = (name, size) => {\n  if (name.split(\" \").length > 1 && size !== \"xs\") {\n    return `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`;\n  }\n  return name.charAt(0);\n};\nvar formatChildren = (children, size) => {\n  if (typeof children === \"string\") {\n    return getInitials(children, size).toUpperCase();\n  }\n  return children;\n};\nvar Avatar = ({ children, size = \"xl\", sx, ...rest }) => {\n  return /* @__PURE__ */ jsx(MuiAvatar, {\n    ...rest,\n    variant: \"circular\",\n    sx: {\n      ...sx,\n      ...sizeStyling[size] || sizeStyling.xl\n    },\n    children: formatChildren(children, size)\n  });\n};\nexport {\n  Avatar\n};\n","// src/lib/Badge.tsx\nimport { Badge as MUIBadge } from \"@mui/material\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Badge = ({ children, color = \"error\", ...rest }) => /* @__PURE__ */ jsx(MUIBadge, {\n  color,\n  ...rest,\n  children\n});\nexport {\n  Badge\n};\n","// src/lib/Chip.tsx\nimport { Chip as MuiChip } from \"@mui/material\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Chip = ({ color = \"default\", onDelete, ...rest }) => {\n  return /* @__PURE__ */ jsx(MuiChip, {\n    color,\n    onClick: onDelete,\n    onDelete,\n    ...rest\n  });\n};\nexport {\n  Chip\n};\n","// src/lib/EventTracker.tsx\nimport { createContext, useContext, useEffect, useState } from \"react\";\n\n// src/lib/telemetry-api.ts\nimport { avTelemetryApi } from \"@availity/api-axios\";\nvar trackEvent = async (level, data) => {\n  try {\n    avTelemetryApi[level](data);\n  } catch (error) {\n  }\n};\n\n// src/lib/EventTracker.tsx\nimport { jsx } from \"react/jsx-runtime\";\nvar EventTrackerContext = createContext(null);\nvar useEventTracker = () => {\n  const ctx = useContext(EventTrackerContext);\n  if (!ctx)\n    throw new Error(\"useEventTracker must be used inside of the EventTrackerProvider component\");\n  return ctx;\n};\nvar EventTrackerProvider = ({ children, pageTracking = true }) => {\n  const [enabled, setEnabled] = useState(true);\n  const [level, setLevel] = useState(\"info\");\n  useEffect(() => {\n    const logHashChange = (event) => {\n      console.log(\"hash change\", event);\n    };\n    if (pageTracking) {\n      window.addEventListener(\"hashchange\", logHashChange, false);\n    } else {\n      window.removeEventListener(\"hashchange\", logHashChange, false);\n    }\n    return () => {\n      window.removeEventListener(\"hashchange\", logHashChange, false);\n    };\n  });\n  const logOnFocus = (event) => {\n    if (!enabled)\n      return;\n    trackEvent(level, { et: event.type });\n  };\n  const logOnBlur = (event) => {\n    if (!enabled)\n      return;\n    trackEvent(level, { et: event.type });\n  };\n  const logOnClick = (event) => {\n    if (!enabled)\n      return;\n    trackEvent(level, { et: event.type });\n  };\n  return /* @__PURE__ */ jsx(EventTrackerContext.Provider, {\n    value: { enabled, setEnabled, level, setLevel, logOnBlur, logOnFocus, logOnClick },\n    children\n  });\n};\nexport {\n  EventTrackerContext,\n  EventTrackerProvider,\n  useEventTracker\n};\n","// src/lib/Paper.tsx\nimport { forwardRef } from \"react\";\nimport { Paper as MuiPaper } from \"@mui/material\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Paper = forwardRef((props, ref) => {\n  return /* @__PURE__ */ jsx(MuiPaper, {\n    ...props,\n    ref\n  });\n});\nexport {\n  Paper\n};\n"],"names":["tokens","Badge","children","color","rest","jsx","MUIBadge","Chip","onDelete","MuiChip","createContext","Paper","forwardRef","props","ref","MuiPaper"],"mappings":"4QAKyCA,EAAO,iBACRA,EAAO,iBACPA,EAAO,YAAyBA,EAAO,gBACvCA,EAAO,YAAyBA,EAAO,gBACpCA,EAAO,YAAyBA,EAAO,gBCN/E,IAACC,EAAQ,CAAC,CAAE,SAAAC,EAAU,MAAAC,EAAQ,QAAS,GAAGC,CAAI,IAAuBC,EAAIC,EAAU,CACpF,MAAAH,EACA,GAAGC,EACH,SAAAF,CACF,CAAC,ECJGK,EAAO,CAAC,CAAE,MAAAJ,EAAQ,UAAW,SAAAK,EAAU,GAAGJ,KACrBC,EAAII,EAAS,CAClC,MAAAN,EACA,QAASK,EACT,SAAAA,EACA,GAAGJ,CACP,CAAG,ECKuBM,EAAAA,cAAc,IAAI,ECV5C,IAAAC,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IACAT,EAAAU,EAAA,CACA,GAAAF,EACA,IAAAC,CACA,CAAA,CACA"}