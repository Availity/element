{"version":3,"file":"Link.stories-22e5bbde.js","sources":["../../../packages/link/src/lib/Link.tsx"],"sourcesContent":["import { ReactNode, forwardRef } from 'react';\nimport { Link as MuiLink, LinkProps as MuiLinkProps } from '@mui/material';\nimport { SystemProps } from '@mui/system';\nimport { OpenInNewIcon } from '@availity/mui-icon';\n\n// Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n// Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\nconst ABSOLUTE_URL_REGEX = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/;\n\n// Windows paths like `c:\\`\nconst WINDOWS_PATH_REGEX = /^[a-zA-Z]:\\\\/;\n\nfunction isAbsoluteUrl(url: string) {\n  if (WINDOWS_PATH_REGEX.test(url)) {\n    return false;\n  }\n\n  return ABSOLUTE_URL_REGEX.test(url);\n}\n\n// if absolute or loadApp is disabled, return url. otherwise loadappify the url\nconst getUrl = (url = '') => {\n  return `/public/apps/home/#!/loadApp?appUrl=${encodeURIComponent(url)}`;\n};\n\n// takes href and transforms it so that we can compare hostnames and other properties\nconst getLocation = (href: string) => {\n  const location = document.createElement('a');\n  location.href = href;\n  return location;\n};\n\nconst setRel = (url: string, target: string, absolute: boolean) => {\n  if (target === '_blank' && absolute) {\n    const dest = getLocation(url);\n    if (dest.hostname !== window.location.hostname) {\n      // default rel when linking to external destinations for performance and security\n      return 'noopener noreferrer';\n    }\n  }\n  return undefined;\n};\n\nexport type LinkProps = {\n  /** Url of the page the link goes to */\n  href: string;\n  /** format href to leverage loadApp within home iframe when relative url used.\n   *\n   * @default true */\n  loadApp?: boolean;\n  /** Where to open the linked document. Adds `OpenInNewIcon` when target is `_blank` */\n  target?: string;\n  /** Function to run onClick of the link. The first argument passed to onClick is the event. The second argument is the processed url. */\n  onClick?: (event: React.MouseEvent, url: string) => void;\n  children?: ReactNode;\n  rel?: string;\n} & Omit<MuiLinkProps, 'underline' | 'noWrap' | 'variantMapping' | 'variant' | keyof SystemProps>;\n\nexport const Link = forwardRef<HTMLAnchorElement, LinkProps>((props, ref) => {\n  const { href, target = '_self', children, onClick, loadApp = true, rel, ...rest } = props;\n  const absolute = isAbsoluteUrl(href);\n  const encode = !(absolute || !loadApp);\n  const url = encode ? getUrl(href) : href;\n  const NewWindowIcon = target === '_blank' ? <OpenInNewIcon /> : null;\n\n  return (\n    <MuiLink\n      href={url}\n      target={target}\n      onClick={(event: React.MouseEvent) => onClick && onClick(event, url)}\n      rel={rel || setRel(url, target, absolute)}\n      underline=\"hover\"\n      {...rest}\n      ref={ref}\n    >\n      <span>\n        {children} {NewWindowIcon}\n      </span>\n    </MuiLink>\n  );\n});\n"],"names":["ABSOLUTE_URL_REGEX","WINDOWS_PATH_REGEX","isAbsoluteUrl","url","getUrl","getLocation","href","location","setRel","target","absolute","Link","forwardRef","props","ref","children","onClick","loadApp","rel","rest","NewWindowIcon","jsx","OpenInNewIcon","MuiLink","event","jsxs"],"mappings":"ylBAOA,MAAAA,EAAA,6BAGAC,EAAA,eAEA,SAAAC,EAAAC,EAAA,CACE,OAAAF,EAAA,KAAAE,CAAA,EACE,GAGFH,EAAA,KAAAG,CAAA,CACF,CAGA,MAAAC,EAAA,CAAAD,EAAA,KACE,uCAAA,mBAAAA,CAAA,IAIFE,EAAAC,GAAA,CACE,MAAAC,EAAA,SAAA,cAAA,GAAA,EACA,OAAAA,EAAA,KAAAD,EACAC,CACF,EAEAC,EAAA,CAAAL,EAAAM,EAAAC,IAAA,CACE,GAAAD,IAAA,UAAAC,GACEL,EAAAF,CAAA,EACA,WAAA,OAAA,SAAA,SAEE,MAAA,qBAIN,EAiBOQ,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAA,CACL,KAAA,CAAA,KAAAR,EAAA,OAAAG,EAAA,QAAA,SAAAM,EAAA,QAAAC,EAAA,QAAAC,EAAA,GAAA,IAAAC,EAAA,GAAAC,CAAA,EAAAN,EACAH,EAAAR,EAAAI,CAAA,EAEAH,EADA,EAAAO,GAAA,CAAAO,GACAb,EAAAE,CAAA,EAAAA,EACAc,EAAAX,IAAA,SAAAY,EAAAC,EAAA,CAAA,CAAA,EAAA,KAEA,OAAAD,EACEE,EAAC,CAAA,KAAApB,EACO,OAAAM,EACN,QAAAe,GAAAR,GAAAA,EAAAQ,EAAArB,CAAA,EACmE,IAAAe,GAAAV,EAAAL,EAAAM,EAAAC,CAAA,EAC3B,UAAA,QAC9B,GAAAS,EACN,IAAAL,EACJ,SAAAW,EAAA,OAAA,CAAA,SAAA,CAGGV,EAAA,IAASK,CAAE,EAAA,CACd,CAAA,CAGN,CAAA;;;;;;;;;;;;;;;;;;;;;"}