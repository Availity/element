import{j as n,a as f}from"./jsx-runtime-390e5fc8.js";import{b as l,e as x}from"./createTheme-b02e766d.js";import{r as w}from"./index-570b25c1.js";import{c as N}from"./clsx-43049957.js";import{u as S}from"./useThemeProps-ac7867ed.js";import{g as R,s as d,a as L}from"./styled-69a32198.js";import{g as q}from"./generateUtilityClasses-b06d554b.js";import{M as p}from"./Typography-72ef0a36.js";function V(a){return R("MuiCardHeader",a)}const _=q("MuiCardHeader",["root","avatar","action","content","title","subheader"]),b=_,k=["action","avatar","className","component","disableTypography","subheader","subheaderTypographyProps","title","titleTypographyProps"],A=a=>{const{classes:e}=a;return L({root:["root"],avatar:["avatar"],action:["action"],content:["content"],title:["title"],subheader:["subheader"]},V,e)},E=d("div",{name:"MuiCardHeader",slot:"Root",overridesResolver:(a,e)=>l({[`& .${b.title}`]:e.title,[`& .${b.subheader}`]:e.subheader},e.root)})({display:"flex",alignItems:"center",padding:16}),O=d("div",{name:"MuiCardHeader",slot:"Avatar",overridesResolver:(a,e)=>e.avatar})({display:"flex",flex:"0 0 auto",marginRight:16}),j=d("div",{name:"MuiCardHeader",slot:"Action",overridesResolver:(a,e)=>e.action})({flex:"0 0 auto",alignSelf:"flex-start",marginTop:-4,marginRight:-8,marginBottom:-4}),U=d("div",{name:"MuiCardHeader",slot:"Content",overridesResolver:(a,e)=>e.content})({flex:"1 1 auto"}),$=w.forwardRef(function(e,m){const c=S({props:e,name:"MuiCardHeader"}),{action:y,avatar:i,className:T,component:h="div",disableTypography:u=!1,subheader:v,subheaderTypographyProps:C,title:H,titleTypographyProps:P}=c,M=x(c,k),r=l({},c,{component:h,disableTypography:u}),t=A(r);let s=H;s!=null&&s.type!==p&&!u&&(s=n(p,l({variant:i?"body2":"h5",className:t.title,component:"span",display:"block"},P,{children:s})));let o=v;return o!=null&&o.type!==p&&!u&&(o=n(p,l({variant:i?"body2":"body1",className:t.subheader,color:"text.secondary",component:"span",display:"block"},C,{children:o}))),f(E,l({className:N(t.root,T),as:h,ref:m,ownerState:r},M,{children:[i&&n(O,{className:t.avatar,ownerState:r,children:i}),f(U,{className:t.content,ownerState:r,children:[s,o]}),y&&n(j,{className:t.action,ownerState:r,children:y})]}))}),D=$,g=({...a})=>n(D,{...a,titleTypographyProps:{variant:"h6"},subheaderTypographyProps:{variant:"subtitle2"}});try{g.displayName="CardHeader",g.__docgenInfo={description:"",displayName:"CardHeader",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<CardHeaderClasses> & Partial<ClassNameMap<never>>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},title:{defaultValue:null,description:"The content of the component.",name:"title",required:!1,type:{name:"ReactNode"}},action:{defaultValue:null,description:"The action to display in the card header.",name:"action",required:!1,type:{name:"ReactNode"}},disableTypography:{defaultValue:{value:"false"},description:"If `true`, `subheader` and `title` won't be wrapped by a Typography component.\nThis can be useful to render an alternative Typography variant by wrapping\nthe `title` text, and optional `subheader` text\nwith the Typography component.",name:"disableTypography",required:!1,type:{name:"boolean"}},subheader:{defaultValue:null,description:"The content of the component.",name:"subheader",required:!1,type:{name:"ReactNode"}},subheaderTypographyProps:{defaultValue:null,description:"These props will be forwarded to the subheader\n(as long as disableTypography is not `true`).",name:"subheaderTypographyProps",required:!1,type:{name:'{ component?: "span"; } & TypographyOwnProps & CommonProps & Omit<Pick<DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "key" | keyof HTMLAttributes<...>> & { ...; }, "className" | ... 113 more ... | "variantMapping"> & { ...; }'}},titleTypographyProps:{defaultValue:null,description:"These props will be forwarded to the title\n(as long as disableTypography is not `true`).",name:"titleTypographyProps",required:!1,type:{name:'{ component?: "span"; } & TypographyOwnProps & CommonProps & Omit<Pick<DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "key" | keyof HTMLAttributes<...>> & { ...; }, "className" | ... 113 more ... | "variantMapping"> & { ...; }'}}}}}catch{}export{g as C};
//# sourceMappingURL=CardHeader-4e3f0ac7.js.map
