import{j as r}from"./jsx-runtime-BTJTZTIL.js";import{B as y}from"./index-DmY_4rvh.js";import{a as P}from"./index-Dl5t6TV_.js";import{L as x,a as v,b as R}from"./index-DexkmQxl.js";import{P as h}from"./Pagination-C-2_gDjk.js";import{u as b}from"./useQuery-BdnIJYMU.js";import{r as j}from"./index-BgYLq7fD.js";import{i as I}from"./suspense-r7UyhJBu.js";import{Q as L}from"./queryClient-Dd_7vySe.js";import"./index-ChsGqxH_.js";import"./Box-BU2WakPM.js";import"./identifier-CHUoN9pF.js";import"./generateUtilityClasses-aotQgNYZ.js";import"./generateUtilityClass-GxznSYtt.js";import"./useTheme-CVByJb8R.js";import"./extendSxProp-BZnzVrgj.js";import"./Grid2-BbvvmKhh.js";import"./useTheme-BGaXYmwe.js";import"./DefaultPropsProvider-ArLX9SCD.js";import"./styled-CsKbBpC_.js";import"./styled-FZfCzBz5.js";import"./isMuiElement-DiOAsJE6.js";import"./useThemeProps-BNBLMFIr.js";import"./Stack-2ILcP_1D.js";import"./Container-DvcsWH8C.js";import"./index-DLKRbc4C.js";import"./_commonjsHelpers-D6-XlEtG.js";import"./___vite-browser-external_commonjs-proxy-DDYoOVPM.js";import"./index-DuRQpI0H.js";import"./_toKey-DFcMYS53.js";import"./List-CN2yCDHK.js";import"./ListItem-ObWngzl3.js";import"./isHostComponent-DVu5iVWx.js";import"./memoTheme-BLrvrRyo.js";import"./useForkRef-Dz4aGlyk.js";import"./ListItemText-Dt0OkD4s.js";import"./useEnhancedEffect-j2zQLnYm.js";import"./ButtonBase-DwAEbHIm.js";import"./useTimeout-iC_34LsC.js";import"./objectWithoutPropertiesLoose-Dsqj8S3w.js";import"./TransitionGroupContext-BKlA24Pm.js";import"./emotion-react.browser.esm-DW5OmoQI.js";import"./isFocusVisible-B8k4qzLc.js";import"./listItemTextClasses-BE6nMJZB.js";import"./useSlot-qvYlW2UV.js";import"./resolveComponentProps-XMphxBSb.js";import"./Typography-geKghQyJ.js";import"./index-Df15702_.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./useThemeProps-BADT0iz2.js";import"./PaginationItem-T42uDpoN.js";import"./index-CmMPo3bx.js";import"./faCircleArrowRight-B14F5Piw.js";import"./faUser-D77uLSLS.js";import"./faSortDown-BIc1sKK4.js";import"./SvgIcon-D3xe1wVB.js";import"./PaginationItem-flpc0RTc.js";import"./index-DyJdRKzS.js";import"./createSvgIcon-DK1T27V3.js";import"./Pagination-BT2C5VbO.js";import"./useControlled-DxC1uCGX.js";import"./useBaseQuery-Dm_kC3Jp.js";import"./infiniteQueryBehavior-B_QQvG9O.js";const w=async({page:t,itemsPerPage:s=10,parameters:i={},getResult:a,resource:e})=>{const o={limit:s,offset:(t-1)*s,...i.params},m=e.addParams(o,i),n=await e.postGet(o,m),u=a||e.getResult,c=(typeof u=="function"?u.call(e,n.data):n.data[u])||n.data;if(!Array.isArray(c))throw new TypeError(`Expected data to be an array but got \`${typeof c}\`. Use the \`getResult\` prop to specify how to get the data from the API response.`);return{items:c,totalCount:n.data.totalCount}},d=({page:t,itemsPerPage:s,parameters:i,getResult:a,resource:e})=>b(["resource",t],()=>w({page:t,itemsPerPage:s,parameters:i,getResult:a,resource:e}));try{d.displayName="useResourcePagination",d.__docgenInfo={description:"",displayName:"useResourcePagination",props:{page:{defaultValue:null,description:"",name:"page",required:!0,type:{name:"number"}},getResult:{defaultValue:null,description:'When a function, the function is called with the response body from the API call and is expected to return an array containing the list of items for the page. When a string, the string is expected to be a simple key used to get the value from the response. ("simple" means dot notation is not supported for grabbing values from nested objects. If your result is deeply nested, provide a function)',name:"getResult",required:!0,type:{name:"string | ((result: TData) => unknown[])"}},itemsPerPage:{defaultValue:{value:"10"},description:"If array, defaults `totalCount` to the length of the array, and page values are sliced from the Array. If a function, it is called with the current page as an argument and expects an array of items to be returned.",name:"itemsPerPage",required:!1,type:{name:"number"}},parameters:{defaultValue:{value:"{}"},description:"Object use to create querystring parameters in the request.",name:"parameters",required:!1,type:{name:"{ params?: Record<string, unknown>; } & Record<string, unknown>"}},resource:{defaultValue:null,description:"Availity API resource (see [@availity/api-axios](https://github.com/Availity/sdk-js/tree/master/packages/api-axios)).",name:"resource",required:!0,type:{name:"Resource<TData>"}}}}}catch{}const Bt={title:"Components/Pagination/useResourcePagination",component:h,tags:["autodocs"],decorators:[t=>r.jsx(I,{client:new L,children:r.jsx(t,{})})],args:{count:10}},p={render:()=>{var e;const[t,s]=j.useState(1),i=10,a=d({page:t,resource:P,getResult:o=>o.organizations,itemsPerPage:i});return a.isLoading?r.jsx("div",{children:"Loading..."}):a.data?r.jsxs(y,{children:[r.jsx(x,{children:(e=a.data)==null?void 0:e.items.map(o=>r.jsx(v,{children:r.jsx(R,{primary:o.name,secondary:o.customerId})}))}),r.jsx(h,{page:t,count:Math.ceil(Math.abs(a.data.totalCount/i)),onChange:(o,m)=>s(m)})]}):r.jsx("div",{children:"Error"})}};var l,g,f;p.parameters={...p.parameters,docs:{...(l=p.parameters)==null?void 0:l.docs,source:{originalSource:`{
  render: () => {
    const [page, setPage] = useState(1);
    const itemsPerPage = 10;
    const resp = useResourcePagination({
      page,
      resource: avOrganizationsApi,
      getResult: result => result.organizations,
      itemsPerPage
    });
    if (resp.isLoading) {
      return <div>Loading...</div>;
    }
    return resp.data ? <Box>
        <List>
          {resp.data?.items.map(item => <ListItem>
              <ListItemText primary={item.name} secondary={item.customerId} />
            </ListItem>)}
        </List>
        <Pagination page={page} count={Math.ceil(Math.abs(resp.data.totalCount / itemsPerPage))} onChange={(event, newPage) => setPage(newPage)} />
      </Box> : <div>Error</div>;
  }
}`,...(f=(g=p.parameters)==null?void 0:g.docs)==null?void 0:f.source}}};const Mt=["_useResourcePagination"];export{Mt as __namedExportsOrder,p as _useResourcePagination,Bt as default};
