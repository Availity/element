import{j as e}from"./jsx-runtime-BTJTZTIL.js";import{S as d}from"./index-Daj15cVv.js";import{S as u,B as c}from"./index-DmY_4rvh.js";import{T as f}from"./index-ClMemn8c.js";import{L as g}from"./LinearProgress-DRbxDwO3.js";import"./index-ChsGqxH_.js";import"./faCircleArrowRight-B14F5Piw.js";import"./index-BgYLq7fD.js";import"./_commonjsHelpers-D6-XlEtG.js";import"./faUser-D77uLSLS.js";import"./faSortDown-BIc1sKK4.js";import"./SvgIcon-D3xe1wVB.js";import"./generateUtilityClass-GxznSYtt.js";import"./identifier-CHUoN9pF.js";import"./memoTheme-BLrvrRyo.js";import"./styled-FZfCzBz5.js";import"./DefaultPropsProvider-ArLX9SCD.js";import"./generateUtilityClasses-aotQgNYZ.js";import"./Box-BU2WakPM.js";import"./useTheme-CVByJb8R.js";import"./extendSxProp-BZnzVrgj.js";import"./Grid2-BbvvmKhh.js";import"./useTheme-BGaXYmwe.js";import"./styled-CsKbBpC_.js";import"./isMuiElement-DiOAsJE6.js";import"./useThemeProps-BNBLMFIr.js";import"./Stack-2ILcP_1D.js";import"./Container-DvcsWH8C.js";import"./Typography-geKghQyJ.js";import"./index-Df15702_.js";import"./emotion-react.browser.esm-DW5OmoQI.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./index-DyJdRKzS.js";const s=({variant:r="determinate",value:t=0,sx:m,hidePercentage:p=!1,...l})=>e.jsxs(u,{direction:"row",sx:{alignItems:"center"},children:[e.jsx(c,{sx:{width:"100%",mr:.5},children:e.jsx(g,{variant:r,...l,value:t,color:"success",sx:{width:"100%",...m}})}),t===100&&e.jsx(d,{color:"success","data-icon":"complete"}),!p&&e.jsx(f,{variant:"body2",sx:{color:"text.secondary",ml:1},children:`${Math.round(t)}%`})]});try{s.displayName="LinearProgress",s.__docgenInfo={description:"",displayName:"LinearProgress",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<LinearProgressClasses>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},variant:{defaultValue:{value:"determinate"},description:`The variant to use.
Use indeterminate or query when there is no progress value.`,name:"variant",required:!1,type:{name:'OverridableStringUnion<"indeterminate" | "determinate" | "buffer" | "query", LinearProgressPropsVariantOverrides>'}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}},value:{defaultValue:{value:"0"},description:`The value of the progress indicator for the determinate and buffer variants.
Value between 0 and 100.`,name:"value",required:!1,type:{name:"number"}},valueBuffer:{defaultValue:null,description:`The value for the buffer variant.
Value between 0 and 100.`,name:"valueBuffer",required:!1,type:{name:"number"}},hidePercentage:{defaultValue:{value:"false"},description:"",name:"hidePercentage",required:!1,type:{name:"boolean"}}}}}catch{}const Q={title:"Components/Progress/LinearProgress",component:s,tags:["autodocs"]},a={render:r=>e.jsx(s,{...r}),args:{value:50,"aria-label":"example-progress-bar"}};var o,i,n;a.parameters={...a.parameters,docs:{...(o=a.parameters)==null?void 0:o.docs,source:{originalSource:`{
  render: (args: LinearProgressProps) => <LinearProgress {...args} />,
  args: {
    value: 50,
    'aria-label': 'example-progress-bar'
  }
}`,...(n=(i=a.parameters)==null?void 0:i.docs)==null?void 0:n.source}}};const W=["_LinearProgress"];export{a as _LinearProgress,W as __namedExportsOrder,Q as default};
