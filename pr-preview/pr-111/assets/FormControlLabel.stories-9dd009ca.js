import{j as e,a as c}from"./jsx-runtime-390e5fc8.js";import{F as eo}from"./FormLabel-7a0e33a5.js";import{r as s}from"./index-570b25c1.js";import{F as ro}from"./FieldHelpIcon-0d9a0afe.js";import{B as H}from"./Box-a5c2ee7f.js";import{M as to}from"./FormControlLabel-ecc014e3.js";import{S as ao,C as d}from"./Checkbox-e24b272d.js";import{c as j}from"./clsx.m-fb33c42b.js";import{g as A,s as g,c as W,r as no}from"./styled-d0245a8f.js";import{u as Y}from"./useThemeProps-bb804320.js";import{g as Z}from"./generateUtilityClasses-145aac4e.js";import{u as lo,f as io}from"./utils-3d35716f.js";import{F as V,M as so}from"./FormLabel-a84593f1.js";import{u as co}from"./useControlled-9b1271e0.js";import{u as uo}from"./useId-6f4bfce0.js";import{u as po}from"./useForkRef-153a0a89.js";import{c as J}from"./createSvgIcon-ab70d8ae.js";import{c as mo}from"./createChainedFunction-0bab83cf.js";import{c as K,a as fo}from"./createTheme-4dc6b23f.js";import"./_commonjsHelpers-042e6b4d.js";import"./index-9681c8ff.js";import"./index-74bc51e6.js";import"./faCircleArrowRight-a712a312.js";import"./faMagnifyingGlass-2576db7f.js";import"./SvgIcon-6af4d5b9.js";import"./index-df90da3e.js";import"./Button-03854916.js";import"./ButtonBase-ae02db0a.js";import"./emotion-react.browser.esm-325397be.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-16f43d9e.js";import"./useIsFocusVisible-5e7b1ff1.js";import"./useEnhancedEffect-460150e6.js";import"./Tooltip-d34c04c4.js";import"./useTheme-108b79b5.js";import"./ownerDocument-613eb639.js";import"./index-8a077077.js";import"./useSlotProps-ff3a8657.js";import"./isHostComponent-73d6e646.js";import"./utils-78dc3aa5.js";import"./IconButton-8720a92d.js";import"./LoadingButton-5b331dfb.js";import"./extendSxProp-fa3ab054.js";import"./Typography-9728a9c9.js";import"./isMuiElement-9a8390c4.js";function ho(o){return A("MuiFormGroup",o)}Z("MuiFormGroup",["root","row","error"]);const bo=o=>{const{classes:r,row:t,error:a}=o;return W({root:["root",t&&"row",a&&"error"]},ho,r)},Co=g("div",{name:"MuiFormGroup",slot:"Root",overridesResolver:(o,r)=>{const{ownerState:t}=o;return[r.root,t.row&&r.row]}})(({ownerState:o})=>({display:"flex",flexDirection:"column",flexWrap:"wrap",...o.row&&{flexDirection:"row"}})),Fo=s.forwardRef(function(r,t){const a=Y({props:r,name:"MuiFormGroup"}),{className:n,row:u=!1,...b}=a,p=lo(),C=io({props:a,muiFormControl:p,states:["error"]}),f={...a,row:u,error:C.error},m=bo(f);return e(Co,{className:j(m.root,n),ownerState:f,ref:t,...b})}),S=Fo,go=J(e("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"}),"RadioButtonUnchecked"),yo=J(e("path",{d:"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"}),"RadioButtonChecked"),Ro=g("span")({position:"relative",display:"flex"}),ko=g(go)({transform:"scale(1)"}),vo=g(yo)(({theme:o,ownerState:r})=>({left:0,position:"absolute",transform:"scale(0)",transition:o.transitions.create("transform",{easing:o.transitions.easing.easeIn,duration:o.transitions.duration.shortest}),...r.checked&&{transform:"scale(1)",transition:o.transitions.create("transform",{easing:o.transitions.easing.easeOut,duration:o.transitions.duration.shortest})}}));function Q(o){const{checked:r=!1,classes:t={},fontSize:a}=o,n={...o,checked:r};return c(Ro,{className:t.root,ownerState:n,children:[e(ko,{fontSize:a,className:t.background,ownerState:n}),e(vo,{fontSize:a,className:t.dot,ownerState:n})]})}const xo=s.createContext(void 0),X=xo;function Io(){return s.useContext(X)}function So(o){return A("MuiRadio",o)}const wo=Z("MuiRadio",["root","checked","disabled","colorPrimary","colorSecondary"]),T=wo,Go=o=>{const{classes:r,color:t}=o,a={root:["root",`color${K(t)}`]};return{...r,...W(a,So,r)}},Lo=g(ao,{shouldForwardProp:o=>no(o)||o==="classes",name:"MuiRadio",slot:"Root",overridesResolver:(o,r)=>{const{ownerState:t}=o;return[r.root,r[`color${K(t.color)}`]]}})(({theme:o,ownerState:r})=>({color:(o.vars||o).palette.text.secondary,...!r.disableRipple&&{"&:hover":{backgroundColor:o.vars?`rgba(${r.color==="default"?o.vars.palette.action.activeChannel:o.vars.palette[r.color].mainChannel} / ${o.vars.palette.action.hoverOpacity})`:fo(r.color==="default"?o.palette.action.active:o.palette[r.color].main,o.palette.action.hoverOpacity),"@media (hover: none)":{backgroundColor:"transparent"}}},...r.color!=="default"&&{[`&.${T.checked}`]:{color:(o.vars||o).palette[r.color].main}},[`&.${T.disabled}`]:{color:(o.vars||o).palette.action.disabled}}));function qo(o,r){return typeof r=="object"&&r!==null?o===r:String(o)===String(r)}const _=e(Q,{checked:!0}),M=e(Q,{}),Vo=s.forwardRef(function(r,t){var a,n;const u=Y({props:r,name:"MuiRadio"}),{checked:b,checkedIcon:p=_,color:C="primary",icon:f=M,name:m,onChange:y,size:h="medium",className:w,...R}=u,k={...u,color:C,size:h},i=Go(k),F=Io();let G=b;const oo=mo(y,F&&F.onChange);let L=m;return F&&(typeof G>"u"&&(G=qo(F.value,u.value)),typeof L>"u"&&(L=F.name)),e(Lo,{type:"radio",icon:s.cloneElement(f,{fontSize:(a=M.props.fontSize)!=null?a:h}),checkedIcon:s.cloneElement(p,{fontSize:(n=_.props.fontSize)!=null?n:h}),ownerState:k,classes:i,name:L,checked:G,onChange:oo,ref:t,className:j(i.root,w),...R})}),q=Vo,To=s.forwardRef(function(r,t){const{actions:a,children:n,defaultValue:u,name:b,onChange:p,value:C,...f}=r,m=s.useRef(null),[y,h]=co({controlled:C,default:u,name:"RadioGroup"});s.useImperativeHandle(a,()=>({focus:()=>{let i=m.current.querySelector("input:not(:disabled):checked");i||(i=m.current.querySelector("input:not(:disabled)")),i&&i.focus()}}),[]);const w=po(t,m),R=uo(b),k=s.useMemo(()=>({name:R,onChange(i){h(i.target.value),p&&p(i,i.target.value)},value:y}),[R,p,h,y]);return e(X.Provider,{value:k,children:e(S,{role:"radiogroup",ref:w,...f,children:n})})}),_o=To,l=s.forwardRef(({helpTopicId:o,id:r,...t},a)=>{const n=r||(t.htmlFor?`${t.htmlFor}-label`:void 0);return c(H,{children:[e(to,{id:n,...t,ref:a}),o?e(ro,{helpTopicId:"12345",labelId:n}):null]})});try{l.displayName="FormControlLabel",l.__docgenInfo={description:"",displayName:"FormControlLabel",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<FormControlLabelClasses>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},label:{defaultValue:null,description:"A text or an element to be used in an enclosing label element.",name:"label",required:!0,type:{name:"ReactNode"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:"Callback fired when the state is changed.\n@param event The event source of the callback.\nYou can pull out the new checked state by accessing `event.target.checked` (boolean).",name:"onChange",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>, checked: boolean) => void"}},disabled:{defaultValue:null,description:"If `true`, the control is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:'{ typography?: TypographyProps<"span", {}>; }'}},value:{defaultValue:null,description:"The value of the component.",name:"value",required:!1,type:{name:"unknown"}},disableTypography:{defaultValue:null,description:"If `true`, the label is rendered as it is passed without an additional typography node.",name:"disableTypography",required:!1,type:{name:"boolean"}},helpTopicId:{defaultValue:null,description:"Adds `FieldHelpIcon` next to the label (should not be within label for accessibility)",name:"helpTopicId",required:!1,type:{name:"string"}},required:{defaultValue:null,description:"If `true`, adds required to control. (No required asterisk on individual controls in the group)",name:"required",required:!1,type:{name:"boolean"}},checked:{defaultValue:null,description:"If `true`, the component appears selected.",name:"checked",required:!1,type:{name:"boolean"}},control:{defaultValue:null,description:"A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.",name:"control",required:!0,type:{name:"ReactElement<any, any>"}},inputRef:{defaultValue:null,description:"Pass a ref to the `input` element.",name:"inputRef",required:!1,type:{name:"Ref<any>"}}}}}catch{}const xe={title:"Components/FormUtils/FormControlLabel",component:l,tags:["autodocs"],parameters:{docs:{description:{component:"Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component to display a label."}}}},v={render:o=>e(l,{...o}),args:{label:"Label",required:!0,control:e(d,{})}},x={render:()=>c(S,{children:[e(l,{control:e(d,{}),label:"Default"}),e(l,{helpTopicId:"1234",control:e(d,{}),label:"With FieldHelpIcon"}),e(l,{disabled:!0,control:e(d,{}),label:"Disabled"}),e(V,{error:!0,children:e(S,{children:e(l,{control:e(d,{}),label:"Error (Only visible in FormControl group)"})})})]})},I={render:()=>c(H,{display:"flex",flexDirection:"column",children:[c(V,{component:"fieldset","aria-labelledby":"checkbox-group",children:[e(so,{component:"legend",id:"checkbox-group",children:"Checkbox Group"}),c(S,{row:!0,children:[e(l,{control:e(d,{}),label:"Check 1"}),e(l,{control:e(d,{}),label:"Check 2",helpTopicId:"2"}),e(l,{control:e(d,{}),label:"Check 3"})]})]}),c(V,{required:!0,error:!0,children:[e(eo,{id:"radio-group",helpTopicId:"12",children:"Radio Group"}),c(_o,{"aria-labelledby":"radio-group",name:"radio-group",defaultValue:"3",children:[e(l,{control:e(q,{}),value:"1",label:"Radio 1"}),e(l,{control:e(q,{}),value:"2",label:"Radio 2"}),e(l,{control:e(q,{}),value:"3",label:"Radio 3"})]})]})]})};var P,$,B;v.parameters={...v.parameters,docs:{...(P=v.parameters)==null?void 0:P.docs,source:{originalSource:`{
  render: (args: FormControlLabelProps) => <FormControlLabel {...args} />,
  args: {
    label: 'Label',
    required: true,
    control: <Checkbox />
  }
}`,...(B=($=v.parameters)==null?void 0:$.docs)==null?void 0:B.source}}};var E,z,N;x.parameters={...x.parameters,docs:{...(E=x.parameters)==null?void 0:E.docs,source:{originalSource:`{
  render: () => <FormGroup>
      <FormControlLabel control={<Checkbox />} label="Default" />
      <FormControlLabel helpTopicId="1234" control={<Checkbox />} label="With FieldHelpIcon" />
      <FormControlLabel disabled control={<Checkbox />} label="Disabled" />
      {/* Error state not available on individual control, must be within FormControl. */}
      <FormControl error>
        <FormGroup>
          <FormControlLabel control={<Checkbox />} label="Error (Only visible in FormControl group)" />
        </FormGroup>
      </FormControl>
    </FormGroup>
}`,...(N=(z=x.parameters)==null?void 0:z.docs)==null?void 0:N.source}}};var D,U,O;I.parameters={...I.parameters,docs:{...(D=I.parameters)==null?void 0:D.docs,source:{originalSource:`{
  render: () => <Box display="flex" flexDirection="column">
      <FormControl component="fieldset" aria-labelledby="checkbox-group">
        <MuiFormLabel component="legend" id="checkbox-group">
          Checkbox Group
        </MuiFormLabel>
        <FormGroup row>
          <FormControlLabel control={<Checkbox />} label="Check 1" />
          <FormControlLabel control={<Checkbox />} label="Check 2" helpTopicId="2" />
          <FormControlLabel control={<Checkbox />} label="Check 3" />
        </FormGroup>
      </FormControl>
      <FormControl required error>
        <FormLabel id="radio-group" helpTopicId="12">
          Radio Group
        </FormLabel>
        <RadioGroup aria-labelledby="radio-group" name="radio-group" defaultValue="3">
          <FormControlLabel control={<Radio />} value="1" label="Radio 1" />
          <FormControlLabel control={<Radio />} value="2" label="Radio 2" />
          <FormControlLabel control={<Radio />} value="3" label="Radio 3" />
        </RadioGroup>
      </FormControl>
    </Box>
}`,...(O=(U=I.parameters)==null?void 0:U.docs)==null?void 0:O.source}}};const Ie=["_FormLabel","_States","_Groups"];export{v as _FormLabel,I as _Groups,x as _States,Ie as __namedExportsOrder,xe as default};
//# sourceMappingURL=FormControlLabel.stories-9dd009ca.js.map
