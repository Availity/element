{"version":3,"file":"index-18abf711.js","sources":["../../../packages/avatar/dist/index.mjs","../../../packages/badge/dist/index.mjs","../../../packages/chip/dist/index.mjs","../../../packages/paper/dist/index.mjs","../../../packages/textfield/dist/index.mjs"],"sourcesContent":["// src/lib/Avatar.tsx\nimport { Avatar as MuiAvatar } from \"@mui/material\";\nimport { tokens } from \"@availity/design-tokens\";\nimport { jsx } from \"react/jsx-runtime\";\nvar sizeStyling = {\n  xs: { width: 18, height: 18, fontSize: tokens.fontSizesCaption },\n  s: { width: 24, height: 24, fontSize: tokens.fontSizesCaption },\n  m: { width: 40, height: 40, fontSize: tokens.fontSizesH5, fontWeight: tokens.fontWeightsBold },\n  l: { width: 80, height: 80, fontSize: tokens.fontSizesH3, fontWeight: tokens.fontWeightsBold },\n  xl: { width: 140, height: 140, fontSize: tokens.fontSizesH1, fontWeight: tokens.fontWeightsBold }\n};\nvar getInitials = (name, size) => {\n  if (name.split(\" \").length > 1 && size !== \"xs\") {\n    return `${name.split(\" \")[0][0]}${name.split(\" \")[1][0]}`;\n  }\n  return name.charAt(0);\n};\nvar formatChildren = (children, size) => {\n  if (typeof children === \"string\") {\n    return getInitials(children, size).toUpperCase();\n  }\n  return children;\n};\nvar Avatar = ({ children, size = \"xl\", sx, ...rest }) => {\n  return /* @__PURE__ */ jsx(MuiAvatar, {\n    ...rest,\n    variant: \"circular\",\n    sx: {\n      ...sx,\n      ...sizeStyling[size] || sizeStyling.xl\n    },\n    children: formatChildren(children, size)\n  });\n};\nexport {\n  Avatar\n};\n","// src/lib/Badge.tsx\nimport { Badge as MUIBadge } from \"@mui/material\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Badge = ({ children, color = \"error\", ...rest }) => /* @__PURE__ */ jsx(MUIBadge, {\n  color,\n  ...rest,\n  children\n});\nexport {\n  Badge\n};\n","// src/lib/Chip.tsx\nimport { Chip as MuiChip } from \"@mui/material\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Chip = ({ color = \"default\", onDelete, ...rest }) => {\n  return /* @__PURE__ */ jsx(MuiChip, {\n    color,\n    onClick: onDelete,\n    onDelete,\n    ...rest\n  });\n};\nexport {\n  Chip\n};\n","// src/lib/Paper.tsx\nimport { forwardRef } from \"react\";\nimport { Paper as MuiPaper } from \"@mui/material\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Paper = forwardRef((props, ref) => {\n  return /* @__PURE__ */ jsx(MuiPaper, {\n    ...props,\n    ref\n  });\n});\nexport {\n  Paper\n};\n","// src/lib/TextField.tsx\nimport { forwardRef } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport { FormLabel } from \"@availity/mui-form-utils\";\nimport { Input } from \"@availity/mui-input\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar TextField = forwardRef(\n  ({ error, fullWidth, helperText, id, label, startAdornment, endAdornment, required, ...rest }, ref) => {\n    const labelId = `${id}-label`;\n    const helperId = `${id}-helper-text`;\n    return /* @__PURE__ */ jsxs(FormControl, {\n      size: \"small\",\n      fullWidth,\n      children: [\n        label && /* @__PURE__ */ jsx(FormLabel, {\n          id: labelId,\n          htmlFor: id,\n          required,\n          error: !!error,\n          disabled: rest.disabled,\n          children: label\n        }),\n        /* @__PURE__ */ jsx(Input, {\n          inputRef: ref,\n          id,\n          \"aria-labelledby\": labelId,\n          \"aria-describedby\": helperId,\n          error: !!error,\n          startAdornment: startAdornment ? /* @__PURE__ */ jsx(InputAdornment, {\n            position: \"start\",\n            children: startAdornment\n          }) : void 0,\n          endAdornment: endAdornment ? /* @__PURE__ */ jsx(InputAdornment, {\n            position: \"end\",\n            children: endAdornment\n          }) : void 0,\n          ...rest\n        }),\n        /* @__PURE__ */ jsx(FormHelperText, {\n          id: helperId,\n          error,\n          children: helperText\n        })\n      ]\n    });\n  }\n);\nTextField.displayName = \"TextField\";\nexport {\n  TextField\n};\n"],"names":["tokens","Badge","children","color","rest","jsx","MUIBadge","Chip","onDelete","MuiChip","Paper","forwardRef","props","ref","MuiPaper","TextField","error","fullWidth","helperText","id","label","startAdornment","endAdornment","required","labelId","helperId","jsxs","FormControl","FormLabel","Input","InputAdornment","FormHelperText"],"mappings":"0YAKyCA,EAAO,iBACRA,EAAO,iBACPA,EAAO,YAAyBA,EAAO,gBACvCA,EAAO,YAAyBA,EAAO,gBACpCA,EAAO,YAAyBA,EAAO,gBCN/E,IAACC,EAAQ,CAAC,CAAE,SAAAC,EAAU,MAAAC,EAAQ,QAAS,GAAGC,CAAI,IAAuBC,EAAIC,EAAU,CACpF,MAAAH,EACA,GAAGC,EACH,SAAAF,CACF,CAAC,ECJGK,EAAO,CAAC,CAAE,MAAAJ,EAAQ,UAAW,SAAAK,EAAU,GAAGJ,KACrBC,EAAII,EAAS,CAClC,MAAAN,EACA,QAASK,EACT,SAAAA,EACA,GAAGJ,CACP,CAAG,ECLHM,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IACAR,EAAAS,EAAA,CACA,GAAAF,EACA,IAAAC,CACA,CAAA,CACA,iECDA,IAAAE,EAAAJ,EAAA,WACA,CAAA,CAAA,MAAAK,EAAA,UAAAC,EAAA,WAAAC,EAAA,GAAAC,EAAA,MAAAC,EAAA,eAAAC,EAAA,aAAAC,EAAA,SAAAC,EAAA,GAAAnB,CAAA,EAAAS,IAAA,CACA,MAAAW,EAAA,GAAAL,UACAM,EAAA,GAAAN,gBACA,OAAAO,EAAAC,EAAA,CACA,KAAA,QACA,UAAAV,EACA,SAAA,CACAG,GAAAf,EAAAuB,EAAA,CACA,GAAAJ,EACA,QAAAL,EACA,SAAAI,EACA,MAAA,CAAA,CAAAP,EACA,SAAAZ,EAAA,SACA,SAAAgB,CACA,CAAA,EACAf,EAAAwB,EAAA,CACA,SAAAhB,EACA,GAAAM,EACA,kBAAAK,EACA,mBAAAC,EACA,MAAA,CAAA,CAAAT,EACA,eAAAK,EAAAhB,EAAAyB,EAAA,CACA,SAAA,QACA,SAAAT,CACA,CAAA,EAAA,OACA,aAAAC,EAAAjB,EAAAyB,EAAA,CACA,SAAA,MACA,SAAAR,CACA,CAAA,EAAA,OACA,GAAAlB,CACA,CAAA,EACAC,EAAA0B,EAAA,CACA,GAAAN,EACA,MAAAT,EACA,SAAAE,CACA,CAAA,CACA,CACA,CAAA,CACA,CACA,EACAH,EAAA,YAAA"}