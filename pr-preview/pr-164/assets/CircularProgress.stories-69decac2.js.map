{"version":3,"file":"CircularProgress.stories-69decac2.js","sources":["../../../packages/progress/src/lib/CircularProgress.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n  CircularProgress as MuiCircularProgress,\n  CircularProgressProps as MuiCircularProgressProps,\n  Stack,\n} from '@mui/material';\nimport { SuccessCircleIcon, WarningCircleIcon } from '@availity/mui-icon';\nimport { Typography } from '@availity/mui-typography';\n\nexport interface CircularProgressProps\n  extends Omit<MuiCircularProgressProps, 'disableShrink' | 'thickness' | 'variant'> {\n  /**@default 'primary' */\n  color?: 'primary' | 'inherit';\n  /** If `true` the the loading animation is replaced with Error Icon and the words \"Loading error\" display.\n   * @default false\n   */\n  error?: boolean;\n  /** If `true` the the loading animation is replaced with Success Icon and the words \"Loading successful\" display. Note: This is overridden by the `error` prop.\n   * @default false\n   */\n  success?: boolean;\n  /** If `true` the  word \"Loading\" displays beneath the icon\n   * @default true\n   */\n  loadingCaption?: boolean;\n  /** The size of the component.\n   * @default 'default'\n   */\n  size?: 'default' | 'small';\n}\n\nexport type StatusIconProps = {\n  status: string;\n  size: 'default' | 'small';\n};\n\nconst StatusIcon = ({ status, size }: StatusIconProps) => {\n  const fontSize = size === 'small' ? 'medium' : 'large';\n\n  switch (status) {\n    case 'error':\n      return <WarningCircleIcon color=\"error\" fontSize={fontSize} titleAccess=\"loading error\" />;\n    case 'success':\n      return <SuccessCircleIcon color=\"success\" fontSize={fontSize} titleAccess=\"loading successful\" />;\n    default:\n      return null;\n  }\n};\n\nconst getCaptionText = (status: string) =>\n  ({\n    loading: 'Loading',\n    error: 'Loading error',\n    success: 'Loading successful',\n  }[status] || '');\n\nexport const CircularProgress = ({\n  loadingCaption = true,\n  error = false,\n  success = false,\n  size = 'default',\n  ...props\n}: CircularProgressProps): JSX.Element => {\n  const [status, setStatus] = useState('loading');\n\n  useEffect(() => {\n    if (error) {\n      setStatus('error');\n    } else if (success) {\n      setStatus('success');\n    } else {\n      setStatus('loading');\n    }\n  }, [error, success]);\n\n  return (\n    <Stack width=\"fit-content\" alignItems=\"center\">\n      {status === 'loading' ? (\n        <MuiCircularProgress\n          aria-label=\"Loading\"\n          {...props}\n          size={size === 'small' ? 24 : 40}\n          variant=\"indeterminate\"\n        />\n      ) : (\n        <StatusIcon status={status} size={size} />\n      )}\n      <Typography marginTop=\"8px\" variant=\"caption\">\n        {loadingCaption || error || success ? getCaptionText(status) : null}\n      </Typography>\n    </Stack>\n  );\n};\n"],"names":["StatusIcon","status","size","fontSize","jsx","WarningCircleIcon","SuccessCircleIcon","getCaptionText","CircularProgress","loadingCaption","error","success","props","setStatus","useState","useEffect","jsxs","Stack","MuiCircularProgress","Typography"],"mappings":"0yBAoCA,MAAAA,EAAA,CAAA,CAAA,OAAAC,EAAA,KAAAC,KAAA,CACE,MAAAC,EAAAD,IAAA,QAAA,SAAA,QAEA,OAAAD,EAAA,CAAgB,IAAA,QAEZ,OAAAG,EAAAC,EAAA,CAAA,MAAA,QAAA,SAAAF,EAAA,YAAA,eAAA,CAAA,EAAwF,IAAA,UAExF,OAAAC,EAAAE,EAAA,CAAA,MAAA,UAAA,SAAAH,EAAA,YAAA,oBAAA,CAAA,EAA+F,QAE/F,OAAA,IAAO,CAEb,EAEAI,EAAAN,IAAA,CACG,QAAA,UACU,MAAA,gBACF,QAAA,oBAET,GAAAA,CAAA,GAAA,GAEKO,EAAA,CAAA,CAA0B,eAAAC,EAAA,GACd,MAAAC,EAAA,GACT,QAAAC,EAAA,GACE,KAAAT,EAAA,UACH,GAAAU,CAET,IAAA,CACE,KAAA,CAAAX,EAAAY,CAAA,EAAAC,EAAA,SAAA,SAAA,EAEAC,OAAAA,EAAAA,UAAA,IAAA,CAEIF,EADFH,EACE,QAAiBC,EAEjB,UAEA,SAJA,CAKF,EAAA,CAAAD,EAAAC,CAAA,CAAA,EAGFK,EAAAC,EAAA,CAAA,MAAA,cAAA,WAAA,SAAA,SAAA,CAEKhB,IAAA,UAAAG,EACCc,EAAC,CAAA,aAAA,UACY,GAAAN,EACP,KAAAV,IAAA,QAAA,GAAA,GAC0B,QAAA,eACtB,CAAA,EAAAE,EAAAJ,EAAA,CAAA,OAAAC,EAAA,KAAAC,CAAA,CAAA,EAG8BE,EAAAe,EAAA,CAAA,UAAA,MAAA,QAAA,UAAA,SAAAV,GAAAC,GAAAC,EAAAJ,EAAAN,CAAA,EAAA,IAAA,CAAA,CAI1C,CAAA,CAAA,CAGN;;;;;;"}