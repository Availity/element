import{a as p,j as g}from"./jsx-runtime-a3bcee63.js";import{u as x}from"./useTheme-c07bb8e7.js";import{_ as d,b as w}from"./createTheme-3fee607a.js";import{r as N}from"./index-570b25c1.js";import{c as S}from"./clsx-b831246b.js";import{u as R}from"./useThemeProps-98dc6282.js";import{g as L,s as f,c as V}from"./styled-523cb007.js";import{g as _}from"./generateUtilityClasses-b58f947a.js";import{M as h}from"./Typography-f453bb5c.js";function q(a){return L("MuiCardHeader",a)}const k=_("MuiCardHeader",["root","avatar","action","content","title","subheader"]),b=k,A=["action","avatar","className","component","disableTypography","subheader","subheaderTypographyProps","title","titleTypographyProps"],E=a=>{const{classes:e}=a;return V({root:["root"],avatar:["avatar"],action:["action"],content:["content"],title:["title"],subheader:["subheader"]},q,e)},O=f("div",{name:"MuiCardHeader",slot:"Root",overridesResolver:(a,e)=>d({[`& .${b.title}`]:e.title,[`& .${b.subheader}`]:e.subheader},e.root)})({display:"flex",alignItems:"center",padding:16}),j=f("div",{name:"MuiCardHeader",slot:"Avatar",overridesResolver:(a,e)=>e.avatar})({display:"flex",flex:"0 0 auto",marginRight:16}),U=f("div",{name:"MuiCardHeader",slot:"Action",overridesResolver:(a,e)=>e.action})({flex:"0 0 auto",alignSelf:"flex-start",marginTop:-4,marginRight:-8,marginBottom:-4}),$=f("div",{name:"MuiCardHeader",slot:"Content",overridesResolver:(a,e)=>e.content})({flex:"1 1 auto"}),D=N.forwardRef(function(e,c){const u=R({props:e,name:"MuiCardHeader"}),{action:m,avatar:t,className:y,component:o="div",disableTypography:r=!1,subheader:v,subheaderTypographyProps:C,title:H,titleTypographyProps:P}=u,M=w(u,A),n=d({},u,{component:o,disableTypography:r}),s=E(n);let l=H;l!=null&&l.type!==h&&!r&&(l=p(h,d({variant:t?"body2":"h5",className:s.title,component:"span",display:"block"},P,{children:l})));let i=v;return i!=null&&i.type!==h&&!r&&(i=p(h,d({variant:t?"body2":"body1",className:s.subheader,color:"text.secondary",component:"span",display:"block"},C,{children:i}))),g(O,d({className:S(s.root,y),as:o,ref:c,ownerState:n},M,{children:[t&&p(j,{className:s.avatar,ownerState:n,children:t}),g($,{className:s.content,ownerState:n,children:[l,i]}),m&&p(U,{className:s.action,ownerState:n,children:m})]}))}),I=D,T=({titleTypographyProps:a,subheaderTypographyProps:e,...c})=>{var t,y,o,r;const m=(r=(o=(y=(t=x().components)==null?void 0:t.MuiCardHeader)==null?void 0:y.defaultProps)==null?void 0:o.titleTypographyProps)==null?void 0:r.variant;return p(I,{...c,titleTypographyProps:{variant:m,...a},subheaderTypographyProps:{variant:"subtitle2",...e}})};try{T.displayName="CardHeader",T.__docgenInfo={description:"",displayName:"CardHeader",props:{className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<CardHeaderClasses> & Partial<ClassNameMap<never>>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},title:{defaultValue:null,description:"The content of the component.",name:"title",required:!1,type:{name:"ReactNode"}},action:{defaultValue:null,description:"The action to display in the card header.",name:"action",required:!1,type:{name:"ReactNode"}},titleTypographyProps:{defaultValue:null,description:"These props will be forwarded to the title\n(as long as disableTypography is not `true`).",name:"titleTypographyProps",required:!1,type:{name:'{ component?: "span"; } & TypographyOwnProps & CommonProps & Omit<Pick<DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "key" | keyof HTMLAttributes<...>> & { ...; }, "className" | ... 113 more ... | "variantMapping"> & { ...; }'}},disableTypography:{defaultValue:{value:"false"},description:"If `true`, `subheader` and `title` won't be wrapped by a Typography component.\nThis can be useful to render an alternative Typography variant by wrapping\nthe `title` text, and optional `subheader` text\nwith the Typography component.",name:"disableTypography",required:!1,type:{name:"boolean"}},subheader:{defaultValue:null,description:"The content of the component.",name:"subheader",required:!1,type:{name:"ReactNode"}},subheaderTypographyProps:{defaultValue:null,description:"These props will be forwarded to the subheader\n(as long as disableTypography is not `true`).",name:"subheaderTypographyProps",required:!1,type:{name:'{ component?: "span"; } & TypographyOwnProps & CommonProps & Omit<Pick<DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>, "key" | keyof HTMLAttributes<...>> & { ...; }, "className" | ... 113 more ... | "variantMapping"> & { ...; }'}}}}}catch{}export{T as C};
//# sourceMappingURL=CardHeader-163d90d3.js.map
