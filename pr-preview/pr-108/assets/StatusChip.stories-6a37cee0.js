import{j as e,a as f,F as y}from"./jsx-runtime-390e5fc8.js";import{C as h}from"./Chip-3f4a5391.js";import"./index-570b25c1.js";import"./_commonjsHelpers-042e6b4d.js";import"./createTheme-e6b56ddb.js";import"./clsx-8416b751.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-16f43d9e.js";import"./createSvgIcon-e4b87ef5.js";import"./SvgIcon-ab7aa383.js";import"./useThemeProps-db7202c2.js";import"./styled-188025da.js";import"./generateUtilityClasses-f776b170.js";import"./ButtonBase-dcf5e891.js";import"./emotion-react.browser.esm-69a15469.js";import"./TransitionGroupContext-c71596b3.js";import"./useForkRef-153a0a89.js";import"./useIsFocusVisible-5e7b1ff1.js";import"./useEnhancedEffect-460150e6.js";const a=({color:t="default",...u})=>e(h,{color:t,...u,size:"small"});try{a.displayName="StatusChip",a.__docgenInfo={description:"",displayName:"StatusChip",props:{color:{defaultValue:{value:"default"},description:"The color of the component. Nondefault colors are only to be used with size `small`.",name:"color",required:!1,type:{name:'"primary" | "secondary" | "error" | "info" | "success" | "warning" | "default"'}},size:{defaultValue:null,description:"The size of the component. Size `small` is for statuses and inline counters.",name:"size",required:!1,type:{name:'"small" | "medium"'}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<ChipClasses> & Partial<ClassNameMap<never>>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},label:{defaultValue:null,description:"The content of the component.",name:"label",required:!1,type:{name:"ReactNode"}},tabIndex:{defaultValue:null,description:"@ignore",name:"tabIndex",required:!1,type:{name:"number"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any>"}},avatar:{defaultValue:null,description:"The Avatar element to display.",name:"avatar",required:!1,type:{name:"ReactElement<any, string | JSXElementConstructor<any>>"}}}}}catch{}const D={title:"Components/Chip/StatusChip",component:a,tags:["autodocs"],args:{label:"Chip",size:"medium",color:"default"}},s={render:t=>e(a,{...t}),args:{label:"Chip",color:"primary"}},r={render:()=>f(y,{children:["Item 1 ",e(a,{color:"success",label:"Approved",size:"small"}),e("br",{}),"Item 2 ",e(a,{color:"info",label:"Info",size:"small"}),e("br",{}),"Item 3 ",e(a,{color:"warning",label:"Pending",size:"small"}),e("br",{}),"Item 4 ",e(a,{color:"error",label:"Declined",size:"small"}),e("br",{}),"Item 5 ",e(a,{color:"secondary",label:"Neutral",size:"small"}),e("br",{})]})};var l,o,n;s.parameters={...s.parameters,docs:{...(l=s.parameters)==null?void 0:l.docs,source:{originalSource:`{
  render: (args: StatusChipProps) => <StatusChip {...args} />,
  args: {
    label: 'Chip',
    color: 'primary'
  }
}`,...(n=(o=s.parameters)==null?void 0:o.docs)==null?void 0:n.source}}};var i,m,p,d,c;r.parameters={...r.parameters,docs:{...(i=r.parameters)==null?void 0:i.docs,source:{originalSource:`{
  render: () => <>
      Item 1 <StatusChip color="success" label="Approved" size="small" />
      <br />
      Item 2 <StatusChip color="info" label="Info" size="small" />
      <br />
      Item 3 <StatusChip color="warning" label="Pending" size="small" />
      <br />
      Item 4 <StatusChip color="error" label="Declined" size="small" />
      <br />
      Item 5 <StatusChip color="secondary" label="Neutral" size="small" />
      <br />
    </>
}`,...(p=(m=r.parameters)==null?void 0:m.docs)==null?void 0:p.source},description:{story:"Status styling is achieved by using size `small`",...(c=(d=r.parameters)==null?void 0:d.docs)==null?void 0:c.description}}};const R=["_Chip","_Status"];export{s as _Chip,r as _Status,R as __namedExportsOrder,D as default};
//# sourceMappingURL=StatusChip.stories-6a37cee0.js.map
