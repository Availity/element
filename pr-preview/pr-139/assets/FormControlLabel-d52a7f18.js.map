{"version":3,"file":"FormControlLabel-d52a7f18.js","sources":["../../../packages/form-utils/src/lib/FormLabel.tsx","../../../packages/form-utils/src/lib/FormControlLabel.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport { Box, FormLabel as MuiFormLabel, FormLabelProps as MuiFormLabelProps, styled } from '@mui/material';\nimport { FieldHelpIcon } from './FieldHelpIcon';\n\nexport type FormLabelProps = {\n  /** Adds `FieldHelpIcon` next to the label (should not be within label for accessibility) */\n  helpTopicId?: string;\n} & MuiFormLabelProps;\n\n// Original asterisk added as sibling to Children. Any additional asterisks inside Children will be `display: none`.\n// Needed in components where FormLabel is a subcomponent, i.e. TextField.\nconst Children = styled('span', {\n  name: 'MuiFormLabel',\n  slot: 'Children',\n  overridesResolver: (props, styles) => styles.children,\n})({});\n\n// As long as field help is available on label, should not have any transforms/animations\n// InputLabel styles take precedence in theme when used in textfield with identical classes\nconst StyleOverrides = {\n  position: 'relative !important',\n  transform: 'none !important',\n  transition: 'none !important',\n  animation: 'none !important',\n};\n\nexport const FormLabel = forwardRef<HTMLLabelElement, FormLabelProps>((props, ref) => {\n  const { children, helpTopicId, id, sx, ...rest } = props;\n\n  const labelId = id || (rest.htmlFor ? `${rest.htmlFor}-label` : undefined);\n\n  return (\n    <Box display=\"flex\" flexDirection=\"row\" sx={sx}>\n      <MuiFormLabel id={labelId} sx={{ ...StyleOverrides }} {...rest} ref={ref}>\n        <Children className=\"MuiFormLabel-children\">{children}</Children>\n      </MuiFormLabel>\n      {helpTopicId ? <FieldHelpIcon helpTopicId={helpTopicId} labelId={labelId} sx={{ px: 0.5 }} /> : null}\n    </Box>\n  );\n});\n","import { forwardRef } from 'react';\nimport {\n  Box,\n  FormControlLabel as MuiFormControlLabel,\n  FormControlLabelProps as MuiFormControlLabelProps,\n} from '@mui/material';\nimport { FieldHelpIcon } from './FieldHelpIcon';\n\nexport type FormControlLabelProps = {\n  /** Adds `FieldHelpIcon` next to the label (should not be within label for accessibility) */\n  helpTopicId?: string;\n  /** If `true`, adds required to control. (No required asterisk on individual controls in the group) */\n  required?: boolean;\n} & Omit<MuiFormControlLabelProps, 'componentsProps' | 'labelPlacement' | 'required'>;\n\nexport const FormControlLabel = forwardRef(({ helpTopicId, id, ...rest }: FormControlLabelProps, ref) => {\n  const labelId = id || (rest.htmlFor ? `${rest.htmlFor}-label` : undefined);\n\n  return (\n    <Box>\n      <MuiFormControlLabel id={labelId} {...rest} ref={ref} />\n      {helpTopicId ? <FieldHelpIcon helpTopicId=\"12345\" labelId={labelId} /> : null}\n    </Box>\n  );\n});\n"],"names":["Children","styled","props","styles","StyleOverrides","FormLabel","forwardRef","ref","children","helpTopicId","id","sx","rest","labelId","jsxs","Box","jsx","MuiFormLabel","FieldHelpIcon","FormControlLabel","MuiFormControlLabel"],"mappings":"2TAWA,MAAAA,EAAAC,EAAA,OAAA,CAAgC,KAAA,eACxB,KAAA,WACA,kBAAA,CAAAC,EAAAC,IAAAA,EAAA,QAER,CAAA,EAAA,CAAA,CAAA,EAIAC,EAAA,CAAuB,SAAA,sBACX,UAAA,kBACC,WAAA,kBACC,UAAA,iBAEd,EAEOC,EAAAC,EAAA,WAAA,CAAAJ,EAAAK,IAAA,CACL,KAAA,CAAA,SAAAC,EAAA,YAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,CAAA,EAAAV,EAEAW,EAAAH,IAAAE,EAAA,QAAA,GAAAA,EAAA,gBAAA,QAEA,OAAAE,EAAAC,EAAA,CAAA,QAAA,OAAA,cAAA,MAAA,GAAAJ,EAAA,SAAA,CAEIK,EAAAC,EAAA,CAAA,GAAAJ,EAAA,GAAA,CAAA,GAAAT,CAAA,EAAA,GAAAQ,EAAA,IAAAL,EAAA,SAAAS,EAAAhB,EAAA,CAAA,UAAA,wBAAA,SAAAQ,CAAA,CAAA,EAAA,EAEAC,EAAAO,EAAAE,EAAA,CAAA,YAAAT,EAAA,QAAAI,EAAA,GAAA,CAAA,GAAA,EAAA,CAAA,CAAA,EAAA,IACgG,CAAA,CAAA,CAGtG,CAAA,y/CCxBO,MAAAM,EAAAb,EAAA,WAAA,CAAA,CAAA,YAAAG,EAAA,GAAAC,EAAA,GAAAE,CAAA,EAAAL,IAAA,CACL,MAAAM,EAAAH,IAAAE,EAAA,QAAA,GAAAA,EAAA,gBAAA,QAEA,OAAAE,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAAI,EAAA,CAAA,GAAAP,EAAA,GAAAD,EAAA,IAAAL,EAAA,EAAsDE,EAAAO,EAAAE,EAAA,CAAA,YAAA,QAAA,QAAAL,CAAA,CAAA,EAAA,IACmB,CAAA,CAAA,CAG/E,CAAA"}