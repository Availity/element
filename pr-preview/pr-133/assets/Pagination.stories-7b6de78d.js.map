{"version":3,"file":"Pagination.stories-7b6de78d.js","sources":["../../../node_modules/@mui/material/Pagination/paginationClasses.js","../../../node_modules/@mui/material/usePagination/usePagination.js","../../../node_modules/@mui/material/Pagination/Pagination.js","../../../packages/pagination/src/lib/Pagination.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getPaginationUtilityClass(slot) {\n  return generateUtilityClass('MuiPagination', slot);\n}\nconst paginationClasses = generateUtilityClasses('MuiPagination', ['root', 'ul', 'outlined', 'text']);\nexport default paginationClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"boundaryCount\", \"componentName\", \"count\", \"defaultPage\", \"disabled\", \"hideNextButton\", \"hidePrevButton\", \"onChange\", \"page\", \"showFirstButton\", \"showLastButton\", \"siblingCount\"];\nimport { unstable_useControlled as useControlled } from '@mui/utils';\nexport default function usePagination(props = {}) {\n  // keep default values in sync with @default tags in Pagination.propTypes\n  const {\n      boundaryCount = 1,\n      componentName = 'usePagination',\n      count = 1,\n      defaultPage = 1,\n      disabled = false,\n      hideNextButton = false,\n      hidePrevButton = false,\n      onChange: handleChange,\n      page: pageProp,\n      showFirstButton = false,\n      showLastButton = false,\n      siblingCount = 1\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [page, setPageState] = useControlled({\n    controlled: pageProp,\n    default: defaultPage,\n    name: componentName,\n    state: 'page'\n  });\n  const handleClick = (event, value) => {\n    if (!pageProp) {\n      setPageState(value);\n    }\n    if (handleChange) {\n      handleChange(event, value);\n    }\n  };\n\n  // https://dev.to/namirsab/comment/2050\n  const range = (start, end) => {\n    const length = end - start + 1;\n    return Array.from({\n      length\n    }, (_, i) => start + i);\n  };\n  const startPages = range(1, Math.min(boundaryCount, count));\n  const endPages = range(Math.max(count - boundaryCount + 1, boundaryCount + 1), count);\n  const siblingsStart = Math.max(Math.min(\n  // Natural start\n  page - siblingCount,\n  // Lower boundary when page is high\n  count - boundaryCount - siblingCount * 2 - 1),\n  // Greater than startPages\n  boundaryCount + 2);\n  const siblingsEnd = Math.min(Math.max(\n  // Natural end\n  page + siblingCount,\n  // Upper boundary when page is low\n  boundaryCount + siblingCount * 2 + 2),\n  // Less than endPages\n  endPages.length > 0 ? endPages[0] - 2 : count - 1);\n\n  // Basic list of items to render\n  // e.g. itemList = ['first', 'previous', 1, 'ellipsis', 4, 5, 6, 'ellipsis', 10, 'next', 'last']\n  const itemList = [...(showFirstButton ? ['first'] : []), ...(hidePrevButton ? [] : ['previous']), ...startPages,\n  // Start ellipsis\n  // eslint-disable-next-line no-nested-ternary\n  ...(siblingsStart > boundaryCount + 2 ? ['start-ellipsis'] : boundaryCount + 1 < count - boundaryCount ? [boundaryCount + 1] : []),\n  // Sibling pages\n  ...range(siblingsStart, siblingsEnd),\n  // End ellipsis\n  // eslint-disable-next-line no-nested-ternary\n  ...(siblingsEnd < count - boundaryCount - 1 ? ['end-ellipsis'] : count - boundaryCount > boundaryCount ? [count - boundaryCount] : []), ...endPages, ...(hideNextButton ? [] : ['next']), ...(showLastButton ? ['last'] : [])];\n\n  // Map the button type to its page number\n  const buttonPage = type => {\n    switch (type) {\n      case 'first':\n        return 1;\n      case 'previous':\n        return page - 1;\n      case 'next':\n        return page + 1;\n      case 'last':\n        return count;\n      default:\n        return null;\n    }\n  };\n\n  // Convert the basic item list to PaginationItem props objects\n  const items = itemList.map(item => {\n    return typeof item === 'number' ? {\n      onClick: event => {\n        handleClick(event, item);\n      },\n      type: 'page',\n      page: item,\n      selected: item === page,\n      disabled,\n      'aria-current': item === page ? 'true' : undefined\n    } : {\n      onClick: event => {\n        handleClick(event, buttonPage(item));\n      },\n      type: item,\n      page: buttonPage(item),\n      selected: false,\n      disabled: disabled || item.indexOf('ellipsis') === -1 && (item === 'next' || item === 'last' ? page >= count : page <= 1)\n    };\n  });\n  return _extends({\n    items\n  }, other);\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"boundaryCount\", \"className\", \"color\", \"count\", \"defaultPage\", \"disabled\", \"getItemAriaLabel\", \"hideNextButton\", \"hidePrevButton\", \"onChange\", \"page\", \"renderItem\", \"shape\", \"showFirstButton\", \"showLastButton\", \"siblingCount\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { integerPropType } from '@mui/utils';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getPaginationUtilityClass } from './paginationClasses';\nimport usePagination from '../usePagination';\nimport PaginationItem from '../PaginationItem';\nimport styled from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant],\n    ul: ['ul']\n  };\n  return composeClasses(slots, getPaginationUtilityClass, classes);\n};\nconst PaginationRoot = styled('nav', {\n  name: 'MuiPagination',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant]];\n  }\n})({});\nconst PaginationUl = styled('ul', {\n  name: 'MuiPagination',\n  slot: 'Ul',\n  overridesResolver: (props, styles) => styles.ul\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nfunction defaultGetAriaLabel(type, page, selected) {\n  if (type === 'page') {\n    return `${selected ? '' : 'Go to '}page ${page}`;\n  }\n  return `Go to ${type} page`;\n}\nconst Pagination = /*#__PURE__*/React.forwardRef(function Pagination(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiPagination'\n  });\n  const {\n      boundaryCount = 1,\n      className,\n      color = 'standard',\n      count = 1,\n      defaultPage = 1,\n      disabled = false,\n      getItemAriaLabel = defaultGetAriaLabel,\n      hideNextButton = false,\n      hidePrevButton = false,\n      renderItem = item => /*#__PURE__*/_jsx(PaginationItem, _extends({}, item)),\n      shape = 'circular',\n      showFirstButton = false,\n      showLastButton = false,\n      siblingCount = 1,\n      size = 'medium',\n      variant = 'text'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    items\n  } = usePagination(_extends({}, props, {\n    componentName: 'Pagination'\n  }));\n  const ownerState = _extends({}, props, {\n    boundaryCount,\n    color,\n    count,\n    defaultPage,\n    disabled,\n    getItemAriaLabel,\n    hideNextButton,\n    hidePrevButton,\n    renderItem,\n    shape,\n    showFirstButton,\n    showLastButton,\n    siblingCount,\n    size,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(PaginationRoot, _extends({\n    \"aria-label\": \"pagination navigation\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: /*#__PURE__*/_jsx(PaginationUl, {\n      className: classes.ul,\n      ownerState: ownerState,\n      children: items.map((item, index) => /*#__PURE__*/_jsx(\"li\", {\n        children: renderItem(_extends({}, item, {\n          color,\n          'aria-label': getItemAriaLabel(item.type, item.page, item.selected),\n          shape,\n          size,\n          variant\n        }))\n      }, index))\n    })\n  }));\n});\n\n// @default tags synced with default values from usePagination\n\nprocess.env.NODE_ENV !== \"production\" ? Pagination.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Number of always visible pages at the beginning and end.\n   * @default 1\n   */\n  boundaryCount: integerPropType,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The active color.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'standard']), PropTypes.string]),\n  /**\n   * The total number of pages.\n   * @default 1\n   */\n  count: integerPropType,\n  /**\n   * The page selected by default when the component is uncontrolled.\n   * @default 1\n   */\n  defaultPage: integerPropType,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Accepts a function which returns a string value that provides a user-friendly name for the current page.\n   * This is important for screen reader users.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @param {string} type The link or button type to format ('page' | 'first' | 'last' | 'next' | 'previous'). Defaults to 'page'.\n   * @param {number} page The page number to format.\n   * @param {bool} selected If true, the current page is selected.\n   * @returns {string}\n   */\n  getItemAriaLabel: PropTypes.func,\n  /**\n   * If `true`, hide the next-page button.\n   * @default false\n   */\n  hideNextButton: PropTypes.bool,\n  /**\n   * If `true`, hide the previous-page button.\n   * @default false\n   */\n  hidePrevButton: PropTypes.bool,\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {React.ChangeEvent<unknown>} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The current page.\n   */\n  page: integerPropType,\n  /**\n   * Render the item.\n   * @param {PaginationRenderItemParams} params The props to spread on a PaginationItem.\n   * @returns {ReactNode}\n   * @default (item) => <PaginationItem {...item} />\n   */\n  renderItem: PropTypes.func,\n  /**\n   * The shape of the pagination items.\n   * @default 'circular'\n   */\n  shape: PropTypes.oneOf(['circular', 'rounded']),\n  /**\n   * If `true`, show the first-page button.\n   * @default false\n   */\n  showFirstButton: PropTypes.bool,\n  /**\n   * If `true`, show the last-page button.\n   * @default false\n   */\n  showLastButton: PropTypes.bool,\n  /**\n   * Number of always visible pages before and after the current page.\n   * @default 1\n   */\n  siblingCount: integerPropType,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default Pagination;","import { Pagination as MuiPagination, PaginationProps as MuiPaginationProps } from '@mui/material';\nimport { PaginationItem } from './PaginationItem';\n\nexport type PaginationProps = {\n  /** The size of the component\n   * @default 'determined by theme' */\n  size?: 'medium' | 'large';\n} & Omit<MuiPaginationProps, 'color' | 'getItemAriaLabel' | 'renderItem' | 'shape' | 'size'>;\n\nexport const Pagination = ({ ...rest }: PaginationProps): JSX.Element => {\n  return <MuiPagination {...rest} renderItem={(item) => <PaginationItem {...item} />} />;\n};\n"],"names":["getPaginationUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","usePagination","props","boundaryCount","componentName","count","defaultPage","disabled","hideNextButton","hidePrevButton","handleChange","pageProp","showFirstButton","showLastButton","siblingCount","other","_objectWithoutPropertiesLoose","page","setPageState","useControlled","handleClick","event","value","range","start","end","length","_","i","startPages","endPages","siblingsStart","siblingsEnd","itemList","buttonPage","type","items","item","_extends","useUtilityClasses","ownerState","classes","variant","composeClasses","PaginationRoot","styled","styles","PaginationUl","defaultGetAriaLabel","selected","Pagination","React.forwardRef","inProps","ref","useThemeProps","className","color","getItemAriaLabel","renderItem","_jsx","PaginationItem","shape","size","clsx","index","MuiPagination","rest","jsx"],"mappings":"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","x_google_ignoreList":[0,1,2]}