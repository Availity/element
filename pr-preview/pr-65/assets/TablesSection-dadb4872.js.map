{"version":3,"file":"TablesSection-dadb4872.js","sources":["../../../node_modules/@mui/system/esm/styled.js","../../../node_modules/@mui/system/esm/Container/createContainer.js","../../../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../../../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../../../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../../../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js","../../../node_modules/@mui/material/Container/Container.js","../../../apps/element-storybook/src/layouts/sidebar-tables/HeaderSection.tsx","../../../apps/element-storybook/src/layouts/sidebar-tables/SearchSection.tsx","../../../apps/element-storybook/src/layouts/sidebar-tables/SideNavSection.tsx","../../../apps/element-storybook/src/layouts/sidebar-tables/TablesSection.tsx"],"sourcesContent":["import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => ({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block',\n    // Fix IE11 layout when used with main.\n    ...(!ownerState.disableGutters && {\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('sm')]: {\n        paddingLeft: theme.spacing(3),\n        paddingRight: theme.spacing(3)\n      }\n    })\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => ({\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ...(ownerState.maxWidth === 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up('xs')]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n      }\n    }),\n    ...(ownerState.maxWidth &&\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    ownerState.maxWidth !== 'xs' && {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      [theme.breakpoints.up(ownerState.maxWidth)]: {\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n      }\n    })\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n      className,\n      component = 'div',\n      disableGutters = false,\n      fixed = false,\n      maxWidth = 'lg',\n      classes: classesProp,\n      ...other\n    } = props;\n    const ownerState = {\n      ...props,\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    };\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, {\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref,\n        ...other\n      })\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => ({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`,\n  ...(theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[100],\n    color: theme.palette.grey[700]\n  } : {\n    backgroundColor: theme.palette.grey[700],\n    color: theme.palette.grey[100]\n  }),\n  borderRadius: 2,\n  '&:hover, &:focus': {\n    ...(theme.palette.mode === 'light' ? {\n      backgroundColor: theme.palette.grey[200]\n    } : {\n      backgroundColor: theme.palette.grey[600]\n    })\n  },\n  '&:active': {\n    boxShadow: theme.shadows[0],\n    ...(theme.palette.mode === 'light' ? {\n      backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n    } : {\n      backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n    })\n  }\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n\n/**\n * @ignore - internal component.\n */\nfunction BreadcrumbCollapsed(props) {\n  const {\n    slots = {},\n    slotProps = {},\n    ...otherProps\n  } = props;\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, {\n      focusRipple: true,\n      ...otherProps,\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        as: slots.CollapsedIcon,\n        ownerState: ownerState,\n        ...slotProps.collapsedIcon\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The props used for the CollapsedIcon slot.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the BreadcumbCollapsed.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses, useSlotProps } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n    return acc;\n  }, []);\n}\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n  const {\n    children,\n    className,\n    component = 'nav',\n    slots = {},\n    slotProps = {},\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/',\n    ...other\n  } = props;\n  const [expanded, setExpanded] = React.useState(false);\n  const ownerState = {\n    ...props,\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  };\n  const classes = useUtilityClasses(ownerState);\n  const collapsedIconSlotProps = useSlotProps({\n    elementType: slots.CollapsedIcon,\n    externalSlotProps: slotProps.collapsedIcon,\n    ownerState\n  });\n  const listRef = React.useRef(null);\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true);\n\n      // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n      if (focusable) {\n        focusable.focus();\n      }\n    };\n\n    // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n      return allItems;\n    }\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      slots: {\n        CollapsedIcon: slots.CollapsedIcon\n      },\n      slotProps: {\n        collapsedIcon: collapsedIconSlotProps\n      },\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, {\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ...other,\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n  /**\n   * The props used for each slot inside the Breadcumb.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    collapsedIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Breadcumb.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    CollapsedIcon: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;","import PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import { Box, Breadcrumbs, IconButton, Typography, Link } from '@mui/material';\nimport { HomeIcon, NavigateNextIcon } from '@availity/mui-icon';\n\nexport const HeaderSection = (): JSX.Element => {\n  return (\n    <Box marginBottom=\".5rem\">\n      <Breadcrumbs\n        aria-label=\"breadcrumbs\"\n        separator={<NavigateNextIcon sx={{ color: 'grey.300', fontSize: '.75rem' }} />}\n      >\n        <IconButton size=\"small\" sx={{ color: 'grey.300' }}>\n          <HomeIcon />\n        </IconButton>\n        <Link underline=\"hover\" href=\"#\" color=\"grey.300\" sx={{ fontWeight: '300' }}>\n          Previous Page\n        </Link>\n        <Typography>Current Page</Typography>\n      </Breadcrumbs>\n    </Box>\n  );\n};\n","import { Paper } from '@mui/material';\n\nexport const SearchSection = (): JSX.Element => {\n  return (\n    <Paper variant=\"elevation\" elevation={0}>\n      Search\n    </Paper>\n  );\n};\n","import { Paper } from '@mui/material';\n\n// TabContext & TabPanel logic needed in main Story\nexport const SideNavSection = (): JSX.Element => {\n  return (\n    <Paper sx={{ height: '100%' }} variant=\"elevation\" elevation={0}>\n      Side Navigation\n    </Paper>\n  );\n};\n","import { Paper } from '@mui/material';\n\nexport const TablesSection = (): JSX.Element => {\n  return (\n    <Paper variant=\"elevation\" elevation={0}>\n      Tables\n    </Paper>\n  );\n};\n"],"names":["styled","createStyled","systemStyled","defaultTheme","createTheme","defaultCreateStyledComponent","props","styles","ownerState","capitalize","useThemePropsDefault","inProps","useThemePropsSystem","useUtilityClasses","componentName","getContainerUtilityClass","slot","generateUtilityClass","classes","fixed","disableGutters","maxWidth","slots","composeClasses","createContainer","options","createStyledComponent","useThemeProps","ContainerRoot","theme","acc","breakpointValueKey","breakpoint","value","React.forwardRef","ref","className","component","classesProp","other","_jsx","clsx","MoreHorizIcon","createSvgIcon","BreadcrumbCollapsedButton","ButtonBase","emphasize","BreadcrumbCollapsedIcon","BreadcrumbCollapsed","slotProps","otherProps","getBreadcrumbsUtilityClass","breadcrumbsClasses","generateUtilityClasses","breadcrumbsClasses$1","BreadcrumbsRoot","Typography","BreadcrumbsOl","BreadcrumbsSeparator","insertSeparators","items","separator","current","index","Breadcrumbs","children","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","expanded","setExpanded","React.useState","collapsedIconSlotProps","useSlotProps","listRef","React.useRef","renderItemsBeforeAndAfter","allItems","handleClickExpand","focusable","React.Children","child","React.isValidElement","Breadcrumbs$1","Container","Container$1","HeaderSection","jsx","Box","jsxs","NavigateNextIcon","IconButton","HomeIcon","Link","SearchSection","Paper","SideNavSection","TablesSection"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}