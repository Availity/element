{"version":3,"file":"CardHeader-0be4ff06.js","sources":["../../../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../../../node_modules/@mui/material/CardHeader/CardHeader.js","../../../packages/card/src/lib/CardHeader.tsx"],"sourcesContent":["import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => ({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader,\n    ...styles.root\n  })\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component,\n    disableTypography\n  };\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, {\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\",\n      ...titleTypographyProps,\n      children: title\n    });\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, {\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\",\n      ...subheaderTypographyProps,\n      children: subheader\n    });\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, {\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState,\n    ...other,\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import { CardHeader as MuiCardHeader, CardHeaderProps as MuiCardHeaderProps } from '@mui/material';\n\nexport interface CardHeaderProps extends Omit<MuiCardHeaderProps, 'avatar'> {\n  children?: React.ReactNode;\n}\n\nexport const CardHeader = ({ ...rest }: CardHeaderProps): JSX.Element => {\n  return (\n    <MuiCardHeader\n      {...rest}\n      titleTypographyProps={{ variant: 'h6' }}\n      subheaderTypographyProps={{ variant: 'subtitle2' }}\n    />\n  );\n};\n"],"names":["getCardHeaderUtilityClass","slot","generateUtilityClass","cardHeaderClasses","generateUtilityClasses","cardHeaderClasses$1","useUtilityClasses","ownerState","classes","composeClasses","CardHeaderRoot","styled","props","styles","CardHeaderAvatar","CardHeaderAction","CardHeaderContent","CardHeader","React.forwardRef","inProps","ref","useThemeProps","action","avatar","className","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","title","Typography","_jsx","subheader","_jsxs","clsx","MuiCardHeader","rest","jsx"],"mappings":"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","x_google_ignoreList":[0,1]}