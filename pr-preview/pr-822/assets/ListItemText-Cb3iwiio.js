import{j as s}from"./jsx-runtime-BTJTZTIL.js";import{L as n}from"./List-eXGzl-Dz.js";import{L as i}from"./ListItemText-ChYH7_G8.js";const t=({children:e,...a})=>s.jsx(n,{...a,children:e});try{t.displayName="List",t.__docgenInfo={description:"Wrapper for list items. Renders as a `<ul>` by default.",displayName:"List",props:{children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<ListClasses> & Partial<ClassNameMap<never>>"}},dense:{defaultValue:{value:"false"},description:"If `true`, compact vertical padding designed for keyboard and mouse input is used for\nthe list and list items.\nThe prop is available to descendant components as the `dense` context.",name:"dense",required:!1,type:{name:"boolean"}},disablePadding:{defaultValue:{value:"false"},description:"If `true`, vertical padding is removed from the list.",name:"disablePadding",required:!1,type:{name:"boolean"}},subheader:{defaultValue:null,description:"The content of the subheader, normally `ListSubheader`.",name:"subheader",required:!1,type:{name:"ReactNode"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLUListElement>"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}}}}}catch{}const r=({children:e,...a})=>s.jsx(i,{...a,children:e});try{r.displayName="ListItemText",r.__docgenInfo={description:"Container inside a list item, used to display text content.",displayName:"ListItemText",props:{children:{defaultValue:null,description:"Alias for the `primary` prop.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<ListItemTextClasses>"}},disableTypography:{defaultValue:{value:"false"},description:"If `true`, the children won't be wrapped by a Typography component.\nThis can be useful to render an alternative Typography variant by wrapping\nthe `children` (or `primary`) text, and optional `secondary` text\nwith the Typography component.",name:"disableTypography",required:!1,type:{name:"boolean"}},inset:{defaultValue:{value:"false"},description:"If `true`, the children are indented.\nThis should be used if there is no left avatar or left icon.",name:"inset",required:!1,type:{name:"boolean"}},primary:{defaultValue:null,description:"The main content element.",name:"primary",required:!1,type:{name:"ReactNode"}},primaryTypographyProps:{defaultValue:null,description:"These props will be forwarded to the primary typography component\n(as long as disableTypography is not `true`).\n@deprecated Use `slotProps.primary` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"primaryTypographyProps",required:!1,type:{name:'TypographyProps<"span", { component?: "span"; }>'}},secondary:{defaultValue:null,description:"The secondary content element.",name:"secondary",required:!1,type:{name:"ReactNode"}},secondaryTypographyProps:{defaultValue:null,description:"These props will be forwarded to the secondary typography component\n(as long as disableTypography is not `true`).\n@deprecated Use `slotProps.secondary` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"secondaryTypographyProps",required:!1,type:{name:'TypographyProps<"p", { component?: "p"; }>'}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"Partial<ListItemTextSlots>"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:"{ primary?: SlotProps<ElementType<TypographyProps, keyof IntrinsicElements>, {}, ListItemTextOwnerState>; secondary?: SlotProps<...>; }"}}}}}catch{}export{t as L,r as a};
