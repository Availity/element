import{j as n}from"./jsx-runtime-CcL-W3nW.js";import{D as t}from"./DialogTitle-C94nzqf6.js";import{S as c}from"./MuiSystemProperties-CtLr4Jcz.js";import"./index-DcWiA9TO.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-CGJ-FG5i.js";import"./index-DSGElAqY.js";import"./Tooltip-BNHD4B5V.js";import"./generateUtilityClass-DELP8s2G.js";import"./identifier-CenlGZaM.js";import"./index-nos-0K8U.js";import"./useTheme-Cf-RAc4Y.js";import"./DefaultPropsProvider-LCKMq1Iv.js";import"./useTheme-DwYC2ms6.js";import"./styled-wZqJTO_n.js";import"./memoTheme-CIpOTVoB.js";import"./useSlot-CaH4cQiJ.js";import"./resolveComponentProps-D4XT56l6.js";import"./useForkRef-BVrIj09m.js";import"./generateUtilityClasses-duJ5YrlI.js";import"./useTimeout-B8wmcRZV.js";import"./useEnhancedEffect-D2f2tbda.js";import"./useControlled-WdbyInBW.js";import"./useId-DszduLV4.js";import"./getReactElementRef-AnOffBoZ.js";import"./Portal-D32Mdiva.js";import"./utils-D5ZkK9XY.js";import"./objectWithoutPropertiesLoose-CAYKN5F1.js";import"./TransitionGroupContext-D-IBNIfW.js";import"./index-BEx9gAkE.js";import"./ownerDocument-DW-IO8s5.js";import"./useSlotProps-DE50rPTb.js";import"./isFocusVisible-B8k4qzLc.js";import"./IconButton-DGohL5ME.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./ButtonBase-Ctwr4_Dd.js";import"./emotion-react.browser.esm-BKUJyPAt.js";import"./CircularProgress-D2topXWR.js";import"./Button-C-tuTFv-.js";import"./LoadingButton-BK9aMQRn.js";import"./index-BDqO7SwG.js";import"./faUser-CAcveCor.js";import"./SvgIcon-DfAk99tL.js";import"./Alert-CDZ60Lm0.js";import"./createSvgIcon-BzSwLqYD.js";import"./Close-B57SlfWx.js";import"./Paper-DoDJPSvm.js";import"./AlertTitle-9tHYplCn.js";import"./Typography-Dw3TlP36.js";import"./index-BKNdG2lN.js";import"./extendSxProp-w61GJfY-.js";import"./DialogTitle-CGUbK_oI.js";import"./dialogTitleClasses-B6SGNV70.js";import"./DialogContext-DL4ikWki.js";const go={title:"Components/Dialog/DialogTitle",component:t,tags:["autodocs"],parameters:{docs:{controls:{exclude:c},description:{component:"> As a CSS utility, the `DialogTitle` component also supports all [system properties](https://mui.com/system/properties/). They are omitted for brevity, but can be used as props directly on the component."}}}},o={render:l=>n.jsx(t,{...l}),args:{children:"Modal Title"}},r={render:()=>n.jsx(t,{icon:"info",children:"Info"})};var i,p,m;o.parameters={...o.parameters,docs:{...(i=o.parameters)==null?void 0:i.docs,source:{originalSource:`{
  render: (args: DialogTitleProps) => <DialogTitle {...args} />,
  args: {
    children: 'Modal Title'
  }
}`,...(m=(p=o.parameters)==null?void 0:p.docs)==null?void 0:m.source}}};var e,s,a;r.parameters={...r.parameters,docs:{...(e=r.parameters)==null?void 0:e.docs,source:{originalSource:`{
  render: () => <DialogTitle icon="info">Info</DialogTitle>
}`,...(a=(s=r.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const uo=["_DialogTitle","_WithIcon"];export{o as _DialogTitle,r as _WithIcon,uo as __namedExportsOrder,go as default};
