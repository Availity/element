import{j as t}from"./jsx-runtime-CcL-W3nW.js";import{B as n}from"./index-BObrA9Y-.js";import{B as a}from"./index-CDwEgPAM.js";import{D as p}from"./DialogActions-CsFLFFd0.js";import"./index-DcWiA9TO.js";import"./_commonjsHelpers-BosuxZz1.js";import"./Box-BAeL439g.js";import"./createTheme-CKCRSfxM.js";import"./generateUtilityClasses-DyVAdLaw.js";import"./generateUtilityClass-Bqc1qv72.js";import"./useTheme-BUEqHFQV.js";import"./extendSxProp-BKaoT_Qt.js";import"./Grid2-CanCOREk.js";import"./useTheme-ChS1Y5Lw.js";import"./DefaultPropsProvider-CIAoFptl.js";import"./styled-C36SNKZX.js";import"./styled-Dbr85gFc.js";import"./isMuiElement-DAzOCCHH.js";import"./useThemeProps-YZ7_EcgO.js";import"./Stack-C5Zrd0Q6.js";import"./Container-nY1JXDIQ.js";import"./Tooltip-eF_7lzc5.js";import"./index-nos-0K8U.js";import"./memoTheme-DvanvhnP.js";import"./useSlot-DO4SmqlR.js";import"./resolveComponentProps-BiTA-uKg.js";import"./useForkRef-BVrIj09m.js";import"./useTimeout-B8wmcRZV.js";import"./useEnhancedEffect-D2f2tbda.js";import"./useControlled-WdbyInBW.js";import"./useId-DszduLV4.js";import"./getReactElementRef-AnOffBoZ.js";import"./Portal-CKWfQBCE.js";import"./utils-D5ZkK9XY.js";import"./objectWithoutPropertiesLoose-CAYKN5F1.js";import"./TransitionGroupContext-D-IBNIfW.js";import"./index-BEx9gAkE.js";import"./ownerDocument-DW-IO8s5.js";import"./useSlotProps-Cuv6gcjd.js";import"./isFocusVisible-B8k4qzLc.js";import"./IconButton-v3cBwN0V.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./ButtonBase-DQZrtVrL.js";import"./emotion-react.browser.esm-rTq5AsO6.js";import"./CircularProgress-BHFEuwTi.js";import"./Button-B22iKlEO.js";import"./LoadingButton-B6FUrH4t.js";import"./DialogActions-A6qSkd-q.js";const io={title:"Components/Dialog/DialogActions",component:p,tags:["autodocs"]},o={render:s=>t.jsx(n,{sx:{maxWidth:"250px"},children:t.jsx(p,{...s,children:t.jsx(a,{children:"Action Button"})})}),args:{}};var r,i,m;o.parameters={...o.parameters,docs:{...(r=o.parameters)==null?void 0:r.docs,source:{originalSource:`{
  render: (args: DialogActionsProps) => <Box sx={{
    maxWidth: '250px'
  }}>
      <DialogActions {...args}>
        <Button>Action Button</Button>
      </DialogActions>
    </Box>,
  args: {}
}`,...(m=(i=o.parameters)==null?void 0:i.docs)==null?void 0:m.source}}};const mo=["_DialogActions"];export{o as _DialogActions,mo as __namedExportsOrder,io as default};
