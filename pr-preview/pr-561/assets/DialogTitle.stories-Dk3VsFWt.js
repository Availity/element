import{j as n}from"./jsx-runtime-CcL-W3nW.js";import{D as t}from"./DialogTitle-BvCW4Dt_.js";import{S as c}from"./MuiSystemProperties-CtLr4Jcz.js";import"./index-DcWiA9TO.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-DeWKx-lt.js";import"./index-CDwEgPAM.js";import"./Tooltip-eF_7lzc5.js";import"./generateUtilityClass-Bqc1qv72.js";import"./createTheme-CKCRSfxM.js";import"./index-nos-0K8U.js";import"./useTheme-ChS1Y5Lw.js";import"./DefaultPropsProvider-CIAoFptl.js";import"./useTheme-BUEqHFQV.js";import"./styled-Dbr85gFc.js";import"./memoTheme-DvanvhnP.js";import"./useSlot-DO4SmqlR.js";import"./resolveComponentProps-BiTA-uKg.js";import"./useForkRef-BVrIj09m.js";import"./generateUtilityClasses-DyVAdLaw.js";import"./useTimeout-B8wmcRZV.js";import"./useEnhancedEffect-D2f2tbda.js";import"./useControlled-WdbyInBW.js";import"./useId-DszduLV4.js";import"./getReactElementRef-AnOffBoZ.js";import"./Portal-CKWfQBCE.js";import"./utils-D5ZkK9XY.js";import"./objectWithoutPropertiesLoose-CAYKN5F1.js";import"./TransitionGroupContext-D-IBNIfW.js";import"./index-BEx9gAkE.js";import"./ownerDocument-DW-IO8s5.js";import"./useSlotProps-Cuv6gcjd.js";import"./isFocusVisible-B8k4qzLc.js";import"./IconButton-v3cBwN0V.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./ButtonBase-DQZrtVrL.js";import"./emotion-react.browser.esm-rTq5AsO6.js";import"./CircularProgress-BHFEuwTi.js";import"./Button-B22iKlEO.js";import"./LoadingButton-B6FUrH4t.js";import"./index-CaTz9XJG.js";import"./faUser-CAcveCor.js";import"./SvgIcon-BS-p1eoC.js";import"./Alert-BrdYJey8.js";import"./createSvgIcon-IUeEQzFc.js";import"./Close-L9RbW_Po.js";import"./Paper-CvfFJp8a.js";import"./AlertTitle-7k38CxVh.js";import"./Typography-Cng4iL4p.js";import"./index-D-S2KyN4.js";import"./extendSxProp-BKaoT_Qt.js";import"./DialogTitle-Df_Dg25J.js";import"./dialogTitleClasses-BbNJ425n.js";import"./DialogContext-DL4ikWki.js";const go={title:"Components/Dialog/DialogTitle",component:t,tags:["autodocs"],parameters:{docs:{controls:{exclude:c},description:{component:"> As a CSS utility, the `DialogTitle` component also supports all [system properties](https://mui.com/system/properties/). They are omitted for brevity, but can be used as props directly on the component."}}}},o={render:l=>n.jsx(t,{...l}),args:{children:"Modal Title"}},r={render:()=>n.jsx(t,{icon:"info",children:"Info"})};var i,p,m;o.parameters={...o.parameters,docs:{...(i=o.parameters)==null?void 0:i.docs,source:{originalSource:`{
  render: (args: DialogTitleProps) => <DialogTitle {...args} />,
  args: {
    children: 'Modal Title'
  }
}`,...(m=(p=o.parameters)==null?void 0:p.docs)==null?void 0:m.source}}};var e,s,a;r.parameters={...r.parameters,docs:{...(e=r.parameters)==null?void 0:e.docs,source:{originalSource:`{
  render: () => <DialogTitle icon="info">Info</DialogTitle>
}`,...(a=(s=r.parameters)==null?void 0:s.docs)==null?void 0:a.source}}};const uo=["_DialogTitle","_WithIcon"];export{o as _DialogTitle,r as _WithIcon,uo as __namedExportsOrder,go as default};
