import{j as t}from"./jsx-runtime-CcL-W3nW.js";import{B as n}from"./index-Cyp_3NIz.js";import{B as a}from"./index-Cc5uDiTV.js";import{D as p}from"./DialogActions-CyS8fLRS.js";import"./index-DcWiA9TO.js";import"./_commonjsHelpers-BosuxZz1.js";import"./Box-DWnb8VZB.js";import"./identifier-Dtqimryx.js";import"./generateUtilityClasses-BGOCnVj7.js";import"./generateUtilityClass-CVWqFxsA.js";import"./useTheme-C2CrmYKc.js";import"./extendSxProp-B5AgUjQT.js";import"./Grid2-y9MPRr2u.js";import"./useTheme-DUkCvbx_.js";import"./DefaultPropsProvider-_cNB_dWy.js";import"./styled-vBjI3IQc.js";import"./styled-CF1hcdwO.js";import"./isMuiElement-DAzOCCHH.js";import"./useThemeProps-BIK-1DKm.js";import"./Stack-BcsM4Vc0.js";import"./Container-Cqq8qXXg.js";import"./Tooltip-CiiaKkqp.js";import"./index-nos-0K8U.js";import"./memoTheme-D-rVhYRp.js";import"./useSlot-DnkSxE3X.js";import"./resolveComponentProps-Dg20wxiM.js";import"./useForkRef-BVrIj09m.js";import"./useTimeout-B8wmcRZV.js";import"./useEnhancedEffect-D2f2tbda.js";import"./useControlled-WdbyInBW.js";import"./useId-DszduLV4.js";import"./getReactElementRef-AnOffBoZ.js";import"./Portal-CBAx_nZm.js";import"./utils-D5ZkK9XY.js";import"./objectWithoutPropertiesLoose-CAYKN5F1.js";import"./TransitionGroupContext-D-IBNIfW.js";import"./index-BEx9gAkE.js";import"./ownerDocument-DW-IO8s5.js";import"./useSlotProps-BAIpVL6Y.js";import"./isFocusVisible-B8k4qzLc.js";import"./IconButton-DSb4EJl9.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./ButtonBase-DbVRbsLs.js";import"./emotion-react.browser.esm-CU7ej9d2.js";import"./CircularProgress-D8w9ZPs6.js";import"./Button-BfU-Fa8o.js";import"./LoadingButton-ChfkXAvD.js";import"./DialogActions-FhQa7Naj.js";const io={title:"Components/Dialog/DialogActions",component:p,tags:["autodocs"]},o={render:s=>t.jsx(n,{sx:{maxWidth:"250px"},children:t.jsx(p,{...s,children:t.jsx(a,{children:"Action Button"})})}),args:{}};var r,i,m;o.parameters={...o.parameters,docs:{...(r=o.parameters)==null?void 0:r.docs,source:{originalSource:`{
  render: (args: DialogActionsProps) => <Box sx={{
    maxWidth: '250px'
  }}>
      <DialogActions {...args}>
        <Button>Action Button</Button>
      </DialogActions>
    </Box>,
  args: {}
}`,...(m=(i=o.parameters)==null?void 0:i.docs)==null?void 0:m.source}}};const mo=["_DialogActions"];export{o as _DialogActions,mo as __namedExportsOrder,io as default};
