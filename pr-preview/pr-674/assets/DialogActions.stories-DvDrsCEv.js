import{j as t}from"./jsx-runtime-CcL-W3nW.js";import{B as n}from"./index-Dnj5y9bu.js";import{B as a}from"./index-DSGElAqY.js";import{D as p}from"./DialogActions-i_5jQ086.js";import"./index-DcWiA9TO.js";import"./_commonjsHelpers-BosuxZz1.js";import"./Box-DR5TX31P.js";import"./identifier-CenlGZaM.js";import"./generateUtilityClasses-duJ5YrlI.js";import"./generateUtilityClass-DELP8s2G.js";import"./useTheme-DwYC2ms6.js";import"./extendSxProp-w61GJfY-.js";import"./Grid2-CHb9J3Cd.js";import"./useTheme-Cf-RAc4Y.js";import"./DefaultPropsProvider-LCKMq1Iv.js";import"./styled-CIC6PLSI.js";import"./styled-wZqJTO_n.js";import"./isMuiElement-DAzOCCHH.js";import"./useThemeProps-BAwiOWAz.js";import"./Stack-BPYMGdgv.js";import"./Container-7wpQgvnn.js";import"./Tooltip-BNHD4B5V.js";import"./index-nos-0K8U.js";import"./memoTheme-CIpOTVoB.js";import"./useSlot-CaH4cQiJ.js";import"./resolveComponentProps-D4XT56l6.js";import"./useForkRef-BVrIj09m.js";import"./useTimeout-B8wmcRZV.js";import"./useEnhancedEffect-D2f2tbda.js";import"./useControlled-WdbyInBW.js";import"./useId-DszduLV4.js";import"./getReactElementRef-AnOffBoZ.js";import"./Portal-D32Mdiva.js";import"./utils-D5ZkK9XY.js";import"./objectWithoutPropertiesLoose-CAYKN5F1.js";import"./TransitionGroupContext-D-IBNIfW.js";import"./index-BEx9gAkE.js";import"./ownerDocument-DW-IO8s5.js";import"./useSlotProps-DE50rPTb.js";import"./isFocusVisible-B8k4qzLc.js";import"./IconButton-DGohL5ME.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./ButtonBase-Ctwr4_Dd.js";import"./emotion-react.browser.esm-BKUJyPAt.js";import"./CircularProgress-D2topXWR.js";import"./Button-C-tuTFv-.js";import"./LoadingButton-BK9aMQRn.js";import"./DialogActions-BPFkXPrF.js";const io={title:"Components/Dialog/DialogActions",component:p,tags:["autodocs"]},o={render:s=>t.jsx(n,{sx:{maxWidth:"250px"},children:t.jsx(p,{...s,children:t.jsx(a,{children:"Action Button"})})}),args:{}};var r,i,m;o.parameters={...o.parameters,docs:{...(r=o.parameters)==null?void 0:r.docs,source:{originalSource:`{
  render: (args: DialogActionsProps) => <Box sx={{
    maxWidth: '250px'
  }}>
      <DialogActions {...args}>
        <Button>Action Button</Button>
      </DialogActions>
    </Box>,
  args: {}
}`,...(m=(i=o.parameters)==null?void 0:i.docs)==null?void 0:m.source}}};const mo=["_DialogActions"];export{o as _DialogActions,mo as __namedExportsOrder,io as default};
