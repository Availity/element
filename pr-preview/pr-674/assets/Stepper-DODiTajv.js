import{j as a}from"./jsx-runtime-CcL-W3nW.js";import{r as l}from"./index-DcWiA9TO.js";import{g as q,c as T}from"./generateUtilityClass-DELP8s2G.js";import{a as P,b as N,S as B,c as Q}from"./StepLabel-CFGoPVoX.js";import{g as I}from"./generateUtilityClasses-duJ5YrlI.js";import{u as L}from"./DefaultPropsProvider-LCKMq1Iv.js";import{s as x,c as R}from"./styled-wZqJTO_n.js";import{i as Z}from"./isMuiElement-DAzOCCHH.js";import{B as ee}from"./ButtonBase-Ctwr4_Dd.js";import{m as G}from"./memoTheme-CIpOTVoB.js";import{u as te}from"./useSlot-CaH4cQiJ.js";import{C as F}from"./Collapse-bwjAuf7_.js";import{W as k,S as ne,h as oe,N as ae}from"./index-BDqO7SwG.js";import{T as re}from"./index-Bssefeeu.js";import{I as z}from"./index-DSGElAqY.js";import{G as se}from"./index-Dnj5y9bu.js";import{f as J}from"./identifier-CenlGZaM.js";function ie(e){return q("MuiStep",e)}I("MuiStep",["root","horizontal","vertical","alternativeLabel","completed"]);const le=e=>{const{classes:t,orientation:n,alternativeLabel:r,completed:o}=e;return R({root:["root",n,r&&"alternativeLabel",o&&"completed"]},ie,t)},pe=x("div",{name:"MuiStep",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.orientation],n.alternativeLabel&&t.alternativeLabel,n.completed&&t.completed]}})({variants:[{props:{orientation:"horizontal"},style:{paddingLeft:8,paddingRight:8}},{props:{alternativeLabel:!0},style:{flex:1,position:"relative"}}]}),de=l.forwardRef(function(t,n){const r=L({props:t,name:"MuiStep"}),{active:o,children:p,className:d,component:c="div",completed:f,disabled:h,expanded:u=!1,index:i,last:y,...s}=r,{activeStep:m,connector:S,alternativeLabel:v,orientation:C,nonLinear:g}=l.useContext(P);let[b=!1,w=!1,V=!1]=[o,f,h];m===i?b=o!==void 0?o:!0:!g&&m>i?w=f!==void 0?f:!0:!g&&m<i&&(V=h!==void 0?h:!0);const Y=l.useMemo(()=>({index:i,last:y,expanded:u,icon:i+1,active:b,completed:w,disabled:V}),[i,y,u,b,w,V]),E={...r,active:b,orientation:C,alternativeLabel:v,completed:w,disabled:V,expanded:u,component:c},K=le(E),j=a.jsxs(pe,{as:c,className:T(K.root,d),ref:n,ownerState:E,...s,children:[S&&v&&i!==0?S:null,p]});return a.jsx(N.Provider,{value:Y,children:S&&!v&&i!==0?a.jsxs(l.Fragment,{children:[S,j]}):j})});function ce(e){return q("MuiStepButton",e)}const U=I("MuiStepButton",["root","horizontal","vertical","touchRipple"]),ue=e=>{const{classes:t,orientation:n}=e;return R({root:["root",n],touchRipple:["touchRipple"]},ce,t)},me=x(ee,{name:"MuiStepButton",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[{[`& .${U.touchRipple}`]:t.touchRipple},t.root,t[n.orientation]]}})({width:"100%",padding:"24px 16px",margin:"-24px -16px",boxSizing:"content-box",[`& .${U.touchRipple}`]:{color:"rgba(0, 0, 0, 0.3)"},variants:[{props:{orientation:"vertical"},style:{justifyContent:"flex-start",padding:"8px",margin:"-8px"}}]}),fe=l.forwardRef(function(t,n){const r=L({props:t,name:"MuiStepButton"}),{children:o,className:p,icon:d,optional:c,...f}=r,{disabled:h,active:u}=l.useContext(N),{orientation:i}=l.useContext(P),y={...r,orientation:i},s=ue(y),m={icon:d,optional:c},S=Z(o,["StepLabel"])?l.cloneElement(o,m):a.jsx(B,{...m,children:o});return a.jsx(me,{focusRipple:!0,disabled:h,TouchRippleProps:{className:s.touchRipple},className:T(s.root,p),ref:n,ownerState:y,"aria-current":u?"step":void 0,...f,children:S})});function he(e){return q("MuiStepConnector",e)}I("MuiStepConnector",["root","horizontal","vertical","alternativeLabel","active","completed","disabled","line","lineHorizontal","lineVertical"]);const ye=e=>{const{classes:t,orientation:n,alternativeLabel:r,active:o,completed:p,disabled:d}=e,c={root:["root",n,r&&"alternativeLabel",o&&"active",p&&"completed",d&&"disabled"],line:["line",`line${J(n)}`]};return R(c,he,t)},Se=x("div",{name:"MuiStepConnector",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.orientation],n.alternativeLabel&&t.alternativeLabel,n.completed&&t.completed]}})({flex:"1 1 auto",variants:[{props:{orientation:"vertical"},style:{marginLeft:12}},{props:{alternativeLabel:!0},style:{position:"absolute",top:12,left:"calc(-50% + 20px)",right:"calc(50% + 20px)"}}]}),ve=x("span",{name:"MuiStepConnector",slot:"Line",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.line,t[`line${J(n.orientation)}`]]}})(G(({theme:e})=>{const t=e.palette.mode==="light"?e.palette.grey[400]:e.palette.grey[600];return{display:"block",borderColor:e.vars?e.vars.palette.StepConnector.border:t,variants:[{props:{orientation:"horizontal"},style:{borderTopStyle:"solid",borderTopWidth:1}},{props:{orientation:"vertical"},style:{borderLeftStyle:"solid",borderLeftWidth:1,minHeight:24}}]}})),X=l.forwardRef(function(t,n){const r=L({props:t,name:"MuiStepConnector"}),{className:o,...p}=r,{alternativeLabel:d,orientation:c="horizontal"}=l.useContext(P),{active:f,disabled:h,completed:u}=l.useContext(N),i={...r,alternativeLabel:d,orientation:c,active:f,completed:u,disabled:h},y=ye(i);return a.jsx(Se,{className:T(y.root,o),ref:n,ownerState:i,...p,children:a.jsx(ve,{className:y.line,ownerState:i})})});function be(e){return q("MuiStepContent",e)}I("MuiStepContent",["root","last","transition"]);const ge=e=>{const{classes:t,last:n}=e;return R({root:["root",n&&"last"],transition:["transition"]},be,t)},xe=x("div",{name:"MuiStepContent",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,n.last&&t.last]}})(G(({theme:e})=>({marginLeft:12,paddingLeft:20,paddingRight:8,borderLeft:e.vars?`1px solid ${e.vars.palette.StepContent.border}`:`1px solid ${e.palette.mode==="light"?e.palette.grey[400]:e.palette.grey[600]}`,variants:[{props:{last:!0},style:{borderLeft:"none"}}]}))),Ce=x(F,{name:"MuiStepContent",slot:"Transition",overridesResolver:(e,t)=>t.transition})({}),we=l.forwardRef(function(t,n){const r=L({props:t,name:"MuiStepContent"}),{children:o,className:p,TransitionComponent:d=F,transitionDuration:c="auto",TransitionProps:f,slots:h={},slotProps:u={},...i}=r,{orientation:y}=l.useContext(P),{active:s,last:m,expanded:S}=l.useContext(N),v={...r,last:m},C=ge(v);let g=c;c==="auto"&&!d.muiSupportAuto&&(g=void 0);const b={slots:h,slotProps:{transition:f,...u}},[w,V]=te("transition",{elementType:Ce,externalForwardedProps:b,ownerState:v,className:C.transition,additionalProps:{in:s||S,timeout:g,unmountOnExit:!0}});return a.jsx(xe,{className:T(C.root,p),ref:n,ownerState:v,...i,children:a.jsx(w,{as:d,...V,children:o})})});function Ve(e){return q("MuiStepper",e)}I("MuiStepper",["root","horizontal","vertical","nonLinear","alternativeLabel"]);const qe=e=>{const{orientation:t,nonLinear:n,alternativeLabel:r,classes:o}=e;return R({root:["root",t,n&&"nonLinear",r&&"alternativeLabel"]},Ve,o)},Te=x("div",{name:"MuiStepper",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:n}=e;return[t.root,t[n.orientation],n.alternativeLabel&&t.alternativeLabel,n.nonLinear&&t.nonLinear]}})({display:"flex",variants:[{props:{orientation:"horizontal"},style:{flexDirection:"row",alignItems:"center"}},{props:{orientation:"vertical"},style:{flexDirection:"column"}},{props:{alternativeLabel:!0},style:{alignItems:"flex-start"}}]}),Pe=a.jsx(X,{}),O=l.forwardRef(function(t,n){const r=L({props:t,name:"MuiStepper"}),{activeStep:o=0,alternativeLabel:p=!1,children:d,className:c,component:f="div",connector:h=Pe,nonLinear:u=!1,orientation:i="horizontal",...y}=r,s={...r,nonLinear:u,alternativeLabel:p,orientation:i,component:f},m=qe(s),S=l.Children.toArray(d).filter(Boolean),v=S.map((g,b)=>l.cloneElement(g,{index:b,last:b+1===S.length,...g.props})),C=l.useMemo(()=>({activeStep:o,alternativeLabel:p,connector:h,nonLinear:u,orientation:i}),[o,p,h,u,i]);return a.jsx(P.Provider,{value:C,children:a.jsx(Te,{as:f,ownerState:s,className:T(m.root,c),ref:n,...y,children:v})})}),A=({children:e,...t})=>a.jsx(de,{...t,children:e});try{A.displayName="Step",A.__docgenInfo={description:"",displayName:"Step",props:{component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},active:{defaultValue:null,description:"Sets the step as active. Is passed to child components.",name:"active",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"Should be `Step` sub-components such as `StepLabel`, `StepContent`.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<StepClasses> & Partial<ClassNameMap<never>>"}},completed:{defaultValue:null,description:"Mark the step as completed. Is passed to child components.",name:"completed",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"If `true`, the step is disabled, will also disable the button if\n`StepButton` is a child of `Step`. Is passed to child components.",name:"disabled",required:!1,type:{name:"boolean"}},expanded:{defaultValue:{value:"false"},description:"Expand the step.",name:"expanded",required:!1,type:{name:"boolean"}},index:{defaultValue:null,description:`The position of the step.
The prop defaults to the value inherited from the parent Stepper component.`,name:"index",required:!1,type:{name:"number"}},last:{defaultValue:null,description:"If `true`, the Step is displayed as rendered last.\nThe prop defaults to the value inherited from the parent Stepper component.",name:"last",required:!1,type:{name:"boolean"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}}}}}catch{}const $=({children:e,...t})=>a.jsx(fe,{...t,disableRipple:!0,disableTouchRipple:!0,children:e});try{$.displayName="StepButton",$.__docgenInfo={description:"",displayName:"StepButton",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<StepButtonClasses> & Partial<ClassNameMap<never>>"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},children:{defaultValue:null,description:"Can be a `StepLabel` or a node to place inside `StepLabel` as children.\nThe content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLButtonElement>"}},tabIndex:{defaultValue:{value:"0"},description:"",name:"tabIndex",required:!1,type:{name:"number"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},action:{defaultValue:null,description:"A ref for imperative actions.\nIt currently only supports `focusVisible()` action.",name:"action",required:!1,type:{name:"Ref<ButtonBaseActions>"}},icon:{defaultValue:null,description:"The icon displayed by the step label.",name:"icon",required:!1,type:{name:"ReactNode"}},disabled:{defaultValue:{value:"false"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},focusVisibleClassName:{defaultValue:null,description:`This prop can help identify which element has keyboard focus.
The class name will be applied when the element gains the focus through keyboard interaction.
It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).
The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).
A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a \`focus-visible\` class to other components
if needed.`,name:"focusVisibleClassName",required:!1,type:{name:"string"}},LinkComponent:{defaultValue:{value:"'a'"},description:"The component used to render a link when the `href` prop is provided.",name:"LinkComponent",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},onFocusVisible:{defaultValue:null,description:"Callback fired when the component is focused with a keyboard.\nWe trigger a `onFocus` callback too.",name:"onFocusVisible",required:!1,type:{name:"FocusEventHandler<any>"}},optional:{defaultValue:null,description:"The optional node to display.",name:"optional",required:!1,type:{name:"ReactNode"}}}}}catch{}const D=e=>a.jsx(X,{...e});try{D.displayName="StepConnector",D.__docgenInfo={description:"",displayName:"StepConnector",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<StepConnectorClasses>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}}}catch{}const W=({children:e,...t})=>a.jsx(we,{...t,children:e});try{W.displayName="StepContent",W.__docgenInfo={description:"",displayName:"StepContent",props:{children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<StepContentClasses>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},TransitionComponent:{defaultValue:{value:"Collapse"},description:"The component used for the transition.\n[Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n@deprecated Use `slots.transition` instead. This prop will be removed in v7. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/).",name:"TransitionComponent",required:!1,type:{name:"JSXElementConstructor<TransitionProps & { children: ReactElement<unknown, any>; }>"}},transitionDuration:{defaultValue:{value:"'auto'"},description:`Adjust the duration of the content expand transition.
Passed as a prop to the transition component.

Set to 'auto' to automatically calculate transition time based on height.`,name:"transitionDuration",required:!1,type:{name:'number | "auto" | { appear?: number; enter?: number; exit?: number; } | { appear?: number; enter?: number; exit?: number; }'}},TransitionProps:{defaultValue:null,description:"Props applied to the transition element.\nBy default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n@deprecated Use `slotProps.transition` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"TransitionProps",required:!1,type:{name:"TransitionProps"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"Partial<StepContentSlots>"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:"{ transition?: SlotProps<ElementType<CollapseProps, keyof IntrinsicElements>, {}, StepContentOwnerState>; }"}}}}}catch{}const _=({error:e,completed:t,warning:n,...r})=>{let o=null;return e&&(o=k),n&&(o=p=>a.jsx(k,{color:"warning",...p})),t&&(o=ne),a.jsx(Q,{...r,error:e,completed:t,as:o})};try{_.displayName="StepIcon",_.__docgenInfo={description:"",displayName:"StepIcon",props:{warning:{defaultValue:null,description:"If `true`, the step will have a warning icon.",name:"warning",required:!1,type:{name:"boolean"}},active:{defaultValue:{value:"false"},description:"Whether this step is active.",name:"active",required:!1,type:{name:"boolean"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<StepIconClasses>"}},completed:{defaultValue:{value:"false"},description:"Mark the step as completed. Is passed to child components.",name:"completed",required:!1,type:{name:"boolean"}},error:{defaultValue:{value:"false"},description:"If `true`, the step is marked as failed.",name:"error",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"The label displayed in the step icon.",name:"icon",required:!0,type:{name:"ReactNode"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"(props: SvgIconProps) => Element"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}},color:{defaultValue:{value:"'inherit'"},description:`The color of the component.
It supports both default and custom theme colors, which can be added as shown in the
[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).
You can use the \`htmlColor\` prop to apply a color attribute to the SVG element.`,name:"color",required:!1,type:{name:'OverridableStringUnion<"action" | "success" | "info" | "warning" | "error" | "inherit" | "disabled" | "primary" | "secondary", SvgIconPropsColorOverrides>'}},fontSize:{defaultValue:{value:"'medium'"},description:"The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.",name:"fontSize",required:!1,type:{name:'OverridableStringUnion<"small" | "inherit" | "large" | "medium", SvgIconPropsSizeOverrides>'}},shapeRendering:{defaultValue:null,description:`The shape-rendering attribute. The behavior of the different options is described on the
[MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).
If you are having issues with blurry icons you should investigate this prop.`,name:"shapeRendering",required:!1,type:{name:"string"}},htmlColor:{defaultValue:null,description:"Applies a color attribute to the SVG element.",name:"htmlColor",required:!1,type:{name:"string"}},inheritViewBox:{defaultValue:{value:"false"},description:"If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\nprop will be ignored.\nUseful when you want to reference a custom `component` and have `SvgIcon` pass that\n`component`'s viewBox to the root node.",name:"inheritViewBox",required:!1,type:{name:"boolean"}},titleAccess:{defaultValue:null,description:`Provides a human-readable title for the element that contains it.
https://www.w3.org/TR/SVG-access/#Equivalent`,name:"titleAccess",required:!1,type:{name:"string"}},viewBox:{defaultValue:{value:"'0 0 24 24'"},description:`Allows you to redefine what the coordinates without units mean inside an SVG element.
For example, if the SVG element is 500 (width) by 200 (height),
and you pass viewBox="0 0 50 20",
this means that the coordinates inside the SVG will go from the top left corner (0,0)
to bottom right (50,20) and each unit will be worth 10px.`,name:"viewBox",required:!1,type:{name:"string"}}}}}catch{}const M=({children:e,error:t,optional:n,warning:r,...o})=>(typeof n=="string"&&(n=a.jsx(re,{variant:"caption",children:n})),a.jsx(B,{StepIconProps:{error:t,warning:r},StepIconComponent:_,error:t,optional:n,...o,children:e}));M.muiName=B.muiName;try{M.displayName="StepLabel",M.__docgenInfo={description:"",displayName:"StepLabel",props:{warning:{defaultValue:null,description:"If `true`, the step will have a warning icon.",name:"warning",required:!1,type:{name:"boolean"}},children:{defaultValue:null,description:"In most cases will simply be a string containing a title for the label.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<StepLabelClasses>"}},componentsProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.\n@deprecated use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"componentsProps",required:!1,type:{name:"{ label?: HTMLProps<HTMLSpanElement>; }"}},error:{defaultValue:{value:"false"},description:"If `true`, the step is marked as failed.",name:"error",required:!1,type:{name:"boolean"}},icon:{defaultValue:null,description:"Override the default label of the step icon.",name:"icon",required:!1,type:{name:"ReactNode"}},optional:{defaultValue:null,description:"The optional node to display.",name:"optional",required:!1,type:{name:"ReactNode"}},StepIconComponent:{defaultValue:null,description:"The component to render in place of the [`StepIcon`](https://mui.com/material-ui/api/step-icon/).\n@deprecated Use `slots.stepIcon` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"StepIconComponent",required:!1,type:{name:"ElementType<StepIconProps, keyof IntrinsicElements>"}},StepIconProps:{defaultValue:null,description:"Props applied to the [`StepIcon`](https://mui.com/material-ui/api/step-icon/) element.\n@deprecated Use `slotProps.stepIcon` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"StepIconProps",required:!1,type:{name:"Partial<StepIconProps>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"Partial<StepLabelSlots>"}},slotProps:{defaultValue:{value:"{}"},description:"The props used for each slot inside.",name:"slotProps",required:!1,type:{name:"{ label?: SlotProps<ElementType<HTMLProps<HTMLSpanElement>, keyof IntrinsicElements>, {}, StepLabelOwnerState>; stepIcon?: SlotProps<...>; }"}}}}}catch{}const H=({children:e,connector:t,orientation:n,scrollButtons:r,...o})=>{const p=n!=="vertical",d=l.useRef(null),[c,f]=l.useState(!0),[h,u]=l.useState(!0);l.useEffect(()=>{const s=d.current,m=()=>{if(s){f(s.scrollLeft>0);const v=Math.abs(s.scrollWidth-s.clientWidth-s.scrollLeft)<=1;u(!v)}},S=new ResizeObserver(()=>{m()});return s&&(s.addEventListener("scroll",m),S.observe(s),m()),()=>{s&&(s.removeEventListener("scroll",m),S.disconnect())}},[]);const i=r&&n!=="vertical",y=x("div")({width:"50px",flexShrink:0,paddingTop:"15px"});return i?a.jsxs(se,{container:!0,direction:"row",justifyContent:"space-between",wrap:"nowrap",children:[a.jsx(y,{style:{paddingRight:"8px"},children:c&&a.jsx(z,{title:"Previous",variant:"outlined",onClick:()=>{var s;return(s=d.current)==null?void 0:s.scrollTo({left:0,behavior:"smooth"})},children:a.jsx(oe,{fontSize:"xsmall"})})}),a.jsx(O,{"aria-label":"multi-step process",role:"region",...o,connector:t,orientation:n,alternativeLabel:p,ref:d,children:e,tabIndex:0}),a.jsx(y,{style:{paddingLeft:"8px"},children:h&&a.jsx(z,{title:"Next",variant:"outlined",onClick:()=>{var s;(s=d.current)==null||s.scrollTo({left:d.current.scrollWidth-d.current.clientWidth,behavior:"smooth"})},children:a.jsx(ae,{fontSize:"xsmall"})})})]}):a.jsx(O,{"aria-label":"multi-step process",role:"region",...o,connector:t,orientation:n,alternativeLabel:p,ref:d,children:e})};try{H.displayName="Stepper",H.__docgenInfo={description:"",displayName:"Stepper",props:{scrollButtons:{defaultValue:null,description:"",name:"scrollButtons",required:!1,type:{name:"boolean"}},variant:{defaultValue:{value:"'elevation'"},description:"The variant to use.",name:"variant",required:!1,type:{name:'OverridableStringUnion<"elevation" | "outlined", PaperPropsVariantOverrides>'}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<StepperClasses> & Partial<ClassNameMap<never>>"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},children:{defaultValue:null,description:"Two or more `<Step />` components.",name:"children",required:!1,type:{name:"ReactNode"}},square:{defaultValue:{value:"false"},description:"If `true`, rounded corners are disabled.",name:"square",required:!1,type:{name:"boolean"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},orientation:{defaultValue:{value:"'horizontal'"},description:"The component orientation (layout flow direction).",name:"orientation",required:!1,type:{name:"Orientation"}},activeStep:{defaultValue:{value:"0"},description:`Set the active step (zero based index).
Set to -1 to disable all the steps.`,name:"activeStep",required:!1,type:{name:"number"}},connector:{defaultValue:{value:"<StepConnector />"},description:"An element to be placed between each step.",name:"connector",required:!1,type:{name:"ReactElement<unknown, any>"}},nonLinear:{defaultValue:{value:"false"},description:"If set the `Stepper` will not assist in controlling steps for linear flow.",name:"nonLinear",required:!1,type:{name:"boolean"}}}}}catch{}export{A as S,H as a,$ as b,M as c};
