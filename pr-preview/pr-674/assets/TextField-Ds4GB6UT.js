import{j as e}from"./jsx-runtime-CcL-W3nW.js";import{u as w,F as I,C as x}from"./index.esm-D1k4U55D.js";import{T as F}from"./index-D69ufRNP.js";const m=({onSubmit:t,values:s,schema:l,validationResolver:n,additionalUseFormOptions:i={mode:"onBlur"},...u})=>{const r={values:s,...i};l&&n&&(r.resolver=n(l));const o=w(r);return e.jsx(I,{...o,children:e.jsx("form",{onSubmit:o.handleSubmit(t),noValidate:!0,...u})})};try{m.displayName="ControlledForm",m.__docgenInfo={description:"",displayName:"ControlledForm",props:{onSubmit:{defaultValue:null,description:"This function will receive the form data if form validation is successful.",name:"onSubmit",required:!1,type:{name:"SubmitHandler<any> & FormEventHandler<HTMLFormElement>"}},values:{defaultValue:null,description:"Reactive values to update the form values.",name:"values",required:!0,type:{name:"Record<string, any>"}},schema:{defaultValue:null,description:"The schema used by the validationResolver.",name:"schema",required:!1,type:{name:"unknown"}},validationResolver:{defaultValue:null,description:`Integrates with your preferred schema validation library.
More information on react-hook-form's resolvers can be
found here: https://github.com/react-hook-form/resolvers#quickstart`,name:"validationResolver",required:!1,type:{name:"(schema: unknown) => Resolver"}},additionalUseFormOptions:{defaultValue:{value:"{mode: 'onBlur'}"},description:"Additional react-hook-form `useForm` options, like `defaultValues` and validation `mode`. For more information see the [react-hook-form useForm docs](https://react-hook-form.com/docs/useform)",name:"additionalUseFormOptions",required:!1,type:{name:'Omit<Partial<{ mode: "onBlur" | "onChange" | "onSubmit" | "all" | "onTouched"; disabled: boolean; reValidateMode: "onBlur" | "onChange" | "onSubmit"; defaultValues: AsyncDefaultValues<FieldValues> | { ...; }; ... 10 more ...; delayError: number; }>, "values" | "resolver">'}}}}}catch{}const f=({name:t,defaultValue:s,deps:l,disabled:n,helperText:i,max:u,maxLength:r,min:o,minLength:c,onBlur:h,onChange:y,pattern:g,required:d,rules:v={},shouldUnregister:p,validate:b,value:V,...T})=>e.jsx(x,{name:t,defaultValue:s,disabled:n,rules:{required:typeof d=="boolean"?void 0:d,maxLength:r,minLength:c,max:u,min:o,pattern:g,validate:b,onChange:y,onBlur:h,value:V,shouldUnregister:p,deps:l,...v},shouldUnregister:p,render:({field:{ref:q,...P},fieldState:{error:a}})=>e.jsx(F,{...P,...T,inputRef:q,required:!!d,error:!!a,helperText:a!=null&&a.message?e.jsxs(e.Fragment,{children:[a.message,e.jsx("br",{}),i]}):i})});try{f.displayName="ControlledTextField",f.__docgenInfo={description:"",displayName:"ControlledTextField",props:{color:{defaultValue:{value:"'primary'"},description:`The color of the component.
It supports both default and custom theme colors, which can be added as shown in the
[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).`,name:"color",required:!1,type:{name:'OverridableStringUnion<"success" | "info" | "warning" | "error" | "primary" | "secondary", TextFieldPropsColorOverrides>'}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"Partial<TextFieldSlots>"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<TextFieldClasses>"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},children:{defaultValue:null,description:`The content of the component.
@ignore`,name:"children",required:!1,type:{name:"ReactNode"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},label:{defaultValue:null,description:"The label content.",name:"label",required:!1,type:{name:"ReactNode"}},select:{defaultValue:{value:"false"},description:"Render a [`Select`](https://mui.com/material-ui/api/select/) element while passing the Input element to `Select` as `input` parameter.\nIf this option is set you must pass the options of the select as children.",name:"select",required:!1,type:{name:"boolean"}},defaultValue:{defaultValue:null,description:`The default value. Use when the component is not controlled.
**Important**: Can not apply undefined to defaultValue or defaultValues at useForm.
- You need to either set defaultValue at the field-level or useForm's defaultValues. undefined is not a valid value.
- If your form will invoke reset with default values, you will need to provide useForm with defaultValues.
- Calling onChange with undefined is not valid. You should use null or the empty string as your default/cleared value instead.`,name:"defaultValue",required:!1,type:{name:"any"}},autoFocus:{defaultValue:{value:"false"},description:"If `true`, the `input` element is focused during the first mount.",name:"autoFocus",required:!1,type:{name:"boolean"}},id:{defaultValue:null,description:"The id of the `input` element.\nUse this prop to make `label` and `helperText` accessible for screen readers.",name:"id",required:!1,type:{name:"string"}},onFocus:{defaultValue:null,description:"",name:"onFocus",required:!1,type:{name:"FocusEventHandler<HTMLInputElement | HTMLTextAreaElement>"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},error:{defaultValue:{value:"false"},description:"If `true`, the label is displayed in an error state.",name:"error",required:!1,type:{name:"boolean"}},margin:{defaultValue:{value:"'none'"},description:"If `dense` or `normal`, will adjust vertical spacing of this and contained components.",name:"margin",required:!1,type:{name:'"none" | "dense" | "normal"'}},disabled:{defaultValue:{value:"false"},description:"If `true`, the component is disabled.\nIf the input is disabled",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:{value:"'medium'"},description:"The size of the component.",name:"size",required:!1,type:{name:'OverridableStringUnion<"small" | "medium", TextFieldPropsSizeOverrides>'}},type:{defaultValue:null,description:"Type of the `input` element. It should be [a valid HTML5 input type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Form_%3Cinput%3E_types).",name:"type",required:!1,type:{name:"HTMLInputTypeAttribute"}},fullWidth:{defaultValue:{value:"true"},description:"If `true`, the input will take up the full width of its container.",name:"fullWidth",required:!1,type:{name:"boolean"}},autoComplete:{defaultValue:null,description:`This prop helps users to fill forms faster, especially on mobile devices.
The name can be confusing, as it's more like an autofill.
You can learn more about it [following the specification](https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#autofill).`,name:"autoComplete",required:!1,type:{name:"string"}},focused:{defaultValue:null,description:"If `true`, the component is displayed in focused state.",name:"focused",required:!1,type:{name:"boolean"}},helpTopicId:{defaultValue:null,description:"Adds `FieldHelpIcon` next to the label (should not be within label for accessibility)",name:"helpTopicId",required:!1,type:{name:"string"}},hiddenLabel:{defaultValue:{value:"false"},description:"If `true`, the label is hidden.\nThis is used to increase density for a `FilledInput`.\nBe sure to add `aria-label` to the `input` element.",name:"hiddenLabel",required:!1,type:{name:"boolean"}},InputProps:{defaultValue:null,description:"Props applied to the Input element.\nIt will be a [`FilledInput`](https://mui.com/material-ui/api/filled-input/),\n[`OutlinedInput`](https://mui.com/material-ui/api/outlined-input/) or [`Input`](https://mui.com/material-ui/api/input/)\ncomponent depending on the `variant` prop value.\n@deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n@deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n@deprecated Use `slotProps.input` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"InputProps",required:!1,type:{name:"InputProps & (Partial<FilledInputProps> | Partial<OutlinedInputProps> | Partial<InputProps>)"}},FormHelperTextProps:{defaultValue:null,description:"Props applied to the [`FormHelperText`](https://mui.com/material-ui/api/form-helper-text/) element.\n@deprecated Use `slotProps.formHelperText` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"FormHelperTextProps",required:!1,type:{name:'FormHelperTextOwnProps & CommonProps & Omit<Omit<DetailedHTMLProps<HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement>, "ref"> & { ...; }, "variant" | ... 10 more ... | "required"> & { ...; } & Partial<...>'}},helperText:{defaultValue:null,description:"The helper text content.",name:"helperText",required:!1,type:{name:"ReactNode"}},InputLabelProps:{defaultValue:null,description:"Props applied to the [`InputLabel`](https://mui.com/material-ui/api/input-label/) element.\nPointer events like `onClick` are enabled if and only if `shrink` is `true`.\n@deprecated Use `slotProps.inputLabel` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"InputLabelProps",required:!1,type:{name:'{ helpTopicId?: string; } & FormLabelBaseProps & FormLabelOwnProps & CommonProps & Omit<Omit<DetailedHTMLProps<LabelHTMLAttributes<HTMLLabelElement>, HTMLLabelElement>, "ref"> & { ...; }, "color" | ... 268 more ... | "required"> & { ...; } & Partial<...>'}},inputProps:{defaultValue:null,description:"[Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n@deprecated Use `slotProps.htmlInput` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"inputProps",required:!1,type:{name:"InputBaseComponentProps"}},inputRef:{defaultValue:null,description:"Pass a ref to the `input` element.",name:"inputRef",required:!1,type:{name:"Ref<any>"}},multiline:{defaultValue:{value:"false"},description:"If `true`, a `textarea` element is rendered instead of an input.",name:"multiline",required:!1,type:{name:"boolean"}},placeholder:{defaultValue:null,description:"The short hint displayed in the `input` before the user enters a value.",name:"placeholder",required:!1,type:{name:"string"}},rows:{defaultValue:null,description:"Number of rows to display when multiline option is set to true.",name:"rows",required:!1,type:{name:"string | number"}},maxRows:{defaultValue:null,description:"Maximum number of rows to display when multiline option is set to true.",name:"maxRows",required:!1,type:{name:"string | number"}},minRows:{defaultValue:null,description:"Minimum number of rows to display when multiline option is set to true.",name:"minRows",required:!1,type:{name:"string | number"}},SelectProps:{defaultValue:null,description:"Props applied to the [`Select`](https://mui.com/material-ui/api/select/) element.\n@deprecated Use `slotProps.select` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.",name:"SelectProps",required:!1,type:{name:"SelectProps & Partial<SelectProps>"}},onBlur:{defaultValue:null,description:"",name:"onBlur",required:!1,type:{name:"(event: any) => void"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!1,type:{name:"(event: any) => void"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"any"}},name:{defaultValue:null,description:"Unique name of your input",name:"name",required:!0,type:{name:"string"}},rules:{defaultValue:{value:"{}"},description:`react-hook-form internal validation rules in the same format as [register options](https://react-hook-form.com/docs/useform/register#options), which includes:
required, min, max, minLength, maxLength, pattern, validate

Not used if 3rd party schema/resolver used.`,name:"rules",required:!1,type:{name:'Omit<RegisterOptions<FieldValues, string>, "disabled" | "setValueAs" | "valueAsNumber" | "valueAsDate">'}},shouldUnregister:{defaultValue:null,description:"Input will be unregistered after unmount and defaultValues will be removed as well.",name:"shouldUnregister",required:!1,type:{name:"boolean"}},pattern:{defaultValue:null,description:"The regex pattern for the input.\n@deprecated moved to `rules` prop.",name:"pattern",required:!1,type:{name:"ValidationRule<RegExp>"}},max:{defaultValue:null,description:"The maximum value to accept for this input.\n@deprecated moved to `rules` prop.\n`",name:"max",required:!1,type:{name:"ValidationRule<string | number>"}},min:{defaultValue:null,description:"The minimum value to accept for this input.\n@deprecated moved to `rules` prop.",name:"min",required:!1,type:{name:"ValidationRule<string | number>"}},maxLength:{defaultValue:null,description:"The maximum length of the value to accept for this input.\n@deprecated moved to `rules` prop.",name:"maxLength",required:!1,type:{name:"ValidationRule<number>"}},minLength:{defaultValue:null,description:"The minimum length of the value to accept for this input.\n@deprecated moved to `rules` prop.",name:"minLength",required:!1,type:{name:"ValidationRule<number>"}},validate:{defaultValue:null,description:"@deprecated moved to `rules` prop.",name:"validate",required:!1,type:{name:"Validate<any, FieldValues> | Record<string, Validate<any, FieldValues>>"}},deps:{defaultValue:null,description:"@deprecated moved to `rules` prop.",name:"deps",required:!1,type:{name:"string | string[]"}},required:{defaultValue:null,description:"If `true`, will add required asterisk to `label` and `aria-required` to `input`.\n@deprecated There has been a collision of properties. The boolean value\nto mark the input as required will remain in future versions, but the\nrequired object for `react-hook-form` has been moved to the `rules` prop.",name:"required",required:!1,type:{name:"string | ValidationRule<boolean>"}}}}}catch{}export{f as C,m as a};
