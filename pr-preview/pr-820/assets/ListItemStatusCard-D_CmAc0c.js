import{j as a}from"./jsx-runtime-BTJTZTIL.js";import{r as u}from"./index-BgYLq7fD.js";import{u as c}from"./useThemeProps-BGrMtKaW.js";import{s as r}from"./styled-CKuRQFSa.js";import{L as p}from"./ListItem-DmlIfW5v.js";const m=r(p,{name:"AvListItemStatusCard",slot:"root",overridesResolver:(e,t)=>[t.root,e.color&&t.color]})(({theme:e,ownerState:t})=>({backgroundColor:e.palette.background.paper,border:`1px solid ${e.palette.divider}`,borderRadius:"4px",marginBottom:"4px",paddingLeft:"8px","&.MuiListItem-padding.MuiListItem-gutters":{paddingLeft:"calc(16px + 8px)"},...t.color&&t.color!=="default"&&{".AvListItemStatusCard-statusAccent":{backgroundColor:`${e.palette[t.color].main}`}}})),f=r("div",{name:"AvListItemStatusCard",slot:"statusAccent",overridesResolver:(e,t)=>[t.statusAccent,e.color&&t.color]})(({theme:e})=>({position:"absolute",left:0,top:0,height:"100%",width:"8px",backgroundColor:e.palette.divider,backgroundClip:"border-box",borderTopLeftRadius:"3px",borderBottomLeftRadius:"3px",content:"''"})),s=u.forwardRef((e,t)=>{const{alignItems:o="flex-start",children:n,color:i,...l}=e,d={...c({props:e,name:"AvListItemStatusCard"}),color:i};return a.jsxs(m,{alignItems:o,divider:!1,ownerState:d,...l,ref:t,children:[a.jsx(f,{className:"AvListItemStatusCard-statusAccent"}),n]})});try{s.displayName="ListItemStatusCard",s.__docgenInfo={description:"A list item with card styling and status accent. Should always be used with corresponding child `StatusChip` to explain status without relying on color for accessibility.\n\nRenders as an `<li>` by default.",displayName:"ListItemStatusCard",props:{children:{defaultValue:null,description:"The content of the component if a `ListItemSecondaryAction` is used it must\nbe the last child.",name:"children",required:!1,type:{name:"ReactNode"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<ListItemClasses> & Partial<ClassNameMap<never>>"}},alignItems:{defaultValue:{value:"'center'"},description:"Defines the `align-items` style property.",name:"alignItems",required:!1,type:{name:'"center" | "flex-start"'}},color:{defaultValue:null,description:"Color of status accent. Should match child `StatusChip`.",name:"color",required:!1,type:{name:'"primary" | "secondary" | "success" | "error" | "info" | "warning" | "default"'}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},dense:{defaultValue:{value:"false"},description:"If `true`, compact vertical padding designed for keyboard and mouse input is used.\nThe prop defaults to the value inherited from the parent List component.",name:"dense",required:!1,type:{name:"boolean"}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"{ root?: ElementType<any, keyof IntrinsicElements>; }"}},slotProps:{defaultValue:{value:"{}"},description:`The extra props for the slot components.
You can override the existing props or add new ones.`,name:"slotProps",required:!1,type:{name:"{ root?: HTMLAttributes<HTMLDivElement> & ListItemComponentsPropsOverrides; }"}},disableGutters:{defaultValue:{value:"false"},description:"If `true`, the left and right padding is removed.",name:"disableGutters",required:!1,type:{name:"boolean"}},disablePadding:{defaultValue:{value:"false"},description:"If `true`, all padding is removed.",name:"disablePadding",required:!1,type:{name:"boolean"}},secondaryAction:{defaultValue:null,description:"The element to display at the end of ListItem.",name:"secondaryAction",required:!1,type:{name:"ReactNode"}}}}}catch{}export{s as L};
