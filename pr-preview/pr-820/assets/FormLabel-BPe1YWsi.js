import{j as r}from"./jsx-runtime-BTJTZTIL.js";import{r as d}from"./index-BgYLq7fD.js";import{F as p}from"./FieldHelpIcon-CaoA1T49.js";import{s as u}from"./styled-CKuRQFSa.js";import{F as m}from"./FormLabel-BDxB3zbH.js";const c=u("div",{name:"MuiFormLabel",slot:"AvWrapper",overridesResolver:(e,a)=>a.avWrapper})({}),f={position:"relative !important",transform:"none !important",transition:"none !important",animation:"none !important"},o=d.forwardRef((e,a)=>{const{helpTopicId:t,id:i,sx:n,...l}=e,s=i||(l.htmlFor?`${l.htmlFor}-label`:void 0);return r.jsxs(c,{className:"MuiFormLabel-avWrapper",sx:n,children:[r.jsx(m,{id:s,sx:{...f},...l,ref:a}),t?r.jsx(p,{helpTopicId:t,labelId:s,sx:{px:.5}}):null]})});try{o.displayName="FormLabel",o.__docgenInfo={description:"",displayName:"FormLabel",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<FormLabelClasses> & Partial<ClassNameMap<never>>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},error:{defaultValue:null,description:"If `true`, the label is displayed in an error state.",name:"error",required:!1,type:{name:"boolean"}},disabled:{defaultValue:null,description:"If `true`, the label should be displayed in a disabled state.",name:"disabled",required:!1,type:{name:"boolean"}},required:{defaultValue:null,description:"If `true`, the label will indicate that the `input` is required.",name:"required",required:!1,type:{name:"boolean"}},filled:{defaultValue:null,description:"If `true`, the label should use filled classes key.",name:"filled",required:!1,type:{name:"boolean"}},focused:{defaultValue:null,description:"If `true`, the input of this label is focused (used by `FormGroup` components).",name:"focused",required:!1,type:{name:"boolean"}},helpTopicId:{defaultValue:null,description:"Adds `FieldHelpIcon` next to the label (should not be within label for accessibility)",name:"helpTopicId",required:!1,type:{name:"string"}}}}}catch{}export{o as F};
