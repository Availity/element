import{j as t}from"./jsx-runtime-BTJTZTIL.js";import{r as d}from"./index-BgYLq7fD.js";import{g as v,c as w}from"./generateUtilityClass-BeVSWKCg.js";import{b as x}from"./TableCell-Dihxu9Xc.js";import{g as C}from"./generateUtilityClasses-whvyra8-.js";import{u as q}from"./DefaultPropsProvider-CWkNlXkE.js";import{s as V,c as S}from"./styled-CKuRQFSa.js";import{T as E,P as _}from"./index-gxJLJfN6.js";import{d as F}from"./index-DNupz-aR.js";import{e as M}from"./index-CIzqi3uD.js";function I(e){return v("MuiTableFooter",e)}C("MuiTableFooter",["root"]);const R=e=>{const{classes:a}=e;return S({root:["root"]},I,a)},N=V("tfoot",{name:"MuiTableFooter",slot:"Root",overridesResolver:(e,a)=>a.root})({display:"table-footer-group"}),k={variant:"footer"},m="tfoot",A=d.forwardRef(function(a,o){const r=q({props:a,name:"MuiTableFooter"}),{className:s,component:n=m,...i}=r,l={...r,component:n},p=R(l);return t.jsx(x.Provider,{value:k,children:t.jsx(N,{as:n,className:w(p.root,s),ref:o,role:n===m?null:"rowgroup",ownerState:l,...i})})}),f=e=>t.jsx(A,{...e});try{f.displayName="TableFooter",f.__docgenInfo={description:"",displayName:"TableFooter",props:{component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<TableCellBaseProps> & ElementType<any, keyof IntrinsicElements>"}},children:{defaultValue:null,description:"The content of the component, normally `TableRow`.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<TableFooterClasses> & Partial<ClassNameMap<never>>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLTableSectionElement>"}}}}}catch{}const j=e=>t.jsx(M,{fontSize:"xxsmall",sx:{marginRight:"4px"},...e}),h=d.forwardRef((e,a)=>{const{Actions:o,paginationProps:r,...s}=e,[n,i]=d.useState(!1),l=p=>{const{count:u,page:g,rowsPerPage:c,onPageChange:y,nextIconButtonProps:O,backIconButtonProps:z,slotProps:L,...b}=p;return t.jsxs(t.Fragment,{children:[typeof u=="number"&&u/c>1?t.jsx(_,{...b,...r,count:Math.ceil(Math.abs(u/c)),page:g+1,onChange:(T,P)=>{y(T,P-1)}}):null,o||null]})};return t.jsx(E,{ActionsComponent:l,...s,slotProps:{select:{IconComponent:j,...F(n,i)}},ref:a})});try{h.displayName="TablePagination",h.__docgenInfo={description:"",displayName:"TablePagination",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<TablePaginationClasses> & Partial<ClassNameMap<never>>"}},padding:{defaultValue:null,description:"Sets the padding applied to the cell.\nThe prop defaults to the value (`'default'`) inherited from the parent Table component.",name:"padding",required:!1,type:{name:'"none" | "normal" | "checkbox"'}},page:{defaultValue:null,description:"The zero-based index of the current page.",name:"page",required:!0,type:{name:"number"}},align:{defaultValue:{value:"'inherit'"},description:`Set the text-align on the table cell content.

Monetary or generally number fields **should be right aligned** as that allows
you to add them up quickly in your head without having to worry about decimals.`,name:"align",required:!1,type:{name:'"right" | "left" | "center" | "inherit" | "justify"'}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},variant:{defaultValue:null,description:`Specify the cell type.
The prop defaults to the value inherited from the parent TableHead, TableBody, or TableFooter components.`,name:"variant",required:!1,type:{name:'OverridableStringUnion<"body" | "footer" | "head", TableCellPropsVariantOverrides>'}},component:{defaultValue:null,description:"",name:"component",required:!1,type:{name:"ElementType<TableCellBaseProps> & ElementType<any, keyof IntrinsicElements>"}},disabled:{defaultValue:{value:"false"},description:"If `true`, the component is disabled.",name:"disabled",required:!1,type:{name:"boolean"}},size:{defaultValue:null,description:"Specify the size of the cell.\nThe prop defaults to the value (`'medium'`) inherited from the parent Table component.",name:"size",required:!1,type:{name:'OverridableStringUnion<"small" | "medium", TableCellPropsSizeOverrides>'}},scope:{defaultValue:null,description:"Set scope attribute.",name:"scope",required:!1,type:{name:"string"}},getItemAriaLabel:{defaultValue:{value:"function defaultGetAriaLabel(type) {\nreturn `Go to ${type} page`;\n}"},description:`Accepts a function which returns a string value that provides a user-friendly name for the current page.
This is important for screen reader users.

For localization purposes, you can use the provided [translations](https://mui.com/material-ui/guides/localization/).
@param type The link or button type to format ('first' | 'last' | 'next' | 'previous').
@returns`,name:"getItemAriaLabel",required:!1,type:{name:'(type: "next" | "previous" | "first" | "last") => string'}},count:{defaultValue:null,description:`The total number of rows.

To enable server side pagination for an unknown number of items, provide -1.`,name:"count",required:!0,type:{name:"number"}},sortDirection:{defaultValue:null,description:"Set aria-sort direction.",name:"sortDirection",required:!1,type:{name:"SortDirection"}},onPageChange:{defaultValue:null,description:`Callback fired when the page is changed.
@param event The event source of the callback.
@param page The page selected.`,name:"onPageChange",required:!0,type:{name:"(event: MouseEvent<HTMLButtonElement, MouseEvent>, page: number) => void"}},onRowsPerPageChange:{defaultValue:null,description:`Callback fired when the number of rows per page is changed.
@param event The event source of the callback.`,name:"onRowsPerPageChange",required:!1,type:{name:"ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>"}},rowsPerPage:{defaultValue:null,description:`The number of rows per page.

Set -1 to display all the rows.`,name:"rowsPerPage",required:!0,type:{name:"number"}},rowsPerPageOptions:{defaultValue:{value:"[10, 25, 50, 100]"},description:`Customizes the options of the rows per page select field. If less than two options are
available, no select field will be displayed.
Use -1 for the value with a custom label to show all the rows.`,name:"rowsPerPageOptions",required:!1,type:{name:"readonly (number | { value: number; label: string; })[]"}},Actions:{defaultValue:null,description:"",name:"Actions",required:!1,type:{name:"ReactNode"}},paginationProps:{defaultValue:null,description:"Props applied to the `Pagination` actions element",name:"paginationProps",required:!1,type:{name:"PaginationProps"}}}}}catch{}export{f as T,h as a};
