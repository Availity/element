import{j as e}from"./jsx-runtime-BTJTZTIL.js";import{S as d}from"./index-CIzqi3uD.js";import{S as u,B as c}from"./index-CQspzllj.js";import{T as f}from"./index-DSF7aQ5o.js";import{L as g}from"./LinearProgress-CZqiJK1L.js";import"./index-ChsGqxH_.js";import"./faCircleArrowRight-DSzUu1Qy.js";import"./index-BgYLq7fD.js";import"./_commonjsHelpers-D6-XlEtG.js";import"./faUser-D77uLSLS.js";import"./SvgIcon-CiBNlF9H.js";import"./generateUtilityClass-BeVSWKCg.js";import"./identifier-CudAVvBZ.js";import"./memoTheme-CpoNRPWX.js";import"./styled-CKuRQFSa.js";import"./DefaultPropsProvider-CWkNlXkE.js";import"./generateUtilityClasses-whvyra8-.js";import"./Box-Dv31mJKI.js";import"./useTheme-Ib01SJ3a.js";import"./extendSxProp-BY7TjwKM.js";import"./Grid2-JMPt1-k0.js";import"./useTheme-Cx1wRXKO.js";import"./styled-Dbr83ACF.js";import"./isMuiElement-DiOAsJE6.js";import"./useThemeProps-Do5o_sjG.js";import"./Stack-qbqOHiMo.js";import"./Container-DVbvSSVb.js";import"./Typography-COSof5sR.js";import"./index-DfraP8LW.js";import"./emotion-react.browser.esm-v7Jm8XFw.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./index-DyJdRKzS.js";const s=({variant:r="determinate",value:t=0,sx:m,hidePercentage:l=!1,...p})=>e.jsxs(u,{direction:"row",sx:{alignItems:"center"},children:[e.jsx(c,{sx:{width:"100%",mr:.5},children:e.jsx(g,{variant:r,...p,value:t,color:"success",sx:{width:"100%",...m}})}),t===100&&e.jsx(d,{color:"success","data-icon":"complete"}),!l&&e.jsx(f,{variant:"body2",sx:{color:"text.secondary",ml:1},children:`${Math.round(t)}%`})]});try{s.displayName="LinearProgress",s.__docgenInfo={description:"",displayName:"LinearProgress",props:{classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<LinearProgressClasses>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},variant:{defaultValue:{value:"determinate"},description:`The variant to use.
Use indeterminate or query when there is no progress value.`,name:"variant",required:!1,type:{name:'OverridableStringUnion<"indeterminate" | "determinate" | "buffer" | "query", LinearProgressPropsVariantOverrides>'}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}},value:{defaultValue:{value:"0"},description:`The value of the progress indicator for the determinate and buffer variants.
Value between 0 and 100.`,name:"value",required:!1,type:{name:"number"}},valueBuffer:{defaultValue:null,description:`The value for the buffer variant.
Value between 0 and 100.`,name:"valueBuffer",required:!1,type:{name:"number"}},hidePercentage:{defaultValue:{value:"false"},description:"",name:"hidePercentage",required:!1,type:{name:"boolean"}}}}}catch{}const K={title:"Components/Progress/LinearProgress",component:s,tags:["autodocs"]},a={render:r=>e.jsx(s,{...r}),args:{value:50,"aria-label":"example-progress-bar"}};var o,i,n;a.parameters={...a.parameters,docs:{...(o=a.parameters)==null?void 0:o.docs,source:{originalSource:`{
  render: (args: LinearProgressProps) => <LinearProgress {...args} />,
  args: {
    value: 50,
    'aria-label': 'example-progress-bar'
  }
}`,...(n=(i=a.parameters)==null?void 0:i.docs)==null?void 0:n.source}}};const Q=["_LinearProgress"];export{a as _LinearProgress,Q as __namedExportsOrder,K as default};
