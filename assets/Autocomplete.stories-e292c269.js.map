{"version":3,"file":"Autocomplete.stories-e292c269.js","sources":["../../../packages/autocomplete/src/lib/Autocomplete.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport {\n  Autocomplete as MuiAutocomplete,\n  AutocompleteProps as MuiAutocompleteProps,\n  AutocompleteRenderInputParams,\n  AutocompletePropsSizeOverrides,\n  IconButton as MuiIconButton,\n  IconButtonProps as MuiIconButtonProps,\n  ChipTypeMap,\n} from '@mui/material';\nimport { OverridableStringUnion } from '@mui/types';\nimport { TextField, TextFieldProps } from '@availity/mui-textfield';\nimport { SelectDivider, SelectExpandIcon } from '@availity/mui-form-utils';\n\nexport interface AutocompleteProps<\n  T,\n  Multiple extends boolean | undefined,\n  DisableClearable extends boolean | undefined,\n  FreeSolo extends boolean | undefined,\n  ChipComponent extends React.ElementType = ChipTypeMap['defaultComponent']\n> extends Omit<\n    MuiAutocompleteProps<T, Multiple, DisableClearable, FreeSolo, ChipComponent>,\n    | 'clearIcon'\n    | 'clearText'\n    | 'closeText'\n    | 'componentsProps'\n    | 'disabledItemsFocusable'\n    | 'forcePopupIcon'\n    | 'fullWidth'\n    | 'handleHomeEndKeys'\n    | 'includeInputInList'\n    | 'openOnFocus'\n    | 'openText'\n    | 'PaperComponent'\n    | 'PopperComponent'\n    | 'popupIcon'\n    | 'selectOnFocus'\n    | 'size'\n    | 'renderInput'\n    | 'slotProps'\n  > {\n  /** Props applied to the `TextField` component */\n  FieldProps?: TextFieldProps;\n  name?: string;\n}\n\nconst PopupIndicatorWrapper = forwardRef<HTMLButtonElement, MuiIconButtonProps>((props, ref) => (\n  <>\n    <SelectDivider orientation=\"vertical\" className=\"MuiSelect-avEndAdornmentDivider\" />\n    <MuiIconButton {...props} ref={ref} />\n  </>\n));\n\nexport const Autocomplete = <\n  T,\n  Multiple extends boolean | undefined = false,\n  DisableClearable extends boolean | undefined = false,\n  FreeSolo extends boolean | undefined = false,\n  ChipComponent extends React.ElementType = ChipTypeMap['defaultComponent']\n>({\n  FieldProps,\n  ...props\n}: AutocompleteProps<T, Multiple, DisableClearable, FreeSolo, ChipComponent>): JSX.Element => {\n  // Availity desired default props are not making it into component context through theme defaultProps.\n  // Can be overridden by props passed to TextField through `FieldProps`.\n  const defaultProps = {\n    fullWidth: true,\n    size: 'small' as OverridableStringUnion<'small' | 'medium', AutocompletePropsSizeOverrides>,\n  };\n\n  const resolvedProps = (params: AutocompleteRenderInputParams) => ({\n    InputProps: {\n      ...FieldProps?.InputProps,\n      ...params?.InputProps,\n    },\n    inputProps: {\n      ...FieldProps?.inputProps,\n      ...params?.inputProps,\n    },\n  });\n\n  return (\n    <MuiAutocomplete\n      renderInput={(params: AutocompleteRenderInputParams) => (\n        <TextField {...params} {...resolvedProps(params)} {...FieldProps} />\n      )}\n      popupIcon={<SelectExpandIcon className=\"MuiSelect-avExpandIcon\" />}\n      slotProps={{ popupIndicator: { component: PopupIndicatorWrapper } }}\n      {...props}\n      {...defaultProps}\n    />\n  );\n};\n"],"names":["PopupIndicatorWrapper","forwardRef","props","ref","jsxs","Fragment","jsx","SelectDivider","MuiIconButton","Autocomplete","FieldProps","defaultProps","resolvedProps","params","MuiAutocomplete","TextField","SelectExpandIcon"],"mappings":"y/EA8CA,MAAAA,EAAAC,EAAA,WAAA,CAAAC,EAAAC,IAAAC,EAAAC,EAAA,CAAA,SAAA,CAEIC,EAAAC,EAAA,CAAA,YAAA,WAAA,UAAA,kCAAA,EAAkFD,EAAAE,EAAA,CAAA,GAAAN,EAAA,IAAAC,CAAA,CAAA,CAC9C,CAAA,CAAA,CAAA,EAIjCM,EAAA,CAAA,CAML,WAAAC,EACA,GAAAR,CAEF,IAAA,CAGE,MAAAS,EAAA,CAAqB,UAAA,GACR,KAAA,OACL,EAGRC,EAAAC,IAAA,CAAkE,WAAA,CACpD,GAAAH,GAAA,YAAAA,EAAA,WACK,GAAAG,GAAA,YAAAA,EAAA,UACJ,EACb,WAAA,CACY,GAAAH,GAAA,YAAAA,EAAA,WACK,GAAAG,GAAA,YAAAA,EAAA,UACJ,CACb,GAGF,OAAAP,EACEQ,EAAC,CAAA,YAAAD,GAAAP,EAAAS,EAAA,CAAA,GAAAF,EAAA,GAAAD,EAAAC,CAAA,EAAA,GAAAH,CAAA,CAAA,EAEqE,UAAAJ,EAAAU,EAAA,CAAA,UAAA,wBAAA,CAAA,EAEJ,UAAA,CAAA,eAAA,CAAA,UAAAhB,CAAA,CAAA,EACE,GAAAE,EAC9D,GAAAS,CACA,CAAA,CAGV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}