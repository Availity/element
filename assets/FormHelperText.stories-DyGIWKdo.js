import{j as r}from"./jsx-runtime-CcL-W3nW.js";import"./FieldHelpIcon-odLvbeOS.js";import{F}from"./FormLabel-D8J8GiED.js";import{F as o}from"./Switch-DVMSTJBw.js";import{I as f}from"./Input--PIJVhSZ.js";import"./index-BtPDELIe.js";import{F as T}from"./FormControl-BPSU2g7t.js";import"./index-DcWiA9TO.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-DMWJB0MK.js";import"./index-BTr7iyfv.js";import"./faCircleArrowRight-6L8v8FIg.js";import"./faUser-DXPB7Q64.js";import"./faSortDown-nq-jkck6.js";import"./SvgIcon-DSdWmKAH.js";import"./generateUtilityClass-CVWqFxsA.js";import"./identifier-Dtqimryx.js";import"./memoTheme-D-rVhYRp.js";import"./styled-CF1hcdwO.js";import"./DefaultPropsProvider-_cNB_dWy.js";import"./generateUtilityClasses-BGOCnVj7.js";import"./index-dekIPCUU.js";import"./Tooltip-CiiaKkqp.js";import"./index-nos-0K8U.js";import"./useTheme-DUkCvbx_.js";import"./useTheme-C2CrmYKc.js";import"./useSlot-DnkSxE3X.js";import"./resolveComponentProps-Dg20wxiM.js";import"./useForkRef-BVrIj09m.js";import"./useTimeout-B8wmcRZV.js";import"./useEnhancedEffect-D2f2tbda.js";import"./useControlled-WdbyInBW.js";import"./useId-DszduLV4.js";import"./getReactElementRef-AnOffBoZ.js";import"./Portal-CBAx_nZm.js";import"./utils-D5ZkK9XY.js";import"./objectWithoutPropertiesLoose-CAYKN5F1.js";import"./TransitionGroupContext-D-IBNIfW.js";import"./index-BEx9gAkE.js";import"./ownerDocument-DW-IO8s5.js";import"./useSlotProps-BAIpVL6Y.js";import"./isFocusVisible-B8k4qzLc.js";import"./IconButton-Caxu-qgA.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./ButtonBase-DbVRbsLs.js";import"./emotion-react.browser.esm-CU7ej9d2.js";import"./CircularProgress-D8w9ZPs6.js";import"./Button-DDPbJ3HZ.js";import"./LoadingButton-BRK58AHE.js";import"./FormControlLabel-GqYWwHWT.js";import"./formControlState-Dq1zat_P.js";import"./useFormControl-68oiojFJ.js";import"./Typography-CvSvtD2a.js";import"./index-f0Aa_BgU.js";import"./extendSxProp-B5AgUjQT.js";import"./Box-DWnb8VZB.js";import"./FormLabel-98YPf6ct.js";import"./RadioGroup-BogPRRDq.js";import"./SwitchBase-Z9YgLJlx.js";import"./createSvgIcon-TketyoFF.js";import"./createChainedFunction-BO_9K8Jh.js";import"./Select-hLZ2S4VH.js";import"./Menu-Byu17A6t.js";import"./Popover-ChEuM7rO.js";import"./isHostComponent-DVu5iVWx.js";import"./ownerWindow-HkKU3E4x.js";import"./debounce-Be36O1Ab.js";import"./Paper-DXcIEVia.js";import"./Modal-B5s0Thvt.js";import"./Backdrop-B4gbyDGC.js";import"./Fade-Dl4gmST4.js";import"./List-ChBzRQcW.js";import"./utils-DoM3o7-Q.js";import"./OutlinedInput-CQlxW3ax.js";import"./Stack-BcsM4Vc0.js";import"./styled-vBjI3IQc.js";import"./useThemeProps-BIK-1DKm.js";import"./Divider-jUONNV4j.js";import"./dividerClasses-BmOcEkDu.js";import"./faCheck-B05F4ORy.js";import"./Switch-BqVUWLaW.js";import"./isMuiElement-DAzOCCHH.js";const Mr={title:"Form Components/FormUtils/FormHelperText",component:o,tags:["autodocs"],parameters:{docs:{description:{component:"Label component for use with individual inputs, form controls,  and form groups. For labels to use with `checkbox`/`radio` see `FormControlLabel`."}}}},t={render:u=>r.jsx(o,{...u}),args:{children:"This text is a child of FormHelperText"}},e={render:()=>r.jsxs(r.Fragment,{children:[r.jsx(o,{children:"Default"}),r.jsx(o,{error:!0,children:"Error"})]})},m={render:()=>r.jsxs(T,{error:!0,size:"small",children:[r.jsx(F,{htmlFor:"field-1",helpTopicId:"1234",children:"Example"}),r.jsx(f,{id:"field-1",defaultValue:"default value"}),r.jsx(o,{children:"Helper Text"})]})};var p,i,s;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  render: (args: FormHelperTextProps) => <FormHelperText {...args} />,
  args: {
    children: 'This text is a child of FormHelperText'
  }
}`,...(s=(i=t.parameters)==null?void 0:i.docs)==null?void 0:s.source}}};var a,l,n;e.parameters={...e.parameters,docs:{...(a=e.parameters)==null?void 0:a.docs,source:{originalSource:`{
  render: () => <>
      <FormHelperText>Default</FormHelperText>
      <FormHelperText error>Error</FormHelperText>
    </>
}`,...(n=(l=e.parameters)==null?void 0:l.docs)==null?void 0:n.source}}};var d,c,x;m.parameters={...m.parameters,docs:{...(d=m.parameters)==null?void 0:d.docs,source:{originalSource:`{
  render: () => <FormControl error size="small">
      <FormLabel htmlFor="field-1" helpTopicId="1234">
        Example
      </FormLabel>
      <Input id="field-1" defaultValue="default value" />
      <FormHelperText>Helper Text</FormHelperText>
    </FormControl>
}`,...(x=(c=m.parameters)==null?void 0:c.docs)==null?void 0:x.source}}};const Nr=["_FormHelperText","_States","_Controls"];export{m as _Controls,t as _FormHelperText,e as _States,Nr as __namedExportsOrder,Mr as default};
