import{j as o}from"./jsx-runtime-CcL-W3nW.js";import{u as g,g as w,a as S,T as P,b as p}from"./TabList-3n6T6Cz4.js";import{s as x}from"./Tab-CC5C3tRu.js";import{s,c as q}from"./styled-CF1hcdwO.js";import{r as C}from"./index-DcWiA9TO.js";import{g as V,c as I}from"./generateUtilityClass-CVWqFxsA.js";import{g as _}from"./generateUtilityClasses-BGOCnVj7.js";import{u as B}from"./useThemeProps-NV-uCBd-.js";function M(e){return V("MuiTabPanel",e)}_("MuiTabPanel",["root","hidden"]);const N=e=>{const{classes:a,hidden:t}=e;return q({root:["root",t&&"hidden"]},M,a)},k=s("div",{name:"MuiTabPanel",slot:"Root",overridesResolver:(e,a)=>a.root})(({theme:e})=>({padding:e.spacing(3)})),E=C.forwardRef(function(a,t){const r=B({props:a,name:"MuiTabPanel"}),{children:m,className:f,value:n,keepMounted:b=!1,...h}=r,i={...r},y=N(i),l=g();if(l===null)throw new TypeError("No TabContext provided");const v=w(l,n),T=S(l,n);return o.jsx(k,{"aria-labelledby":T,className:I(y.root,f),hidden:n!==l.value,id:v,ref:t,role:"tabpanel",ownerState:i,...h,children:(b||n===l.value)&&m})}),d=({children:e,...a})=>o.jsx(P,{...a,children:e});try{d.displayName="TabContext",d.__docgenInfo={description:"",displayName:"TabContext",props:{children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},value:{defaultValue:null,description:"The value of the currently selected `Tab`.",name:"value",required:!0,type:{name:"string | number"}}}}}catch{}const R=s(p,{name:"MuiTabs",slot:"AvPrimary",overridesResolver:(e,a)=>a.avPrimary})({}),O=s(p,{name:"MuiTabs",slot:"AvSecondary",overridesResolver:(e,a)=>a.avSecondary})(x),u=({level:e="primary",...a})=>{const t=e==="primary"?R:O;return o.jsx(t,{...a,orientation:"horizontal",centered:!1})};try{u.displayName="TabList",u.__docgenInfo={description:"",displayName:"TabList",props:{variant:{defaultValue:{value:"'standard'"},description:"Determines additional display behavior of the tabs:\n\n- `scrollable` will invoke scrolling properties and allow for horizontally\nscrolling (or swiping) of the tab bar.\n- `fullWidth` will make the tabs grow to use all the available space,\nwhich should be used for small views, like on mobile.\n- `standard` will render the default state.",name:"variant",required:!1,type:{name:'"fullWidth" | "standard" | "scrollable"'}},slots:{defaultValue:{value:"{}"},description:"The components used for each slot inside.",name:"slots",required:!1,type:{name:"{ StartScrollButtonIcon?: ElementType<any, keyof IntrinsicElements>; EndScrollButtonIcon?: ElementType<any, keyof IntrinsicElements>; }"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<TabsClasses> & Partial<ClassNameMap<never>>"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},style:{defaultValue:null,description:"",name:"style",required:!1,type:{name:"CSSProperties"}},children:{defaultValue:null,description:"A list of `<Tab />` elements.",name:"children",required:!1,type:{name:"ReactNode"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<HTMLDivElement>"}},"aria-label":{defaultValue:null,description:"The label for the Tabs as a string.",name:"aria-label",required:!1,type:{name:"string"}},"aria-labelledby":{defaultValue:null,description:"An id or list of ids separated by a space that label the Tabs.",name:"aria-labelledby",required:!1,type:{name:"string"}},onChange:{defaultValue:null,description:`Callback fired when the value changes.
@param event The event source of the callback. **Warning**: This is a generic event not a change event.
@param value We default to the index of the child (number)`,name:"onChange",required:!1,type:{name:"(event: SyntheticEvent<Element, Event>, value: any) => void"}},action:{defaultValue:null,description:"Callback fired when the component mounts.\nThis is useful when you want to trigger an action programmatically.\nIt supports two actions: `updateIndicator()` and `updateScrollButtons()`\n@param actions This object contains all possible actions\nthat can be triggered programmatically.",name:"action",required:!1,type:{name:"Ref<TabsActions>"}},slotProps:{defaultValue:{value:"{}"},description:`The extra props for the slot components.
You can override the existing props or add new ones.`,name:"slotProps",required:!1,type:{name:'{ startScrollButtonIcon?: SlotComponentProps<OverridableComponent<SvgIconTypeMap<{}, "svg">> & { muiName: string; }, TabsStartScrollButtonIconSlotPropsOverrides, TabsOwnerState>; endScrollButtonIcon?: SlotComponentProps<...>; }'}},allowScrollButtonsMobile:{defaultValue:{value:"false"},description:"If `true`, the scroll buttons aren't forced hidden on mobile.\nBy default the scroll buttons are hidden on mobile and takes precedence over `scrollButtons`.",name:"allowScrollButtonsMobile",required:!1,type:{name:"boolean"}},indicatorColor:{defaultValue:{value:"'primary'"},description:"Determines the color of the indicator.",name:"indicatorColor",required:!1,type:{name:'OverridableStringUnion<"primary" | "secondary", TabsPropsIndicatorColorOverrides>'}},ScrollButtonComponent:{defaultValue:{value:"TabScrollButton"},description:"The component used to render the scroll buttons.",name:"ScrollButtonComponent",required:!1,type:{name:"ElementType<any, keyof IntrinsicElements>"}},scrollButtons:{defaultValue:{value:"'auto'"},description:"Determine behavior of scroll buttons when tabs are set to scroll:\n\n- `auto` will only present them when not all the items are visible.\n- `true` will always present them.\n- `false` will never present them.\n\nBy default the scroll buttons are hidden on mobile.\nThis behavior can be disabled with `allowScrollButtonsMobile`.",name:"scrollButtons",required:!1,type:{name:'boolean | "auto"'}},selectionFollowsFocus:{defaultValue:null,description:"If `true` the selected tab changes on focus. Otherwise it only\nchanges on activation.",name:"selectionFollowsFocus",required:!1,type:{name:"boolean"}},TabIndicatorProps:{defaultValue:{value:"{}"},description:"Props applied to the tab indicator element.",name:"TabIndicatorProps",required:!1,type:{name:"HTMLAttributes<HTMLDivElement> & { sx?: SxProps<Theme>; }"}},TabScrollButtonProps:{defaultValue:{value:"{}"},description:"Props applied to the [`TabScrollButton`](https://mui.com/material-ui/api/tab-scroll-button/) element.",name:"TabScrollButtonProps",required:!1,type:{name:"Partial<TabScrollButtonProps>"}},textColor:{defaultValue:{value:"'primary'"},description:"Determines the color of the `Tab`.",name:"textColor",required:!1,type:{name:'"inherit" | "primary" | "secondary"'}},visibleScrollbar:{defaultValue:{value:"false"},description:"If `true`, the scrollbar is visible. It can be useful when displaying\na long vertical list of tabs.",name:"visibleScrollbar",required:!1,type:{name:"boolean"}},level:{defaultValue:{value:"primary"},description:"The hierarchy level of the tabs, i.e. `primary` for top level tabs, `secondary` for inner tabs.",name:"level",required:!1,type:{name:'"primary" | "secondary"'}}}}}catch{}const c=({children:e,...a})=>o.jsx(E,{...a,children:e});try{c.displayName="TabPanel",c.__docgenInfo={description:"",displayName:"TabPanel",props:{children:{defaultValue:null,description:"The content of the component.",name:"children",required:!1,type:{name:"ReactNode"}},classes:{defaultValue:null,description:"Override or extend the styles applied to the component.",name:"classes",required:!1,type:{name:"Partial<TabPanelClasses>"}},sx:{defaultValue:null,description:"The system prop that allows defining system overrides as well as additional CSS styles.",name:"sx",required:!1,type:{name:"SxProps<Theme>"}},value:{defaultValue:null,description:"The `value` of the corresponding `Tab`. Must use the index of the `Tab` when\nno `value` was passed to `Tab`.",name:"value",required:!0,type:{name:"string"}},keepMounted:{defaultValue:{value:"false"},description:"Always keep the children in the DOM.",name:"keepMounted",required:!1,type:{name:"boolean"}},ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"Ref<unknown>"}}}}}catch{}export{d as T,u as a,c as b};
