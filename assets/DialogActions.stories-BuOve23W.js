import{j as t}from"./jsx-runtime-BTJTZTIL.js";import{B as n}from"./index-CQspzllj.js";import{B as a}from"./index-DnNfvsmq.js";import{D as p}from"./DialogActions-ChUhI-lX.js";import"./index-ChsGqxH_.js";import"./index-BgYLq7fD.js";import"./_commonjsHelpers-D6-XlEtG.js";import"./Box-Dv31mJKI.js";import"./identifier-CudAVvBZ.js";import"./generateUtilityClasses-whvyra8-.js";import"./generateUtilityClass-BeVSWKCg.js";import"./useTheme-Ib01SJ3a.js";import"./extendSxProp-BY7TjwKM.js";import"./Grid2-JMPt1-k0.js";import"./useTheme-Cx1wRXKO.js";import"./DefaultPropsProvider-CWkNlXkE.js";import"./styled-Dbr83ACF.js";import"./styled-CKuRQFSa.js";import"./isMuiElement-DiOAsJE6.js";import"./useThemeProps-Do5o_sjG.js";import"./Stack-qbqOHiMo.js";import"./Container-DVbvSSVb.js";import"./Tooltip-CIyLwlBA.js";import"./index-DyJdRKzS.js";import"./memoTheme-CpoNRPWX.js";import"./useSlot-1VRyIerd.js";import"./resolveComponentProps-CCNxqvxI.js";import"./useForkRef-Dz4aGlyk.js";import"./useTimeout-iC_34LsC.js";import"./useEnhancedEffect-j2zQLnYm.js";import"./useControlled-DxC1uCGX.js";import"./useId-DIK8ekB4.js";import"./getReactElementRef-Df0xbma2.js";import"./Portal-C2J4q3Ji.js";import"./utils-tFrEP9Vf.js";import"./objectWithoutPropertiesLoose-Dsqj8S3w.js";import"./TransitionGroupContext-BKlA24Pm.js";import"./index-Bxu_udwM.js";import"./index-DdXvKv-Q.js";import"./ownerDocument-DW-IO8s5.js";import"./useSlotProps-BmqT0tgx.js";import"./isFocusVisible-B8k4qzLc.js";import"./IconButton-D_kG6RhR.js";import"./createSimplePaletteValueFilter-bm0fmN_7.js";import"./ButtonBase-D97P5WV0.js";import"./emotion-react.browser.esm-v7Jm8XFw.js";import"./CircularProgress-fcRSDrpN.js";import"./Button-yLAd6_L_.js";import"./LoadingButton-Cl76w144.js";import"./DialogActions-Dj3KiRcY.js";const po={title:"Components/Dialog/DialogActions",component:p,tags:["autodocs"]},o={render:s=>t.jsx(n,{sx:{maxWidth:"250px"},children:t.jsx(p,{...s,children:t.jsx(a,{children:"Action Button"})})}),args:{}};var r,i,m;o.parameters={...o.parameters,docs:{...(r=o.parameters)==null?void 0:r.docs,source:{originalSource:`{
  render: (args: DialogActionsProps) => <Box sx={{
    maxWidth: '250px'
  }}>
      <DialogActions {...args}>
        <Button>Action Button</Button>
      </DialogActions>
    </Box>,
  args: {}
}`,...(m=(i=o.parameters)==null?void 0:i.docs)==null?void 0:m.source}}};const so=["_DialogActions"];export{o as _DialogActions,so as __namedExportsOrder,po as default};
