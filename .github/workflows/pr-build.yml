# This workflow will do a clean install of node dependencies, build the source code, and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build PR

# If adding a step that requires SECRETS or WRITE ACCESS be sure to have dependabot skip it.
# > if: ${{ github.actor != 'dependabot[bot]' }}

on:
  pull_request:
    branches: [main]

jobs:
  # This job will:
  #   * build each package
  #   * run unit tests
  #   * run the linter
  build:
    runs-on: ${{ matrix.os }}
    env:
      NODE_OPTIONS: '--max-old-space-size=6144'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node: [18, 20, 22]

    steps:
      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@826660b82addbef3abff5fa871492ebad618c9e1 # v4.3.3

      - name: Set Node Version
        uses: actions/setup-node@2028fbc5c25fe9cf00d9f06a71cc4710d4507903 # v6.0.0
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Restore yarn cache
        uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{ matrix.node }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node }}-yarn-

      # - name: Artifactory Check
      #   run: yarn check:registry

      - name: Install Dependencies
        run: yarn install --immutable

      - name: Build packages
        run: yarn build

      - name: Build Docs
        if: ${{ matrix.node == 22 }}
        run: yarn build:storybook

      - name: Lint
        run: yarn lint:affected

      - name: Unit Test
        run: yarn test:affected

      - name: Version Bump Dry Run
        run: yarn version:dry-run

      # - name: Upload coverage report
      #   uses: codecov/codecov-action@v3 # FIXME: no CI provider detected
      #   with:
      #     file: ./coverage/coverage-final.json
      #     token: ${{ secrets.CODECOV_TOKEN }}

      # - name: Build Docs (Node 16+ Only)
      #   if: ${{matrix.node > 14}}
      #   run: yarn build:docs

      # - name: Build Storybook
      #   run: yarn build:storybook
